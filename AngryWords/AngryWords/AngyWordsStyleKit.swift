//
//  AngyWordsStyleKit.swift
//  AngryWords
//
//  Created by RPKH on 24.10.14.
//  Copyright (c) 2014 Babbel. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class AngyWordsStyleKit : NSObject {

    //// Cache

    private struct Cache {
        static var babbelOrange: UIColor = UIColor(red: 1.000, green: 0.553, blue: 0.082, alpha: 1.000)
        static var babbelOrange75: UIColor = UIColor(red: 1.000, green: 0.659, blue: 0.322, alpha: 1.000)
        static var babbelOrange50: UIColor = UIColor(red: 1.000, green: 0.776, blue: 0.549, alpha: 1.000)
        static var babbelOrange25: UIColor = UIColor(red: 1.000, green: 0.886, blue: 0.773, alpha: 1.000)
        static var babbelLightOrange: UIColor = UIColor(red: 0.980, green: 0.667, blue: 0.106, alpha: 1.000)
        static var babbelLightOrange75: UIColor = UIColor(red: 1.000, green: 0.749, blue: 0.318, alpha: 1.000)
        static var babbelLightOrange50: UIColor = UIColor(red: 1.000, green: 0.831, blue: 0.545, alpha: 1.000)
        static var babbelLightOrange25: UIColor = UIColor(red: 1.000, green: 0.918, blue: 0.773, alpha: 1.000)
        static var babbelYellow: UIColor = UIColor(red: 1.000, green: 0.784, blue: 0.204, alpha: 1.000)
        static var babbelYellow75: UIColor = UIColor(red: 1.000, green: 0.835, blue: 0.435, alpha: 1.000)
        static var babbelYellow50: UIColor = UIColor(red: 1.000, green: 0.941, blue: 0.773, alpha: 1.000)
        static var babbelYellow25: UIColor = UIColor(red: 1.000, green: 0.973, blue: 0.890, alpha: 1.000)
        static var babbelRed: UIColor = UIColor(red: 0.806, green: 0.188, blue: 0.066, alpha: 1.000)
        static var babbelRed75: UIColor = UIColor(red: 0.949, green: 0.478, blue: 0.388, alpha: 1.000)
        static var babbelRed50: UIColor = UIColor(red: 0.965, green: 0.655, blue: 0.592, alpha: 1.000)
        static var babbelRed25: UIColor = UIColor(red: 0.980, green: 0.824, blue: 0.796, alpha: 1.000)
        static var babbelGreen: UIColor = UIColor(red: 0.176, green: 0.761, blue: 0.463, alpha: 1.000)
        static var babbelGreen75: UIColor = UIColor(red: 0.424, green: 0.812, blue: 0.588, alpha: 1.000)
        static var babbelGreen50: UIColor = UIColor(red: 0.616, green: 0.875, blue: 0.725, alpha: 1.000)
        static var babbelgreen25: UIColor = UIColor(red: 0.808, green: 0.933, blue: 0.859, alpha: 1.000)
        static var babbelBlue: UIColor = UIColor(red: 0.251, green: 0.729, blue: 0.855, alpha: 1.000)
        static var babbelBlue75: UIColor = UIColor(red: 0.408, green: 0.812, blue: 0.918, alpha: 1.000)
        static var babbelBlue50: UIColor = UIColor(red: 0.604, green: 0.875, blue: 0.941, alpha: 1.000)
        static var babbelBlue25: UIColor = UIColor(red: 0.800, green: 0.937, blue: 0.973, alpha: 1.000)
        static var babbelBeige: UIColor = UIColor(red: 0.929, green: 0.922, blue: 0.882, alpha: 1.000)
        static var babbelBeige75: UIColor = UIColor(red: 0.949, green: 0.945, blue: 0.910, alpha: 1.000)
        static var babbelBeige50: UIColor = UIColor(red: 0.965, green: 0.965, blue: 0.937, alpha: 1.000)
        static var babbelBeige25: UIColor = UIColor(red: 0.984, green: 0.980, blue: 0.973, alpha: 1.000)
        static var babbelGray: UIColor = UIColor(red: 0.447, green: 0.447, blue: 0.404, alpha: 1.000)
        static var babbelGray75: UIColor = UIColor(red: 0.588, green: 0.584, blue: 0.549, alpha: 1.000)
        static var babbelGray50: UIColor = UIColor(red: 0.725, green: 0.725, blue: 0.698, alpha: 1.000)
        static var babbelGray25: UIColor = UIColor(red: 0.863, green: 0.863, blue: 0.851, alpha: 1.000)
        static var babbelFontDarkGray: UIColor = UIColor(red: 0.204, green: 0.204, blue: 0.204, alpha: 1.000)
        static var babbelFontGray: UIColor = UIColor(red: 0.447, green: 0.447, blue: 0.404, alpha: 1.000)
        static var imageOfCanvasCloud: UIImage?
        static var canvasCloudTargets: [AnyObject]?
        static var imageOfCanvasCactus: UIImage?
        static var canvasCactusTargets: [AnyObject]?
        static var imageOfCanvasStamm: UIImage?
        static var canvasStammTargets: [AnyObject]?
        static var imageOfCanvasSchleuderVorne: UIImage?
        static var canvasSchleuderVorneTargets: [AnyObject]?
        static var imageOfCanvasSchleuderHinten: UIImage?
        static var canvasSchleuderHintenTargets: [AnyObject]?
        static var imageOfCanvasSling: UIImage?
        static var canvasSlingTargets: [AnyObject]?
        static var imageOfCanvasEule: UIImage?
        static var canvasEuleTargets: [AnyObject]?
        static var imageOfCanvasBabbelFigure: UIImage?
        static var canvasBabbelFigureTargets: [AnyObject]?
        static var imageOfCanvasWoodBlockHorizontal: UIImage?
        static var canvasWoodBlockHorizontalTargets: [AnyObject]?
        static var imageOfCanvasWoodBlockVertical: UIImage?
        static var canvasWoodBlockVerticalTargets: [AnyObject]?
        static var imageOfCanvasSand: UIImage?
        static var canvasSandTargets: [AnyObject]?
        static var imageOfCanvasSandLines: UIImage?
        static var canvasSandLinesTargets: [AnyObject]?
        static var imageOfCanvasLetterB: UIImage?
        static var canvasLetterBTargets: [AnyObject]?
        static var imageOfCanvasLetterA: UIImage?
        static var canvasLetterATargets: [AnyObject]?
        static var imageOfCanvasLetterE: UIImage?
        static var canvasLetterETargets: [AnyObject]?
        static var imageOfCanvasLetterL: UIImage?
        static var canvasLetterLTargets: [AnyObject]?
        static var imageOfCanvasLetterH: UIImage?
        static var canvasLetterHTargets: [AnyObject]?
        static var imageOfCanvasLetterC: UIImage?
        static var canvasLetterCTargets: [AnyObject]?
        static var imageOfCanvasLetterK: UIImage?
        static var canvasLetterKTargets: [AnyObject]?
        static var imageOfCanvasLetterD: UIImage?
        static var canvasLetterDTargets: [AnyObject]?
        static var imageOfCanvasLetterY: UIImage?
        static var canvasLetterYTargets: [AnyObject]?
        static var imageOfCanvasLetter2: UIImage?
        static var canvasLetter2Targets: [AnyObject]?
        static var imageOfCanvasLetter: UIImage?
        static var canvasLetterTargets: [AnyObject]?
        static var imageOfBlueMountain: UIImage?
        static var blueMountainTargets: [AnyObject]?
        static var imageOfBlueMountainDark: UIImage?
        static var blueMountainDarkTargets: [AnyObject]?
    }

    //// Colors

    public class var babbelOrange: UIColor { return Cache.babbelOrange }
    public class var babbelOrange75: UIColor { return Cache.babbelOrange75 }
    public class var babbelOrange50: UIColor { return Cache.babbelOrange50 }
    public class var babbelOrange25: UIColor { return Cache.babbelOrange25 }
    public class var babbelLightOrange: UIColor { return Cache.babbelLightOrange }
    public class var babbelLightOrange75: UIColor { return Cache.babbelLightOrange75 }
    public class var babbelLightOrange50: UIColor { return Cache.babbelLightOrange50 }
    public class var babbelLightOrange25: UIColor { return Cache.babbelLightOrange25 }
    public class var babbelYellow: UIColor { return Cache.babbelYellow }
    public class var babbelYellow75: UIColor { return Cache.babbelYellow75 }
    public class var babbelYellow50: UIColor { return Cache.babbelYellow50 }
    public class var babbelYellow25: UIColor { return Cache.babbelYellow25 }
    public class var babbelRed: UIColor { return Cache.babbelRed }
    public class var babbelRed75: UIColor { return Cache.babbelRed75 }
    public class var babbelRed50: UIColor { return Cache.babbelRed50 }
    public class var babbelRed25: UIColor { return Cache.babbelRed25 }
    public class var babbelGreen: UIColor { return Cache.babbelGreen }
    public class var babbelGreen75: UIColor { return Cache.babbelGreen75 }
    public class var babbelGreen50: UIColor { return Cache.babbelGreen50 }
    public class var babbelgreen25: UIColor { return Cache.babbelgreen25 }
    public class var babbelBlue: UIColor { return Cache.babbelBlue }
    public class var babbelBlue75: UIColor { return Cache.babbelBlue75 }
    public class var babbelBlue50: UIColor { return Cache.babbelBlue50 }
    public class var babbelBlue25: UIColor { return Cache.babbelBlue25 }
    public class var babbelBeige: UIColor { return Cache.babbelBeige }
    public class var babbelBeige75: UIColor { return Cache.babbelBeige75 }
    public class var babbelBeige50: UIColor { return Cache.babbelBeige50 }
    public class var babbelBeige25: UIColor { return Cache.babbelBeige25 }
    public class var babbelGray: UIColor { return Cache.babbelGray }
    public class var babbelGray75: UIColor { return Cache.babbelGray75 }
    public class var babbelGray50: UIColor { return Cache.babbelGray50 }
    public class var babbelGray25: UIColor { return Cache.babbelGray25 }
    public class var babbelFontDarkGray: UIColor { return Cache.babbelFontDarkGray }
    public class var babbelFontGray: UIColor { return Cache.babbelFontGray }

    //// Drawing Methods

    public class func drawCanvasCloud() {
        //// Color Declarations
        let color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Group
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(roundedRect: CGRectMake(16, 46, 163, 74), cornerRadius: 10)
        color.setFill()
        rectanglePath.fill()


        //// Oval Drawing
        var ovalPath = UIBezierPath(ovalInRect: CGRectMake(0, 40, 57, 80))
        color.setFill()
        ovalPath.fill()


        //// Oval 2 Drawing
        var oval2Path = UIBezierPath(ovalInRect: CGRectMake(42, 0, 98, 99))
        color.setFill()
        oval2Path.fill()


        //// Oval 3 Drawing
        var oval3Path = UIBezierPath(ovalInRect: CGRectMake(121, 25, 79, 95))
        color.setFill()
        oval3Path.fill()
    }

    public class func drawCanvasCactus() {
        //// Color Declarations
        let babbelGreenS40 = AngyWordsStyleKit.babbelGreen.colorWithShadow(0.4)

        //// Group
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRectMake(58, 52, 85, 310))
        babbelGreenS40.setFill()
        rectanglePath.fill()


        //// Oval Drawing
        var ovalPath = UIBezierPath(ovalInRect: CGRectMake(58, 0, 85, 102))
        babbelGreenS40.setFill()
        ovalPath.fill()


        //// Bezier Drawing
        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(189, 102))
        bezierPath.addCurveToPoint(CGPointMake(189, 102.18), controlPoint1: CGPointMake(189, 102), controlPoint2: CGPointMake(189, 102.06))
        bezierPath.addCurveToPoint(CGPointMake(209.68, 109.47), controlPoint1: CGPointMake(196.36, 101.28), controlPoint2: CGPointMake(204.03, 103.71))
        bezierPath.addCurveToPoint(CGPointMake(209.68, 145.53), controlPoint1: CGPointMake(219.44, 119.43), controlPoint2: CGPointMake(219.44, 135.57))
        bezierPath.addCurveToPoint(CGPointMake(189, 152.82), controlPoint1: CGPointMake(204.03, 151.29), controlPoint2: CGPointMake(196.36, 153.72))
        bezierPath.addCurveToPoint(CGPointMake(189, 153), controlPoint1: CGPointMake(189, 152.94), controlPoint2: CGPointMake(189, 153))
        bezierPath.addLineToPoint(CGPointMake(119, 153))
        bezierPath.addLineToPoint(CGPointMake(119, 102))
        bezierPath.addLineToPoint(CGPointMake(189, 102))
        bezierPath.addLineToPoint(CGPointMake(189, 102))
        bezierPath.closePath()
        babbelGreenS40.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        var bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPointMake(98, 174))
        bezier2Path.addCurveToPoint(CGPointMake(98, 225), controlPoint1: CGPointMake(98, 174), controlPoint2: CGPointMake(98, 225))
        bezier2Path.addLineToPoint(CGPointMake(28, 225))
        bezier2Path.addCurveToPoint(CGPointMake(28, 224.82), controlPoint1: CGPointMake(28, 225), controlPoint2: CGPointMake(28, 224.94))
        bezier2Path.addCurveToPoint(CGPointMake(7.32, 217.53), controlPoint1: CGPointMake(20.64, 225.72), controlPoint2: CGPointMake(12.97, 223.29))
        bezier2Path.addCurveToPoint(CGPointMake(7.32, 181.47), controlPoint1: CGPointMake(-2.44, 207.57), controlPoint2: CGPointMake(-2.44, 191.43))
        bezier2Path.addCurveToPoint(CGPointMake(28, 174.18), controlPoint1: CGPointMake(12.97, 175.71), controlPoint2: CGPointMake(20.64, 173.28))
        bezier2Path.addCurveToPoint(CGPointMake(28, 174), controlPoint1: CGPointMake(28, 174.06), controlPoint2: CGPointMake(28, 174))
        bezier2Path.addLineToPoint(CGPointMake(98, 174))
        bezier2Path.addLineToPoint(CGPointMake(98, 174))
        bezier2Path.closePath()
        babbelGreenS40.setFill()
        bezier2Path.fill()
    }

    public class func drawCanvasStamm() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let babbelOranggeS60 = AngyWordsStyleKit.babbelOrange.colorWithShadow(0.6)
        let brown = UIColor(red: 0.565, green: 0.394, blue: 0.157, alpha: 1.000)
        let brownS10 = brown.colorWithShadow(0.1)

        //// Gradient Declarations
        let gradient5 = CGGradientCreateWithColors(CGColorSpaceCreateDeviceRGB(), [babbelOranggeS60.CGColor, brown.CGColor], [0, 1])

        //// Stamm Drawing
        var stammPath = UIBezierPath()
        stammPath.moveToPoint(CGPointMake(23, 100))
        stammPath.addCurveToPoint(CGPointMake(23, 112), controlPoint1: CGPointMake(19, 110), controlPoint2: CGPointMake(23, 102.5))
        stammPath.addCurveToPoint(CGPointMake(23, 138), controlPoint1: CGPointMake(23, 121.5), controlPoint2: CGPointMake(17, 138))
        stammPath.addCurveToPoint(CGPointMake(41, 138), controlPoint1: CGPointMake(29, 138), controlPoint2: CGPointMake(41, 138))
        stammPath.addCurveToPoint(CGPointMake(41, 100), controlPoint1: CGPointMake(41, 138), controlPoint2: CGPointMake(39, 106))
        stammPath.addCurveToPoint(CGPointMake(41, 88), controlPoint1: CGPointMake(43, 94), controlPoint2: CGPointMake(41.5, 95.5))
        stammPath.addCurveToPoint(CGPointMake(41, 68), controlPoint1: CGPointMake(40.5, 80.5), controlPoint2: CGPointMake(41, 68))
        stammPath.addLineToPoint(CGPointMake(23, 68))
        stammPath.addCurveToPoint(CGPointMake(23, 100), controlPoint1: CGPointMake(23, 68), controlPoint2: CGPointMake(27, 90))
        stammPath.closePath()
        CGContextSaveGState(context)
        stammPath.addClip()
        CGContextDrawLinearGradient(context, gradient5, CGPointMake(42.01, 103), CGPointMake(20.33, 103), 0)
        CGContextRestoreGState(context)


        //// Rectangle 10 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 29.95, 131.05)
        CGContextRotateCTM(context, -1.03 * CGFloat(M_PI) / 180)

        var rectangle10Path = UIBezierPath()
        rectangle10Path.moveToPoint(CGPointMake(4.09, -1.98))
        rectangle10Path.addCurveToPoint(CGPointMake(2.96, 5), controlPoint1: CGPointMake(4.11, 1.42), controlPoint2: CGPointMake(2.78, 3.46))
        rectangle10Path.addCurveToPoint(CGPointMake(5.96, 5.06), controlPoint1: CGPointMake(3.15, 6.54), controlPoint2: CGPointMake(5, 3.04))
        rectangle10Path.addCurveToPoint(CGPointMake(5.83, -7.75), controlPoint1: CGPointMake(6.46, 6.09), controlPoint2: CGPointMake(6.63, -4.03))
        rectangle10Path.addCurveToPoint(CGPointMake(2.96, -14.38), controlPoint1: CGPointMake(5.08, -11.31), controlPoint2: CGPointMake(2.96, -14.38))
        rectangle10Path.addCurveToPoint(CGPointMake(2.48, -10.75), controlPoint1: CGPointMake(2.96, -14.38), controlPoint2: CGPointMake(2.65, -14.37))
        rectangle10Path.addCurveToPoint(CGPointMake(4.09, -1.98), controlPoint1: CGPointMake(2.38, -8.71), controlPoint2: CGPointMake(4.06, -6.39))
        rectangle10Path.closePath()
        brownS10.setFill()
        rectangle10Path.fill()

        CGContextRestoreGState(context)


        //// Rectangle 5 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 25.96, 70.77)
        CGContextRotateCTM(context, 15.17 * CGFloat(M_PI) / 180)

        var rectangle5Path = UIBezierPath()
        rectangle5Path.moveToPoint(CGPointMake(5.17, 17.46))
        rectangle5Path.addCurveToPoint(CGPointMake(5.58, 31.88), controlPoint1: CGPointMake(5.23, 22.15), controlPoint2: CGPointMake(7.69, 28.2))
        rectangle5Path.addCurveToPoint(CGPointMake(9.17, 34.46), controlPoint1: CGPointMake(3.47, 35.56), controlPoint2: CGPointMake(9.26, 33.99))
        rectangle5Path.addCurveToPoint(CGPointMake(3.6, 5.48), controlPoint1: CGPointMake(9.08, 34.92), controlPoint2: CGPointMake(3.6, 5.48))
        rectangle5Path.addCurveToPoint(CGPointMake(0.1, 0.21), controlPoint1: CGPointMake(3.6, 5.48), controlPoint2: CGPointMake(1.77, -1.27))
        rectangle5Path.addCurveToPoint(CGPointMake(5.17, 17.46), controlPoint1: CGPointMake(-0.84, 1.05), controlPoint2: CGPointMake(5.08, 11.37))
        rectangle5Path.closePath()
        babbelOranggeS60.setFill()
        rectangle5Path.fill()

        CGContextRestoreGState(context)


        //// Rectangle 6 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 37.85, 98.41)
        CGContextRotateCTM(context, -13.68 * CGFloat(M_PI) / 180)

        var rectangle6Path = UIBezierPath()
        rectangle6Path.moveToPoint(CGPointMake(4.82, -6.45))
        rectangle6Path.addCurveToPoint(CGPointMake(3.63, -1.59), controlPoint1: CGPointMake(4.8, -5.61), controlPoint2: CGPointMake(3.73, -2.19))
        rectangle6Path.addCurveToPoint(CGPointMake(-0.2, 5.71), controlPoint1: CGPointMake(3.33, 0.26), controlPoint2: CGPointMake(0.21, 4.55))
        rectangle6Path.addCurveToPoint(CGPointMake(-2.69, 11.94), controlPoint1: CGPointMake(-0.74, 7.25), controlPoint2: CGPointMake(-0.18, 9.83))
        rectangle6Path.addCurveToPoint(CGPointMake(1.45, -1.09), controlPoint1: CGPointMake(-3.98, 13.01), controlPoint2: CGPointMake(-0.88, 2.63))
        rectangle6Path.addCurveToPoint(CGPointMake(2.87, -6.92), controlPoint1: CGPointMake(3.68, -4.65), controlPoint2: CGPointMake(2.87, -6.92))
        rectangle6Path.addCurveToPoint(CGPointMake(3.31, -11.24), controlPoint1: CGPointMake(2.87, -6.92), controlPoint2: CGPointMake(2.81, -14.86))
        rectangle6Path.addCurveToPoint(CGPointMake(4.82, -6.45), controlPoint1: CGPointMake(3.59, -9.19), controlPoint2: CGPointMake(4.9, -10.86))
        rectangle6Path.closePath()
        babbelOranggeS60.setFill()
        rectangle6Path.fill()

        CGContextRestoreGState(context)


        //// Rectangle 7 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 29.25, 123.46)
        CGContextRotateCTM(context, -1.03 * CGFloat(M_PI) / 180)

        var rectangle7Path = UIBezierPath()
        rectangle7Path.moveToPoint(CGPointMake(-2.7, 0.37))
        rectangle7Path.addCurveToPoint(CGPointMake(-3.79, -2.75), controlPoint1: CGPointMake(-2.73, -3.03), controlPoint2: CGPointMake(-3.59, -1.21))
        rectangle7Path.addCurveToPoint(CGPointMake(-4.15, -11.94), controlPoint1: CGPointMake(-3.99, -4.29), controlPoint2: CGPointMake(-3.43, -14.11))
        rectangle7Path.addCurveToPoint(CGPointMake(-4.64, 4.29), controlPoint1: CGPointMake(-4.52, -10.83), controlPoint2: CGPointMake(-5.49, 0.57))
        rectangle7Path.addCurveToPoint(CGPointMake(-3.06, 10.77), controlPoint1: CGPointMake(-3.84, 7.85), controlPoint2: CGPointMake(-3.06, 10.77))
        rectangle7Path.addCurveToPoint(CGPointMake(-1.98, 11.24), controlPoint1: CGPointMake(-3.06, 10.77), controlPoint2: CGPointMake(-2.16, 14.86))
        rectangle7Path.addCurveToPoint(CGPointMake(-2.7, 0.37), controlPoint1: CGPointMake(-1.88, 9.19), controlPoint2: CGPointMake(-2.67, 4.78))
        rectangle7Path.closePath()
        babbelOranggeS60.setFill()
        rectangle7Path.fill()

        CGContextRestoreGState(context)


        //// Rectangle 9 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 35.68, 93.2)
        CGContextRotateCTM(context, 15.9 * CGFloat(M_PI) / 180)

        var rectangle9Path = UIBezierPath()
        rectangle9Path.moveToPoint(CGPointMake(-1.89, 6.81))
        rectangle9Path.addCurveToPoint(CGPointMake(-4.14, 1.92), controlPoint1: CGPointMake(-1.94, 1.48), controlPoint2: CGPointMake(-3.74, 4.32))
        rectangle9Path.addCurveToPoint(CGPointMake(-8.51, -23.28), controlPoint1: CGPointMake(-4.55, -0.49), controlPoint2: CGPointMake(-7.01, -26.68))
        rectangle9Path.addCurveToPoint(CGPointMake(-5.53, 1.92), controlPoint1: CGPointMake(-9.28, -21.54), controlPoint2: CGPointMake(-7.29, -3.91))
        rectangle9Path.addCurveToPoint(CGPointMake(-2.6, 14.94), controlPoint1: CGPointMake(-3.85, 7.48), controlPoint2: CGPointMake(-2.6, 14.94))
        rectangle9Path.addCurveToPoint(CGPointMake(0.2, 23.64), controlPoint1: CGPointMake(-2.6, 14.94), controlPoint2: CGPointMake(-0.18, 29.3))
        rectangle9Path.addCurveToPoint(CGPointMake(-1.89, 6.81), controlPoint1: CGPointMake(0.41, 20.44), controlPoint2: CGPointMake(-1.82, 13.7))
        rectangle9Path.closePath()
        brownS10.setFill()
        rectangle9Path.fill()

        CGContextRestoreGState(context)


        //// Rectangle 8 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 39.6, 76.99)
        CGContextRotateCTM(context, 34.8 * CGFloat(M_PI) / 180)

        var rectangle8Path = UIBezierPath()
        rectangle8Path.moveToPoint(CGPointMake(-1.19, -0.18))
        rectangle8Path.addCurveToPoint(CGPointMake(0.81, 2.66), controlPoint1: CGPointMake(-1.12, 1.15), controlPoint2: CGPointMake(0.27, 2.06))
        rectangle8Path.addCurveToPoint(CGPointMake(2.8, 4.65), controlPoint1: CGPointMake(1.34, 3.26), controlPoint2: CGPointMake(0.81, 5.5))
        rectangle8Path.addCurveToPoint(CGPointMake(-1.19, -3.02), controlPoint1: CGPointMake(4.79, 3.79), controlPoint2: CGPointMake(-1.19, -3.02))
        rectangle8Path.addCurveToPoint(CGPointMake(-3.18, -4.44), controlPoint1: CGPointMake(-1.19, -3.02), controlPoint2: CGPointMake(-2.68, -5.86))
        rectangle8Path.addCurveToPoint(CGPointMake(-1.19, -0.18), controlPoint1: CGPointMake(-3.46, -3.64), controlPoint2: CGPointMake(-1.27, -1.91))
        rectangle8Path.closePath()
        babbelOranggeS60.setFill()
        rectangle8Path.fill()

        CGContextRestoreGState(context)


        //// Rectangle Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 35.98, 118.82)
        CGContextRotateCTM(context, 16.04 * CGFloat(M_PI) / 180)

        var rectanglePath = UIBezierPath()
        rectanglePath.moveToPoint(CGPointMake(1.19, 0.18))
        rectanglePath.addCurveToPoint(CGPointMake(-0.81, -2.66), controlPoint1: CGPointMake(1.12, -1.15), controlPoint2: CGPointMake(0.62, 1.44))
        rectanglePath.addCurveToPoint(CGPointMake(-2.8, -4.65), controlPoint1: CGPointMake(-2.23, -6.76), controlPoint2: CGPointMake(-2.29, -4.5))
        rectanglePath.addCurveToPoint(CGPointMake(1.19, 3.02), controlPoint1: CGPointMake(-3.3, -4.79), controlPoint2: CGPointMake(1.19, 3.02))
        rectanglePath.addCurveToPoint(CGPointMake(3.18, 4.44), controlPoint1: CGPointMake(1.19, 3.02), controlPoint2: CGPointMake(2.68, 5.86))
        rectanglePath.addCurveToPoint(CGPointMake(1.19, 0.18), controlPoint1: CGPointMake(3.46, 3.64), controlPoint2: CGPointMake(1.27, 1.91))
        rectanglePath.closePath()
        babbelOranggeS60.setFill()
        rectanglePath.fill()

        CGContextRestoreGState(context)
    }

    public class func drawCanvasSchleuderVorne() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let babbelOranggeS60 = AngyWordsStyleKit.babbelOrange.colorWithShadow(0.6)
        let babbelRedS70 = AngyWordsStyleKit.babbelRed.colorWithShadow(0.3)
        let brown = UIColor(red: 0.565, green: 0.394, blue: 0.157, alpha: 1.000)
        let brownS10 = brown.colorWithShadow(0.1)

        //// Gradient Declarations
        let gradient5 = CGGradientCreateWithColors(CGColorSpaceCreateDeviceRGB(), [babbelOranggeS60.CGColor, brown.CGColor], [0, 1])

        //// SchleuderVorne 2 Drawing
        var schleuderVorne2Path = UIBezierPath()
        schleuderVorne2Path.moveToPoint(CGPointMake(55, 0))
        schleuderVorne2Path.addCurveToPoint(CGPointMake(65, 8), controlPoint1: CGPointMake(64, -0), controlPoint2: CGPointMake(65, 8))
        schleuderVorne2Path.addCurveToPoint(CGPointMake(53, 56), controlPoint1: CGPointMake(65, 8), controlPoint2: CGPointMake(63, 36))
        schleuderVorne2Path.addCurveToPoint(CGPointMake(25, 82), controlPoint1: CGPointMake(43, 76), controlPoint2: CGPointMake(25, 82))
        schleuderVorne2Path.addLineToPoint(CGPointMake(25, 56))
        schleuderVorne2Path.addCurveToPoint(CGPointMake(37, 44), controlPoint1: CGPointMake(25, 56), controlPoint2: CGPointMake(32.85, 57.28))
        schleuderVorne2Path.addCurveToPoint(CGPointMake(45, 8), controlPoint1: CGPointMake(47, 12), controlPoint2: CGPointMake(45, 8))
        schleuderVorne2Path.addCurveToPoint(CGPointMake(55, 0), controlPoint1: CGPointMake(45, 8), controlPoint2: CGPointMake(46, 0))
        schleuderVorne2Path.closePath()
        CGContextSaveGState(context)
        schleuderVorne2Path.addClip()
        CGContextDrawLinearGradient(context, gradient5, CGPointMake(57.14, 55.84), CGPointMake(25.85, 24.55), 0)
        CGContextRestoreGState(context)


        //// Rectangle 10 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 27.2, 63.91)
        CGContextRotateCTM(context, 48.15 * CGFloat(M_PI) / 180)

        var rectangle10Path = UIBezierPath()
        rectangle10Path.moveToPoint(CGPointMake(-0.21, -11.7))
        rectangle10Path.addCurveToPoint(CGPointMake(0.8, -14.82), controlPoint1: CGPointMake(-0.19, -15.1), controlPoint2: CGPointMake(0.62, -13.29))
        rectangle10Path.addCurveToPoint(CGPointMake(2.5, -14.28), controlPoint1: CGPointMake(0.99, -16.36), controlPoint2: CGPointMake(1.82, -16.45))
        rectangle10Path.addCurveToPoint(CGPointMake(2.47, -3.84), controlPoint1: CGPointMake(2.84, -13.17), controlPoint2: CGPointMake(3.26, -7.56))
        rectangle10Path.addCurveToPoint(CGPointMake(-0.41, 2.79), controlPoint1: CGPointMake(1.71, -0.28), controlPoint2: CGPointMake(-0.41, 2.79))
        rectangle10Path.addCurveToPoint(CGPointMake(-0.89, -0.84), controlPoint1: CGPointMake(-0.41, 2.79), controlPoint2: CGPointMake(-0.72, 2.78))
        rectangle10Path.addCurveToPoint(CGPointMake(-0.21, -11.7), controlPoint1: CGPointMake(-0.99, -2.88), controlPoint2: CGPointMake(-0.24, -7.29))
        rectangle10Path.closePath()
        brownS10.setFill()
        rectangle10Path.fill()

        CGContextRestoreGState(context)


        //// Rectangle 5 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 58.19, 27.84)
        CGContextRotateCTM(context, 8.21 * CGFloat(M_PI) / 180)

        var rectangle5Path = UIBezierPath()
        rectangle5Path.moveToPoint(CGPointMake(0.13, 9.24))
        rectangle5Path.addCurveToPoint(CGPointMake(1.95, -6.18), controlPoint1: CGPointMake(0.2, 4.54), controlPoint2: CGPointMake(1.41, -4.06))
        rectangle5Path.addCurveToPoint(CGPointMake(2.81, -16.36), controlPoint1: CGPointMake(2.49, -8.3), controlPoint2: CGPointMake(0.81, -19.36))
        rectangle5Path.addCurveToPoint(CGPointMake(0.56, 12.21), controlPoint1: CGPointMake(4.81, -13.36), controlPoint2: CGPointMake(0.56, 12.21))
        rectangle5Path.addCurveToPoint(CGPointMake(-3.19, 15.64), controlPoint1: CGPointMake(0.56, 12.21), controlPoint2: CGPointMake(-2.69, 20.64))
        rectangle5Path.addCurveToPoint(CGPointMake(0.13, 9.24), controlPoint1: CGPointMake(-3.47, 12.81), controlPoint2: CGPointMake(0.05, 15.32))
        rectangle5Path.closePath()
        babbelOranggeS60.setFill()
        rectangle5Path.fill()

        CGContextRestoreGState(context)


        //// Rectangle 6 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 44.43, 37.39)
        CGContextRotateCTM(context, 9.23 * CGFloat(M_PI) / 180)

        var rectangle6Path = UIBezierPath()
        rectangle6Path.moveToPoint(CGPointMake(-1.31, 0.37))
        rectangle6Path.addCurveToPoint(CGPointMake(1.69, -2.75), controlPoint1: CGPointMake(-1.24, -3.03), controlPoint2: CGPointMake(1.15, -1.21))
        rectangle6Path.addCurveToPoint(CGPointMake(2.69, -11.94), controlPoint1: CGPointMake(2.23, -4.29), controlPoint2: CGPointMake(0.69, -14.11))
        rectangle6Path.addCurveToPoint(CGPointMake(1.35, -1.03), controlPoint1: CGPointMake(3.71, -10.83), controlPoint2: CGPointMake(3.69, -4.75))
        rectangle6Path.addCurveToPoint(CGPointMake(-1.31, 7.61), controlPoint1: CGPointMake(-0.88, 2.53), controlPoint2: CGPointMake(-1.31, 7.61))
        rectangle6Path.addCurveToPoint(CGPointMake(-3.31, 11.24), controlPoint1: CGPointMake(-1.31, 7.61), controlPoint2: CGPointMake(-2.81, 14.86))
        rectangle6Path.addCurveToPoint(CGPointMake(-1.31, 0.37), controlPoint1: CGPointMake(-3.59, 9.19), controlPoint2: CGPointMake(-1.39, 4.78))
        rectangle6Path.closePath()
        babbelOranggeS60.setFill()
        rectangle6Path.fill()

        CGContextRestoreGState(context)


        //// Rectangle 7 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 43.63, 66.39)
        CGContextRotateCTM(context, 35.25 * CGFloat(M_PI) / 180)

        var rectangle7Path = UIBezierPath()
        rectangle7Path.moveToPoint(CGPointMake(-3.58, 2.2))
        rectangle7Path.addCurveToPoint(CGPointMake(-2.49, -0.93), controlPoint1: CGPointMake(-3.55, -1.2), controlPoint2: CGPointMake(-2.69, 0.61))
        rectangle7Path.addCurveToPoint(CGPointMake(-2.13, -10.11), controlPoint1: CGPointMake(-2.3, -2.46), controlPoint2: CGPointMake(-2.85, -12.28))
        rectangle7Path.addCurveToPoint(CGPointMake(-1.64, 6.11), controlPoint1: CGPointMake(-1.76, -9), controlPoint2: CGPointMake(-0.79, 2.39))
        rectangle7Path.addCurveToPoint(CGPointMake(-3.22, 12.59), controlPoint1: CGPointMake(-2.45, 9.67), controlPoint2: CGPointMake(-3.22, 12.59))
        rectangle7Path.addCurveToPoint(CGPointMake(-4.3, 13.06), controlPoint1: CGPointMake(-3.22, 12.59), controlPoint2: CGPointMake(-4.12, 16.68))
        rectangle7Path.addCurveToPoint(CGPointMake(-3.58, 2.2), controlPoint1: CGPointMake(-4.4, 11.02), controlPoint2: CGPointMake(-3.61, 6.61))
        rectangle7Path.closePath()
        babbelOranggeS60.setFill()
        rectangle7Path.fill()

        CGContextRestoreGState(context)


        //// Rectangle 8 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 49.53, 9.47)
        CGContextRotateCTM(context, -19.01 * CGFloat(M_PI) / 180)

        var rectangle8Path = UIBezierPath()
        rectangle8Path.moveToPoint(CGPointMake(1.19, -0.18))
        rectangle8Path.addCurveToPoint(CGPointMake(-0.81, 2.66), controlPoint1: CGPointMake(1.12, 1.15), controlPoint2: CGPointMake(-0.27, 2.06))
        rectangle8Path.addCurveToPoint(CGPointMake(-2.8, 4.65), controlPoint1: CGPointMake(-1.34, 3.26), controlPoint2: CGPointMake(-0.81, 5.5))
        rectangle8Path.addCurveToPoint(CGPointMake(1.19, -3.02), controlPoint1: CGPointMake(-4.79, 3.79), controlPoint2: CGPointMake(1.19, -3.02))
        rectangle8Path.addCurveToPoint(CGPointMake(3.18, -4.44), controlPoint1: CGPointMake(1.19, -3.02), controlPoint2: CGPointMake(2.68, -5.86))
        rectangle8Path.addCurveToPoint(CGPointMake(1.19, -0.18), controlPoint1: CGPointMake(3.46, -3.64), controlPoint2: CGPointMake(1.27, -1.91))
        rectangle8Path.closePath()
        babbelOranggeS60.setFill()
        rectangle8Path.fill()

        CGContextRestoreGState(context)


        //// Rectangle 9 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 55.51, 26.29)
        CGContextRotateCTM(context, 4.48 * CGFloat(M_PI) / 180)

        var rectangle9Path = UIBezierPath()
        rectangle9Path.moveToPoint(CGPointMake(-4.05, 6.05))
        rectangle9Path.addCurveToPoint(CGPointMake(0.03, -23.38), controlPoint1: CGPointMake(-2.16, 0.48), controlPoint2: CGPointMake(-1.47, -26.78))
        rectangle9Path.addCurveToPoint(CGPointMake(-1.37, 1.83), controlPoint1: CGPointMake(0.8, -21.64), controlPoint2: CGPointMake(0.38, -4))
        rectangle9Path.addCurveToPoint(CGPointMake(-5.89, 14.83), controlPoint1: CGPointMake(-3.05, 7.39), controlPoint2: CGPointMake(-5.89, 14.83))
        rectangle9Path.addCurveToPoint(CGPointMake(-8.68, 23.53), controlPoint1: CGPointMake(-5.89, 14.83), controlPoint2: CGPointMake(-8.31, 29.2))
        rectangle9Path.addCurveToPoint(CGPointMake(-4.05, 6.05), controlPoint1: CGPointMake(-8.9, 20.33), controlPoint2: CGPointMake(-6.49, 13.26))
        rectangle9Path.closePath()
        brownS10.setFill()
        rectangle9Path.fill()

        CGContextRestoreGState(context)


        //// Rectangle 11 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 53.51, 8.29)
        CGContextRotateCTM(context, 4.48 * CGFloat(M_PI) / 180)

        var rectangle11Path = UIBezierPath()
        rectangle11Path.moveToPoint(CGPointMake(-6.24, 18.34))
        rectangle11Path.addCurveToPoint(CGPointMake(-4.09, 8.14), controlPoint1: CGPointMake(-5.25, 16.41), controlPoint2: CGPointMake(-4.88, 6.97))
        rectangle11Path.addCurveToPoint(CGPointMake(-4.83, 16.88), controlPoint1: CGPointMake(-3.68, 8.75), controlPoint2: CGPointMake(-3.9, 14.86))
        rectangle11Path.addCurveToPoint(CGPointMake(-7.21, 21.38), controlPoint1: CGPointMake(-5.71, 18.8), controlPoint2: CGPointMake(-7.21, 21.38))
        rectangle11Path.addCurveToPoint(CGPointMake(-8.69, 24.39), controlPoint1: CGPointMake(-7.21, 21.38), controlPoint2: CGPointMake(-8.49, 26.36))
        rectangle11Path.addCurveToPoint(CGPointMake(-6.24, 18.34), controlPoint1: CGPointMake(-8.8, 23.29), controlPoint2: CGPointMake(-7.53, 20.84))
        rectangle11Path.closePath()
        brownS10.setFill()
        rectangle11Path.fill()

        CGContextRestoreGState(context)


        //// Group
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 53, 17.69)
        CGContextRotateCTM(context, 5.15 * CGFloat(M_PI) / 180)



        //// Rectangle Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, -0.14, -2.29)
        CGContextRotateCTM(context, -1.25 * CGFloat(M_PI) / 180)

        var rectanglePath = UIBezierPath()
        rectanglePath.moveToPoint(CGPointMake(11.49, 7.84))
        rectanglePath.addCurveToPoint(CGPointMake(-10.46, 9.33), controlPoint1: CGPointMake(10.14, 9.97), controlPoint2: CGPointMake(-9.43, 10.04))
        rectanglePath.addCurveToPoint(CGPointMake(-9.78, 0.01), controlPoint1: CGPointMake(-11.49, 8.62), controlPoint2: CGPointMake(-10.8, 3.75))
        rectanglePath.addCurveToPoint(CGPointMake(-8.55, -6.83), controlPoint1: CGPointMake(-8.76, -3.72), controlPoint2: CGPointMake(-9.91, -5.77))
        rectanglePath.addCurveToPoint(CGPointMake(11.91, -7.45), controlPoint1: CGPointMake(-7.2, -7.9), controlPoint2: CGPointMake(11.91, -9.58))
        rectanglePath.addCurveToPoint(CGPointMake(11.49, 7.84), controlPoint1: CGPointMake(11.91, -5.32), controlPoint2: CGPointMake(12.85, 5.7))
        rectanglePath.closePath()
        AngyWordsStyleKit.babbelRed.setFill()
        rectanglePath.fill()

        CGContextRestoreGState(context)


        //// Rectangle 2 Drawing
        var rectangle2Path = UIBezierPath()
        rectangle2Path.moveToPoint(CGPointMake(10.42, -6.62))
        rectangle2Path.addCurveToPoint(CGPointMake(-5.45, -6.62), controlPoint1: CGPointMake(6.76, -6.41), controlPoint2: CGPointMake(-4.23, -6.62))
        rectangle2Path.addCurveToPoint(CGPointMake(-6.67, -7.49), controlPoint1: CGPointMake(-6.67, -6.62), controlPoint2: CGPointMake(-6.67, -7.49))
        rectangle2Path.addLineToPoint(CGPointMake(7.98, -7.49))
        rectangle2Path.addCurveToPoint(CGPointMake(10.42, -6.62), controlPoint1: CGPointMake(7.98, -7.49), controlPoint2: CGPointMake(14.08, -6.84))
        rectangle2Path.closePath()
        babbelRedS70.setFill()
        rectangle2Path.fill()


        //// Rectangle 3 Drawing
        var rectangle3Path = UIBezierPath()
        rectangle3Path.moveToPoint(CGPointMake(-4.61, 5.05))
        rectangle3Path.addCurveToPoint(CGPointMake(9.47, 5.05), controlPoint1: CGPointMake(-1.36, 5.24), controlPoint2: CGPointMake(8.38, 5.05))
        rectangle3Path.addCurveToPoint(CGPointMake(10.55, 4.27), controlPoint1: CGPointMake(10.55, 5.05), controlPoint2: CGPointMake(10.55, 4.27))
        rectangle3Path.addLineToPoint(CGPointMake(-3.47, 4.55))
        rectangle3Path.addCurveToPoint(CGPointMake(-4.61, 5.05), controlPoint1: CGPointMake(-3.47, 4.55), controlPoint2: CGPointMake(-7.86, 4.85))
        rectangle3Path.closePath()
        babbelRedS70.setFill()
        rectangle3Path.fill()


        //// Rectangle 4 Drawing
        var rectangle4Path = UIBezierPath()
        rectangle4Path.moveToPoint(CGPointMake(1.75, -1.49))
        rectangle4Path.addCurveToPoint(CGPointMake(-8.67, -1.49), controlPoint1: CGPointMake(-0.65, -1.27), controlPoint2: CGPointMake(-7.87, -1.49))
        rectangle4Path.addCurveToPoint(CGPointMake(-9.48, -2.35), controlPoint1: CGPointMake(-9.48, -1.49), controlPoint2: CGPointMake(-9.48, -2.35))
        rectangle4Path.addLineToPoint(CGPointMake(0.15, -2.35))
        rectangle4Path.addCurveToPoint(CGPointMake(1.75, -1.49), controlPoint1: CGPointMake(0.15, -2.35), controlPoint2: CGPointMake(4.16, -1.7))
        rectangle4Path.closePath()
        babbelRedS70.setFill()
        rectangle4Path.fill()



        CGContextRestoreGState(context)
    }

    public class func drawCanvasSchleuderHinten() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let babbelOranggeS60 = AngyWordsStyleKit.babbelOrange.colorWithShadow(0.6)
        let babbelRedBack = AngyWordsStyleKit.babbelRed.colorWithShadow(0.05)
        let babbelRedS50 = AngyWordsStyleKit.babbelRed.colorWithShadow(0.4)
        let brown = UIColor(red: 0.565, green: 0.394, blue: 0.157, alpha: 1.000)
        let brownS10 = brown.colorWithShadow(0.1)

        //// Gradient Declarations
        let gradient5 = CGGradientCreateWithColors(CGColorSpaceCreateDeviceRGB(), [babbelOranggeS60.CGColor, brown.CGColor], [0, 1])

        //// SchleuderHinten 2 Drawing
        var schleuderHinten2Path = UIBezierPath()
        schleuderHinten2Path.moveToPoint(CGPointMake(13, 0))
        schleuderHinten2Path.addCurveToPoint(CGPointMake(5, 6), controlPoint1: CGPointMake(5.04, -0), controlPoint2: CGPointMake(5, 6))
        schleuderHinten2Path.addCurveToPoint(CGPointMake(13.62, 54), controlPoint1: CGPointMake(5, 6), controlPoint2: CGPointMake(4.77, 34))
        schleuderHinten2Path.addCurveToPoint(CGPointMake(33, 76), controlPoint1: CGPointMake(22.47, 74), controlPoint2: CGPointMake(33, 76))
        schleuderHinten2Path.addLineToPoint(CGPointMake(33, 54))
        schleuderHinten2Path.addCurveToPoint(CGPointMake(25, 44), controlPoint1: CGPointMake(33, 54), controlPoint2: CGPointMake(27, 52))
        schleuderHinten2Path.addCurveToPoint(CGPointMake(19, 6), controlPoint1: CGPointMake(17, 12), controlPoint2: CGPointMake(19, 6))
        schleuderHinten2Path.addCurveToPoint(CGPointMake(13, 0), controlPoint1: CGPointMake(19, 6), controlPoint2: CGPointMake(20.97, 0))
        schleuderHinten2Path.closePath()
        CGContextSaveGState(context)
        schleuderHinten2Path.addClip()
        CGContextDrawLinearGradient(context, gradient5, CGPointMake(9.31, 42.59), CGPointMake(30.58, 34.85), 0)
        CGContextRestoreGState(context)


        //// Rectangle 10 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 22.41, 59.82)
        CGContextRotateCTM(context, -16.2 * CGFloat(M_PI) / 180)

        var rectangle10Path = UIBezierPath()
        rectangle10Path.moveToPoint(CGPointMake(3.16, 0.11))
        rectangle10Path.addCurveToPoint(CGPointMake(4.17, 3.23), controlPoint1: CGPointMake(3.18, 3.51), controlPoint2: CGPointMake(3.99, 1.7))
        rectangle10Path.addCurveToPoint(CGPointMake(5.86, 2.69), controlPoint1: CGPointMake(4.36, 4.77), controlPoint2: CGPointMake(5.19, 4.86))
        rectangle10Path.addCurveToPoint(CGPointMake(5.83, -7.75), controlPoint1: CGPointMake(6.21, 1.58), controlPoint2: CGPointMake(6.63, -4.03))
        rectangle10Path.addCurveToPoint(CGPointMake(2.96, -14.38), controlPoint1: CGPointMake(5.08, -11.31), controlPoint2: CGPointMake(2.96, -14.38))
        rectangle10Path.addCurveToPoint(CGPointMake(2.48, -10.75), controlPoint1: CGPointMake(2.96, -14.38), controlPoint2: CGPointMake(2.65, -14.37))
        rectangle10Path.addCurveToPoint(CGPointMake(3.16, 0.11), controlPoint1: CGPointMake(2.38, -8.71), controlPoint2: CGPointMake(3.13, -4.3))
        rectangle10Path.closePath()
        brownS10.setFill()
        rectangle10Path.fill()

        CGContextRestoreGState(context)


        //// Rectangle 5 Drawing
        var rectangle5Path = UIBezierPath()
        rectangle5Path.moveToPoint(CGPointMake(9, 24))
        rectangle5Path.addCurveToPoint(CGPointMake(11, 34), controlPoint1: CGPointMake(9.07, 28.7), controlPoint2: CGPointMake(10.46, 31.88))
        rectangle5Path.addCurveToPoint(CGPointMake(13, 41), controlPoint1: CGPointMake(11.54, 36.12), controlPoint2: CGPointMake(11, 44))
        rectangle5Path.addCurveToPoint(CGPointMake(9, 14), controlPoint1: CGPointMake(15, 38), controlPoint2: CGPointMake(9, 14))
        rectangle5Path.addCurveToPoint(CGPointMake(7, 9), controlPoint1: CGPointMake(9, 14), controlPoint2: CGPointMake(7.5, 4))
        rectangle5Path.addCurveToPoint(CGPointMake(9, 24), controlPoint1: CGPointMake(6.72, 11.82), controlPoint2: CGPointMake(8.91, 17.91))
        rectangle5Path.closePath()
        babbelOranggeS60.setFill()
        rectangle5Path.fill()


        //// Rectangle 6 Drawing
        var rectangle6Path = UIBezierPath()
        rectangle6Path.moveToPoint(CGPointMake(22, 35.12))
        rectangle6Path.addCurveToPoint(CGPointMake(19, 32), controlPoint1: CGPointMake(21.93, 31.72), controlPoint2: CGPointMake(19.54, 33.54))
        rectangle6Path.addCurveToPoint(CGPointMake(18, 22.81), controlPoint1: CGPointMake(18.46, 30.46), controlPoint2: CGPointMake(20, 20.64))
        rectangle6Path.addCurveToPoint(CGPointMake(19.34, 33.72), controlPoint1: CGPointMake(16.98, 23.93), controlPoint2: CGPointMake(17, 30))
        rectangle6Path.addCurveToPoint(CGPointMake(22, 42.37), controlPoint1: CGPointMake(21.57, 37.28), controlPoint2: CGPointMake(22, 42.37))
        rectangle6Path.addCurveToPoint(CGPointMake(24, 45.99), controlPoint1: CGPointMake(22, 42.37), controlPoint2: CGPointMake(23.5, 49.61))
        rectangle6Path.addCurveToPoint(CGPointMake(22, 35.12), controlPoint1: CGPointMake(24.28, 43.94), controlPoint2: CGPointMake(22.09, 39.53))
        rectangle6Path.closePath()
        babbelOranggeS60.setFill()
        rectangle6Path.fill()


        //// Rectangle 7 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 23.69, 55.75)
        CGContextRotateCTM(context, -16.2 * CGFloat(M_PI) / 180)

        var rectangle7Path = UIBezierPath()
        rectangle7Path.moveToPoint(CGPointMake(-2.7, 0.37))
        rectangle7Path.addCurveToPoint(CGPointMake(-3.79, -2.75), controlPoint1: CGPointMake(-2.73, -3.03), controlPoint2: CGPointMake(-3.59, -1.21))
        rectangle7Path.addCurveToPoint(CGPointMake(-4.15, -11.94), controlPoint1: CGPointMake(-3.99, -4.29), controlPoint2: CGPointMake(-3.43, -14.11))
        rectangle7Path.addCurveToPoint(CGPointMake(-4.64, 4.29), controlPoint1: CGPointMake(-4.52, -10.83), controlPoint2: CGPointMake(-5.49, 0.57))
        rectangle7Path.addCurveToPoint(CGPointMake(-3.06, 10.77), controlPoint1: CGPointMake(-3.84, 7.85), controlPoint2: CGPointMake(-3.06, 10.77))
        rectangle7Path.addCurveToPoint(CGPointMake(-1.98, 11.24), controlPoint1: CGPointMake(-3.06, 10.77), controlPoint2: CGPointMake(-2.16, 14.86))
        rectangle7Path.addCurveToPoint(CGPointMake(-2.7, 0.37), controlPoint1: CGPointMake(-1.88, 9.19), controlPoint2: CGPointMake(-2.67, 4.78))
        rectangle7Path.closePath()
        babbelOranggeS60.setFill()
        rectangle7Path.fill()

        CGContextRestoreGState(context)


        //// Rectangle 8 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 15.2, 7.84)
        CGContextRotateCTM(context, 34.35 * CGFloat(M_PI) / 180)

        var rectangle8Path = UIBezierPath()
        rectangle8Path.moveToPoint(CGPointMake(-1.19, -0.18))
        rectangle8Path.addCurveToPoint(CGPointMake(0.81, 2.66), controlPoint1: CGPointMake(-1.12, 1.15), controlPoint2: CGPointMake(0.27, 2.06))
        rectangle8Path.addCurveToPoint(CGPointMake(2.8, 4.65), controlPoint1: CGPointMake(1.34, 3.26), controlPoint2: CGPointMake(0.81, 5.5))
        rectangle8Path.addCurveToPoint(CGPointMake(-1.19, -3.02), controlPoint1: CGPointMake(4.79, 3.79), controlPoint2: CGPointMake(-1.19, -3.02))
        rectangle8Path.addCurveToPoint(CGPointMake(-3.18, -4.44), controlPoint1: CGPointMake(-1.19, -3.02), controlPoint2: CGPointMake(-2.68, -5.86))
        rectangle8Path.addCurveToPoint(CGPointMake(-1.19, -0.18), controlPoint1: CGPointMake(-3.46, -3.64), controlPoint2: CGPointMake(-1.27, -1.91))
        rectangle8Path.closePath()
        babbelOranggeS60.setFill()
        rectangle8Path.fill()

        CGContextRestoreGState(context)


        //// Rectangle 9 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 19.09, 25.65)
        CGContextRotateCTM(context, 0.73 * CGFloat(M_PI) / 180)

        var rectangle9Path = UIBezierPath()
        rectangle9Path.moveToPoint(CGPointMake(-1.89, 6.81))
        rectangle9Path.addCurveToPoint(CGPointMake(-4.14, 1.92), controlPoint1: CGPointMake(-1.94, 1.48), controlPoint2: CGPointMake(-3.74, 4.32))
        rectangle9Path.addCurveToPoint(CGPointMake(-8.51, -23.28), controlPoint1: CGPointMake(-4.55, -0.49), controlPoint2: CGPointMake(-7.01, -26.68))
        rectangle9Path.addCurveToPoint(CGPointMake(-5.53, 1.92), controlPoint1: CGPointMake(-9.28, -21.54), controlPoint2: CGPointMake(-7.29, -3.91))
        rectangle9Path.addCurveToPoint(CGPointMake(-2.6, 14.94), controlPoint1: CGPointMake(-3.85, 7.48), controlPoint2: CGPointMake(-2.6, 14.94))
        rectangle9Path.addCurveToPoint(CGPointMake(0.2, 23.64), controlPoint1: CGPointMake(-2.6, 14.94), controlPoint2: CGPointMake(-0.18, 29.3))
        rectangle9Path.addCurveToPoint(CGPointMake(-1.89, 6.81), controlPoint1: CGPointMake(0.41, 20.44), controlPoint2: CGPointMake(-1.82, 13.7))
        rectangle9Path.closePath()
        brownS10.setFill()
        rectangle9Path.fill()

        CGContextRestoreGState(context)


        //// Group
        //// Rectangle Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 12.41, 14.67)
        CGContextRotateCTM(context, 1.25 * CGFloat(M_PI) / 180)

        var rectanglePath = UIBezierPath()
        rectanglePath.moveToPoint(CGPointMake(-7, 5.96))
        rectanglePath.addCurveToPoint(CGPointMake(8.79, 6.44), controlPoint1: CGPointMake(-6, 8.07), controlPoint2: CGPointMake(8.81, 7.3))
        rectanglePath.addCurveToPoint(CGPointMake(8, -1.42), controlPoint1: CGPointMake(8.76, 5.58), controlPoint2: CGPointMake(8.75, 2.27))
        rectanglePath.addCurveToPoint(CGPointMake(6.39, -8.99), controlPoint1: CGPointMake(7.25, -5.11), controlPoint2: CGPointMake(7.39, -7.94))
        rectanglePath.addCurveToPoint(CGPointMake(-8, -8.8), controlPoint1: CGPointMake(5.39, -10.05), controlPoint2: CGPointMake(-8, -10.9))
        rectanglePath.addCurveToPoint(CGPointMake(-7, 5.96), controlPoint1: CGPointMake(-8, -6.69), controlPoint2: CGPointMake(-8, 3.85))
        rectanglePath.closePath()
        babbelRedBack.setFill()
        rectanglePath.fill()

        CGContextRestoreGState(context)


        //// Rectangle 2 Drawing
        var rectangle2Path = UIBezierPath()
        rectangle2Path.moveToPoint(CGPointMake(5.73, 9.83))
        rectangle2Path.addCurveToPoint(CGPointMake(18.73, 9.83), controlPoint1: CGPointMake(8.73, 10.08), controlPoint2: CGPointMake(17.73, 9.83))
        rectangle2Path.addCurveToPoint(CGPointMake(19.73, 8.83), controlPoint1: CGPointMake(19.73, 9.83), controlPoint2: CGPointMake(19.73, 8.83))
        rectangle2Path.addLineToPoint(CGPointMake(7.73, 8.83))
        rectangle2Path.addCurveToPoint(CGPointMake(5.73, 9.83), controlPoint1: CGPointMake(7.73, 8.83), controlPoint2: CGPointMake(2.73, 9.58))
        rectangle2Path.closePath()
        babbelRedS50.setFill()
        rectangle2Path.fill()


        //// Rectangle 3 Drawing
        var rectangle3Path = UIBezierPath()
        rectangle3Path.moveToPoint(CGPointMake(16.96, 17.73))
        rectangle3Path.addCurveToPoint(CGPointMake(6.53, 17.73), controlPoint1: CGPointMake(14.55, 17.95), controlPoint2: CGPointMake(7.33, 17.73))
        rectangle3Path.addCurveToPoint(CGPointMake(5.73, 16.83), controlPoint1: CGPointMake(5.73, 17.73), controlPoint2: CGPointMake(5.73, 16.83))
        rectangle3Path.addLineToPoint(CGPointMake(15.36, 16.83))
        rectangle3Path.addCurveToPoint(CGPointMake(16.96, 17.73), controlPoint1: CGPointMake(15.36, 16.83), controlPoint2: CGPointMake(19.37, 17.5))
        rectangle3Path.closePath()
        babbelRedS50.setFill()
        rectangle3Path.fill()


        //// Rectangle 4 Drawing
        var rectangle4Path = UIBezierPath()
        rectangle4Path.moveToPoint(CGPointMake(14.15, 14.83))
        rectangle4Path.addCurveToPoint(CGPointMake(19.33, 14.83), controlPoint1: CGPointMake(15.35, 15.08), controlPoint2: CGPointMake(18.93, 14.83))
        rectangle4Path.addCurveToPoint(CGPointMake(19.73, 13.83), controlPoint1: CGPointMake(19.73, 14.83), controlPoint2: CGPointMake(19.73, 13.83))
        rectangle4Path.addLineToPoint(CGPointMake(14.95, 13.83))
        rectangle4Path.addCurveToPoint(CGPointMake(14.15, 14.83), controlPoint1: CGPointMake(14.95, 13.83), controlPoint2: CGPointMake(12.96, 14.58))
        rectangle4Path.closePath()
        babbelRedS50.setFill()
        rectangle4Path.fill()
    }

    public class func drawCanvasSling() {

        //// Rectangle Drawing
        var rectanglePath = UIBezierPath()
        rectanglePath.moveToPoint(CGPointMake(0, 18.78))
        rectanglePath.addCurveToPoint(CGPointMake(3.9, 15.65), controlPoint1: CGPointMake(0, 18.78), controlPoint2: CGPointMake(1.9, 15.65))
        rectanglePath.addCurveToPoint(CGPointMake(8, 24), controlPoint1: CGPointMake(5.9, 15.65), controlPoint2: CGPointMake(8, 24))
        rectanglePath.addLineToPoint(CGPointMake(8, 0))
        rectanglePath.addCurveToPoint(CGPointMake(3.9, 8.35), controlPoint1: CGPointMake(8, 0), controlPoint2: CGPointMake(5.9, 8.35))
        rectanglePath.addCurveToPoint(CGPointMake(0, 5.22), controlPoint1: CGPointMake(1.9, 8.35), controlPoint2: CGPointMake(0, 5.22))
        rectanglePath.addLineToPoint(CGPointMake(0, 18.78))
        rectanglePath.closePath()
        AngyWordsStyleKit.babbelRed.setFill()
        rectanglePath.fill()
    }

    public class func drawCanvasEule() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let babbelGreenS40 = AngyWordsStyleKit.babbelGreen.colorWithShadow(0.4)
        let sand = UIColor(red: 0.880, green: 0.754, blue: 0.335, alpha: 1.000)
        let sandS40 = sand.colorWithShadow(0.4)

        //// Bezier Drawing
        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(10.03, 20.19))
        bezierPath.addCurveToPoint(CGPointMake(9.23, 21.02), controlPoint1: CGPointMake(9.79, 20.46), controlPoint2: CGPointMake(9.53, 20.74))
        bezierPath.addCurveToPoint(CGPointMake(10.27, 21.79), controlPoint1: CGPointMake(9.91, 21.05), controlPoint2: CGPointMake(10.26, 21.32))
        bezierPath.addCurveToPoint(CGPointMake(11.51, 24.16), controlPoint1: CGPointMake(12.47, 21.33), controlPoint2: CGPointMake(13.04, 22.34))
        bezierPath.addCurveToPoint(CGPointMake(4.08, 28.79), controlPoint1: CGPointMake(9.9, 26.07), controlPoint2: CGPointMake(6.57, 28.14))
        bezierPath.addCurveToPoint(CGPointMake(1.63, 28.22), controlPoint1: CGPointMake(2.51, 29.2), controlPoint2: CGPointMake(1.64, 28.94))
        bezierPath.addCurveToPoint(CGPointMake(0.39, 25.85), controlPoint1: CGPointMake(-0.57, 28.68), controlPoint2: CGPointMake(-1.14, 27.66))
        bezierPath.addCurveToPoint(CGPointMake(1.18, 25.02), controlPoint1: CGPointMake(0.62, 25.57), controlPoint2: CGPointMake(0.89, 25.29))
        bezierPath.addCurveToPoint(CGPointMake(1, 22.54), controlPoint1: CGPointMake(-0.1, 24.96), controlPoint2: CGPointMake(-0.24, 24.02))
        bezierPath.addCurveToPoint(CGPointMake(8.43, 17.9), controlPoint1: CGPointMake(2.61, 20.63), controlPoint2: CGPointMake(5.94, 18.55))
        bezierPath.addCurveToPoint(CGPointMake(10.03, 20.19), controlPoint1: CGPointMake(10.92, 17.26), controlPoint2: CGPointMake(11.64, 18.28))
        bezierPath.closePath()
        babbelGreenS40.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        var bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPointMake(28.97, 20.19))
        bezier2Path.addCurveToPoint(CGPointMake(29.77, 21.02), controlPoint1: CGPointMake(29.21, 20.46), controlPoint2: CGPointMake(29.47, 20.74))
        bezier2Path.addCurveToPoint(CGPointMake(28.73, 21.79), controlPoint1: CGPointMake(29.09, 21.05), controlPoint2: CGPointMake(28.74, 21.32))
        bezier2Path.addCurveToPoint(CGPointMake(27.49, 24.16), controlPoint1: CGPointMake(26.53, 21.33), controlPoint2: CGPointMake(25.96, 22.34))
        bezier2Path.addCurveToPoint(CGPointMake(34.92, 28.79), controlPoint1: CGPointMake(29.1, 26.07), controlPoint2: CGPointMake(32.43, 28.14))
        bezier2Path.addCurveToPoint(CGPointMake(37.37, 28.22), controlPoint1: CGPointMake(36.49, 29.2), controlPoint2: CGPointMake(37.36, 28.94))
        bezier2Path.addCurveToPoint(CGPointMake(38.61, 25.85), controlPoint1: CGPointMake(39.57, 28.68), controlPoint2: CGPointMake(40.14, 27.66))
        bezier2Path.addCurveToPoint(CGPointMake(37.82, 25.02), controlPoint1: CGPointMake(38.38, 25.57), controlPoint2: CGPointMake(38.11, 25.29))
        bezier2Path.addCurveToPoint(CGPointMake(38, 22.54), controlPoint1: CGPointMake(39.1, 24.96), controlPoint2: CGPointMake(39.24, 24.02))
        bezier2Path.addCurveToPoint(CGPointMake(30.57, 17.9), controlPoint1: CGPointMake(36.39, 20.63), controlPoint2: CGPointMake(33.06, 18.55))
        bezier2Path.addCurveToPoint(CGPointMake(28.97, 20.19), controlPoint1: CGPointMake(28.08, 17.26), controlPoint2: CGPointMake(27.36, 18.28))
        bezier2Path.closePath()
        babbelGreenS40.setFill()
        bezier2Path.fill()


        //// Body Drawing
        var bodyPath = UIBezierPath()
        bodyPath.moveToPoint(CGPointMake(31.3, 35.95))
        bodyPath.addCurveToPoint(CGPointMake(31.31, 19.12), controlPoint1: CGPointMake(37.57, 32.06), controlPoint2: CGPointMake(35.91, 25.62))
        bodyPath.addCurveToPoint(CGPointMake(8.61, 19.12), controlPoint1: CGPointMake(26.71, 12.61), controlPoint2: CGPointMake(12.81, 12.94))
        bodyPath.addCurveToPoint(CGPointMake(8.57, 35.95), controlPoint1: CGPointMake(4.4, 25.29), controlPoint2: CGPointMake(2.3, 32.06))
        bodyPath.addCurveToPoint(CGPointMake(31.3, 35.95), controlPoint1: CGPointMake(14.84, 39.84), controlPoint2: CGPointMake(25.03, 39.84))
        bodyPath.closePath()
        babbelGreenS40.setFill()
        bodyPath.fill()


        //// Head Drawing
        var headPath = UIBezierPath()
        headPath.moveToPoint(CGPointMake(6.04, 15.95))
        headPath.addCurveToPoint(CGPointMake(33.31, 15.95), controlPoint1: CGPointMake(9.1, 19.59), controlPoint2: CGPointMake(30.95, 20))
        headPath.addCurveToPoint(CGPointMake(33.31, 6.61), controlPoint1: CGPointMake(35.67, 11.9), controlPoint2: CGPointMake(33.31, 6.61))
        headPath.addCurveToPoint(CGPointMake(19.5, 5.04), controlPoint1: CGPointMake(33.31, 6.61), controlPoint2: CGPointMake(26.32, 5.04))
        headPath.addCurveToPoint(CGPointMake(6.04, 6.61), controlPoint1: CGPointMake(12.68, 5.04), controlPoint2: CGPointMake(6.04, 6.61))
        headPath.addCurveToPoint(CGPointMake(6.04, 15.95), controlPoint1: CGPointMake(6.04, 6.61), controlPoint2: CGPointMake(2.98, 12.31))
        headPath.closePath()
        babbelGreenS40.setFill()
        headPath.fill()


        //// EarLeft Drawing
        var earLeftPath = UIBezierPath()
        earLeftPath.moveToPoint(CGPointMake(8.05, 0.5))
        earLeftPath.addCurveToPoint(CGPointMake(13.56, 6.63), controlPoint1: CGPointMake(9.93, 0.5), controlPoint2: CGPointMake(13.56, 6.63))
        earLeftPath.addLineToPoint(CGPointMake(6.03, 6.63))
        earLeftPath.addCurveToPoint(CGPointMake(8.05, 0.5), controlPoint1: CGPointMake(6.03, 6.63), controlPoint2: CGPointMake(6.17, 0.5))
        earLeftPath.closePath()
        babbelGreenS40.setFill()
        earLeftPath.fill()


        //// Beak Drawing
        var beakPath = UIBezierPath()
        beakPath.moveToPoint(CGPointMake(19.82, 17.44))
        beakPath.addCurveToPoint(CGPointMake(16.1, 12.36), controlPoint1: CGPointMake(17.94, 17.43), controlPoint2: CGPointMake(16.1, 12.36))
        beakPath.addLineToPoint(CGPointMake(23.63, 12.38))
        beakPath.addCurveToPoint(CGPointMake(19.82, 17.44), controlPoint1: CGPointMake(23.63, 12.38), controlPoint2: CGPointMake(21.71, 17.44))
        beakPath.closePath()
        AngyWordsStyleKit.babbelOrange.setFill()
        beakPath.fill()


        //// EyesBack Drawing
        var eyesBackPath = UIBezierPath()
        eyesBackPath.moveToPoint(CGPointMake(31.44, 7.88))
        eyesBackPath.addCurveToPoint(CGPointMake(31.44, 14.02), controlPoint1: CGPointMake(33.24, 9.58), controlPoint2: CGPointMake(33.24, 12.32))
        eyesBackPath.addCurveToPoint(CGPointMake(24.92, 14.05), controlPoint1: CGPointMake(29.65, 15.71), controlPoint2: CGPointMake(26.41, 15.7))
        eyesBackPath.addCurveToPoint(CGPointMake(20.02, 12.64), controlPoint1: CGPointMake(24.55, 13.64), controlPoint2: CGPointMake(22.12, 12.64))
        eyesBackPath.addCurveToPoint(CGPointMake(14.76, 13.95), controlPoint1: CGPointMake(17.93, 12.64), controlPoint2: CGPointMake(15.1, 13.61))
        eyesBackPath.addCurveToPoint(CGPointMake(8.33, 13.95), controlPoint1: CGPointMake(13.38, 15.29), controlPoint2: CGPointMake(10.11, 15.63))
        eyesBackPath.addCurveToPoint(CGPointMake(8.33, 7.87), controlPoint1: CGPointMake(6.56, 12.27), controlPoint2: CGPointMake(6.56, 9.55))
        eyesBackPath.addCurveToPoint(CGPointMake(14.76, 7.87), controlPoint1: CGPointMake(10.11, 6.19), controlPoint2: CGPointMake(12.68, 6.61))
        eyesBackPath.addCurveToPoint(CGPointMake(20.02, 8.93), controlPoint1: CGPointMake(15.28, 8.18), controlPoint2: CGPointMake(18.1, 8.84))
        eyesBackPath.addCurveToPoint(CGPointMake(24.95, 7.88), controlPoint1: CGPointMake(21.95, 9.01), controlPoint2: CGPointMake(24.5, 8.16))
        eyesBackPath.addCurveToPoint(CGPointMake(31.44, 7.88), controlPoint1: CGPointMake(26.76, 6.78), controlPoint2: CGPointMake(29.65, 6.19))
        eyesBackPath.closePath()
        AngyWordsStyleKit.babbelGreen50.setFill()
        eyesBackPath.fill()


        //// PupilRight Drawing
        var pupilRightPath = UIBezierPath(ovalInRect: CGRectMake(25, 8, 6, 6))
        AngyWordsStyleKit.babbelFontDarkGray.setFill()
        pupilRightPath.fill()


        //// PupilLeft Drawing
        var pupilLeftPath = UIBezierPath(ovalInRect: CGRectMake(9, 8, 6, 6))
        AngyWordsStyleKit.babbelFontDarkGray.setFill()
        pupilLeftPath.fill()


        //// EarRight Drawing
        var earRightPath = UIBezierPath()
        earRightPath.moveToPoint(CGPointMake(31.3, 0))
        earRightPath.addCurveToPoint(CGPointMake(25.7, 6.63), controlPoint1: CGPointMake(29.42, 0), controlPoint2: CGPointMake(25.7, 6.63))
        earRightPath.addLineToPoint(CGPointMake(33.23, 6.63))
        earRightPath.addCurveToPoint(CGPointMake(31.3, 0), controlPoint1: CGPointMake(33.23, 6.63), controlPoint2: CGPointMake(33.18, 0))
        earRightPath.closePath()
        babbelGreenS40.setFill()
        earRightPath.fill()


        //// Oval Drawing
        var ovalPath = UIBezierPath(ovalInRect: CGRectMake(10, 9, 1, 2))
        UIColor.whiteColor().setFill()
        ovalPath.fill()


        //// Oval 2 Drawing
        var oval2Path = UIBezierPath(ovalInRect: CGRectMake(26, 9, 2, 3))
        UIColor.whiteColor().setFill()
        oval2Path.fill()


        //// Body 2 Drawing
        var body2Path = UIBezierPath()
        body2Path.moveToPoint(CGPointMake(28.15, 34.09))
        body2Path.addCurveToPoint(CGPointMake(28.16, 21.93), controlPoint1: CGPointMake(32.7, 31.28), controlPoint2: CGPointMake(31.49, 26.63))
        body2Path.addCurveToPoint(CGPointMake(11.7, 21.93), controlPoint1: CGPointMake(24.82, 17.23), controlPoint2: CGPointMake(14.75, 17.47))
        body2Path.addCurveToPoint(CGPointMake(11.68, 34.09), controlPoint1: CGPointMake(8.66, 26.39), controlPoint2: CGPointMake(7.14, 31.28))
        body2Path.addCurveToPoint(CGPointMake(28.15, 34.09), controlPoint1: CGPointMake(16.22, 36.9), controlPoint2: CGPointMake(23.61, 36.9))
        body2Path.closePath()
        AngyWordsStyleKit.babbelGreen75.setFill()
        body2Path.fill()


        //// Oval 9 Drawing
        var oval9Path = UIBezierPath(ovalInRect: CGRectMake(5, 2, 4, 2))
        babbelGreenS40.setFill()
        oval9Path.fill()


        //// Oval 10 Drawing
        var oval10Path = UIBezierPath(ovalInRect: CGRectMake(5, 0, 4, 3))
        babbelGreenS40.setFill()
        oval10Path.fill()


        //// Oval 11 Drawing
        var oval11Path = UIBezierPath(ovalInRect: CGRectMake(5, 4, 5, 1))
        babbelGreenS40.setFill()
        oval11Path.fill()


        //// Bezier 3 Drawing
        var bezier3Path = UIBezierPath()
        bezier3Path.moveToPoint(CGPointMake(33.57, 0.23))
        bezier3Path.addCurveToPoint(CGPointMake(33.57, 1.34), controlPoint1: CGPointMake(34.39, 0.54), controlPoint2: CGPointMake(34.39, 1.03))
        bezier3Path.addCurveToPoint(CGPointMake(33.38, 1.4), controlPoint1: CGPointMake(33.51, 1.36), controlPoint2: CGPointMake(33.44, 1.39))
        bezier3Path.addCurveToPoint(CGPointMake(33.92, 1.55), controlPoint1: CGPointMake(33.57, 1.44), controlPoint2: CGPointMake(33.76, 1.49))
        bezier3Path.addCurveToPoint(CGPointMake(33.92, 2.66), controlPoint1: CGPointMake(34.74, 1.86), controlPoint2: CGPointMake(34.74, 2.36))
        bezier3Path.addCurveToPoint(CGPointMake(30.95, 2.66), controlPoint1: CGPointMake(33.1, 2.97), controlPoint2: CGPointMake(31.77, 2.97))
        bezier3Path.addCurveToPoint(CGPointMake(30.95, 1.55), controlPoint1: CGPointMake(30.13, 2.36), controlPoint2: CGPointMake(30.13, 1.86))
        bezier3Path.addCurveToPoint(CGPointMake(31.15, 1.49), controlPoint1: CGPointMake(31.02, 1.53), controlPoint2: CGPointMake(31.08, 1.51))
        bezier3Path.addCurveToPoint(CGPointMake(30.6, 1.34), controlPoint1: CGPointMake(30.95, 1.45), controlPoint2: CGPointMake(30.77, 1.4))
        bezier3Path.addCurveToPoint(CGPointMake(30.6, 0.23), controlPoint1: CGPointMake(29.79, 1.03), controlPoint2: CGPointMake(29.79, 0.54))
        bezier3Path.addCurveToPoint(CGPointMake(33.57, 0.23), controlPoint1: CGPointMake(31.42, -0.08), controlPoint2: CGPointMake(32.75, -0.08))
        bezier3Path.closePath()
        bezier3Path.moveToPoint(CGPointMake(33.13, 3.12))
        bezier3Path.addCurveToPoint(CGPointMake(33.13, 4.23), controlPoint1: CGPointMake(33.95, 3.43), controlPoint2: CGPointMake(33.95, 3.93))
        bezier3Path.addCurveToPoint(CGPointMake(30.17, 4.23), controlPoint1: CGPointMake(32.31, 4.54), controlPoint2: CGPointMake(30.99, 4.54))
        bezier3Path.addCurveToPoint(CGPointMake(30.17, 3.12), controlPoint1: CGPointMake(29.35, 3.93), controlPoint2: CGPointMake(29.35, 3.43))
        bezier3Path.addCurveToPoint(CGPointMake(33.13, 3.12), controlPoint1: CGPointMake(30.99, 2.82), controlPoint2: CGPointMake(32.31, 2.82))
        bezier3Path.closePath()
        babbelGreenS40.setFill()
        bezier3Path.fill()


        //// Oval 12 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 16.06, 4.71)
        CGContextRotateCTM(context, -32.49 * CGFloat(M_PI) / 180)

        var oval12Path = UIBezierPath(ovalInRect: CGRectMake(-0.68, -1.98, 1.36, 3.97))
        babbelGreenS40.setFill()
        oval12Path.fill()

        CGContextRestoreGState(context)


        //// Oval 13 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 17.9, 5.21)
        CGContextRotateCTM(context, -32.49 * CGFloat(M_PI) / 180)

        var oval13Path = UIBezierPath(ovalInRect: CGRectMake(-0.68, -1.98, 1.36, 3.97))
        babbelGreenS40.setFill()
        oval13Path.fill()

        CGContextRestoreGState(context)


        //// Oval 3 Drawing
        var oval3Path = UIBezierPath(ovalInRect: CGRectMake(13, 36, 1, 4))
        sandS40.setFill()
        oval3Path.fill()


        //// Oval 4 Drawing
        var oval4Path = UIBezierPath(ovalInRect: CGRectMake(14, 37, 1, 3))
        sandS40.setFill()
        oval4Path.fill()


        //// Oval 5 Drawing
        var oval5Path = UIBezierPath(ovalInRect: CGRectMake(15, 37, 1, 3))
        sandS40.setFill()
        oval5Path.fill()


        //// Oval 6 Drawing
        var oval6Path = UIBezierPath(ovalInRect: CGRectMake(25, 36, 1, 4))
        sandS40.setFill()
        oval6Path.fill()


        //// Oval 7 Drawing
        var oval7Path = UIBezierPath(ovalInRect: CGRectMake(24, 37, 1, 3))
        sandS40.setFill()
        oval7Path.fill()


        //// Oval 8 Drawing
        var oval8Path = UIBezierPath(ovalInRect: CGRectMake(23, 37, 1, 3))
        sandS40.setFill()
        oval8Path.fill()
    }

    public class func drawCanvasBabbelFigure() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let babbelOrangeS10 = AngyWordsStyleKit.babbelOrange.colorWithShadow(0.1)

        //// Gradient Declarations
        let gradient = CGGradientCreateWithColors(CGColorSpaceCreateDeviceRGB(), [babbelOrangeS10.CGColor, AngyWordsStyleKit.babbelOrange.CGColor], [0, 1])
        let orangeOrange2 = CGGradientCreateWithColors(CGColorSpaceCreateDeviceRGB(), [babbelOrangeS10.CGColor, AngyWordsStyleKit.babbelOrange.CGColor], [0, 1])

        //// Group
        //// HairShadow Drawing
        var hairShadowPath = UIBezierPath()
        hairShadowPath.moveToPoint(CGPointMake(11.25, 1.1))
        hairShadowPath.addCurveToPoint(CGPointMake(13.52, 2.38), controlPoint1: CGPointMake(12.16, 1.52), controlPoint2: CGPointMake(12.91, 1.91))
        hairShadowPath.addCurveToPoint(CGPointMake(13.67, 1.44), controlPoint1: CGPointMake(13.63, 2.11), controlPoint2: CGPointMake(13.69, 1.8))
        hairShadowPath.addCurveToPoint(CGPointMake(15.36, 3.32), controlPoint1: CGPointMake(13.56, -1.62), controlPoint2: CGPointMake(15.56, 1.76))
        hairShadowPath.addCurveToPoint(CGPointMake(15.33, 3.57), controlPoint1: CGPointMake(15.35, 3.4), controlPoint2: CGPointMake(15.34, 3.49))
        hairShadowPath.addCurveToPoint(CGPointMake(15.6, 2.54), controlPoint1: CGPointMake(15.49, 3.28), controlPoint2: CGPointMake(15.59, 2.94))
        hairShadowPath.addCurveToPoint(CGPointMake(17.14, 4.47), controlPoint1: CGPointMake(15.73, -0.52), controlPoint2: CGPointMake(17.47, 2.92))
        hairShadowPath.addCurveToPoint(CGPointMake(14.48, 8.29), controlPoint1: CGPointMake(16.82, 6.02), controlPoint2: CGPointMake(16.3, 7.09))
        hairShadowPath.addCurveToPoint(CGPointMake(12.05, 8.3), controlPoint1: CGPointMake(12.82, 9.38), controlPoint2: CGPointMake(12.9, 10.18))
        hairShadowPath.addCurveToPoint(CGPointMake(11.58, 8.39), controlPoint1: CGPointMake(11.9, 8.34), controlPoint2: CGPointMake(11.74, 8.36))
        hairShadowPath.addCurveToPoint(CGPointMake(11.43, 8.41), controlPoint1: CGPointMake(11.53, 8.41), controlPoint2: CGPointMake(11.48, 8.42))
        hairShadowPath.addCurveToPoint(CGPointMake(9.09, 8.25), controlPoint1: CGPointMake(10.62, 8.52), controlPoint2: CGPointMake(9.79, 8.48))
        hairShadowPath.addCurveToPoint(CGPointMake(4.16, 3.67), controlPoint1: CGPointMake(6.62, 7.45), controlPoint2: CGPointMake(9.22, 4.13))
        hairShadowPath.addCurveToPoint(CGPointMake(9.09, 2.48), controlPoint1: CGPointMake(-0.9, 3.21), controlPoint2: CGPointMake(6.62, 1.67))
        hairShadowPath.addCurveToPoint(CGPointMake(10.15, 2.84), controlPoint1: CGPointMake(9.47, 2.6), controlPoint2: CGPointMake(9.82, 2.72))
        hairShadowPath.addCurveToPoint(CGPointMake(7.9, 1.08), controlPoint1: CGPointMake(9.86, 2.22), controlPoint2: CGPointMake(9.29, 1.59))
        hairShadowPath.addCurveToPoint(CGPointMake(11.25, 1.1), controlPoint1: CGPointMake(3.8, -0.42), controlPoint2: CGPointMake(9.3, 0.19))
        hairShadowPath.closePath()
        babbelOrangeS10.setFill()
        hairShadowPath.fill()


        //// BBody Drawing
        var bBodyPath = UIBezierPath()
        bBodyPath.moveToPoint(CGPointMake(21.31, 5.31))
        bBodyPath.addCurveToPoint(CGPointMake(28.11, 8.31), controlPoint1: CGPointMake(23.78, 5.33), controlPoint2: CGPointMake(26.23, 6.33))
        bBodyPath.addCurveToPoint(CGPointMake(30.21, 24.48), controlPoint1: CGPointMake(31.89, 12.3), controlPoint2: CGPointMake(35.69, 17.79))
        bBodyPath.addCurveToPoint(CGPointMake(21.32, 24.48), controlPoint1: CGPointMake(28.81, 26.19), controlPoint2: CGPointMake(23.51, 26.09))
        bBodyPath.addCurveToPoint(CGPointMake(17.67, 21.13), controlPoint1: CGPointMake(19.28, 22.96), controlPoint2: CGPointMake(17.79, 19.95))
        bBodyPath.addCurveToPoint(CGPointMake(21.32, 27.3), controlPoint1: CGPointMake(17.67, 23.64), controlPoint2: CGPointMake(19.28, 26.23))
        bBodyPath.addCurveToPoint(CGPointMake(28.11, 28.76), controlPoint1: CGPointMake(23.8, 28.61), controlPoint2: CGPointMake(26.88, 28.17))
        bBodyPath.addCurveToPoint(CGPointMake(28.11, 43.21), controlPoint1: CGPointMake(32.65, 30.91), controlPoint2: CGPointMake(31.89, 39.22))
        bBodyPath.addCurveToPoint(CGPointMake(19.5, 46.34), controlPoint1: CGPointMake(26.23, 45.19), controlPoint2: CGPointMake(21.95, 46.32))
        bBodyPath.addCurveToPoint(CGPointMake(1.72, 41.71), controlPoint1: CGPointMake(19.5, 46.34), controlPoint2: CGPointMake(6.95, 45.95))
        bBodyPath.addCurveToPoint(CGPointMake(6.1, 6.73), controlPoint1: CGPointMake(-3.52, 37.46), controlPoint2: CGPointMake(4.76, 9.3))
        bBodyPath.addCurveToPoint(CGPointMake(21.32, 5.32), controlPoint1: CGPointMake(7.43, 4.19), controlPoint2: CGPointMake(21, 5.29))
        bBodyPath.addLineToPoint(CGPointMake(21.31, 5.31))
        bBodyPath.closePath()
        AngyWordsStyleKit.babbelOrange.setFill()
        bBodyPath.fill()


        //// NoseShadow Drawing
        var noseShadowPath = UIBezierPath()
        noseShadowPath.moveToPoint(CGPointMake(30.21, 23.32))
        noseShadowPath.addCurveToPoint(CGPointMake(32.4, 17.02), controlPoint1: CGPointMake(31.85, 21.39), controlPoint2: CGPointMake(33.17, 17.86))
        noseShadowPath.addCurveToPoint(CGPointMake(27.29, 21.39), controlPoint1: CGPointMake(32.2, 16.79), controlPoint2: CGPointMake(31.19, 20.49))
        noseShadowPath.addCurveToPoint(CGPointMake(21.23, 23.29), controlPoint1: CGPointMake(23.39, 22.29), controlPoint2: CGPointMake(18.92, 20.5))
        noseShadowPath.addCurveToPoint(CGPointMake(30.21, 23.32), controlPoint1: CGPointMake(23.53, 26.07), controlPoint2: CGPointMake(28.14, 25.76))
        noseShadowPath.closePath()
        CGContextSaveGState(context)
        noseShadowPath.addClip()
        CGContextDrawLinearGradient(context, orangeOrange2, CGPointMake(22.99, 25.08), CGPointMake(31.73, 16.34), 0)
        CGContextRestoreGState(context)


        //// PlusVertical Drawing
        let plusVerticalPath = UIBezierPath(roundedRect: CGRectMake(18.11, 29.34, 2, 14), cornerRadius: 1)
        UIColor.whiteColor().setFill()
        plusVerticalPath.fill()


        //// PlusHorizontal Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 18.9, 36.07)
        CGContextRotateCTM(context, -90.36 * CGFloat(M_PI) / 180)

        let plusHorizontalPath = UIBezierPath(roundedRect: CGRectMake(-1.73, -6.45, 3.47, 12.91), cornerRadius: 1.73)
        UIColor.whiteColor().setFill()
        plusHorizontalPath.fill()

        CGContextRestoreGState(context)


        //// PlusCut Drawing
        let plusCutPath = UIBezierPath(rect: CGRectMake(18.11, 32.34, 2, 2))
        AngyWordsStyleKit.babbelOrange.setFill()
        plusCutPath.fill()


        //// Hair Drawing
        var hairPath = UIBezierPath()
        hairPath.moveToPoint(CGPointMake(10.38, 1.48))
        hairPath.addCurveToPoint(CGPointMake(13.03, 3.54), controlPoint1: CGPointMake(11.44, 2.15), controlPoint2: CGPointMake(12.31, 2.79))
        hairPath.addCurveToPoint(CGPointMake(13.21, 2.03), controlPoint1: CGPointMake(13.16, 3.1), controlPoint2: CGPointMake(13.22, 2.6))
        hairPath.addCurveToPoint(CGPointMake(15.18, 5.04), controlPoint1: CGPointMake(13.07, -2.87), controlPoint2: CGPointMake(15.42, 2.54))
        hairPath.addCurveToPoint(CGPointMake(15.14, 5.45), controlPoint1: CGPointMake(15.17, 5.18), controlPoint2: CGPointMake(15.16, 5.32))
        hairPath.addCurveToPoint(CGPointMake(15.46, 3.79), controlPoint1: CGPointMake(15.32, 4.98), controlPoint2: CGPointMake(15.44, 4.44))
        hairPath.addCurveToPoint(CGPointMake(17.26, 6.89), controlPoint1: CGPointMake(15.61, -1.11), controlPoint2: CGPointMake(17.64, 4.41))
        hairPath.addCurveToPoint(CGPointMake(14.14, 13.01), controlPoint1: CGPointMake(16.88, 9.37), controlPoint2: CGPointMake(16.27, 11.09))
        hairPath.addCurveToPoint(CGPointMake(11.31, 13.02), controlPoint1: CGPointMake(12.21, 14.75), controlPoint2: CGPointMake(12.3, 16.03))
        hairPath.addCurveToPoint(CGPointMake(10.77, 13.16), controlPoint1: CGPointMake(11.13, 13.08), controlPoint2: CGPointMake(10.95, 13.12))
        hairPath.addCurveToPoint(CGPointMake(10.59, 13.2), controlPoint1: CGPointMake(10.71, 13.2), controlPoint2: CGPointMake(10.65, 13.21))
        hairPath.addCurveToPoint(CGPointMake(7.86, 12.95), controlPoint1: CGPointMake(9.65, 13.37), controlPoint2: CGPointMake(8.68, 13.31))
        hairPath.addCurveToPoint(CGPointMake(2.11, 5.6), controlPoint1: CGPointMake(4.98, 11.65), controlPoint2: CGPointMake(8.01, 6.33))
        hairPath.addCurveToPoint(CGPointMake(7.86, 3.69), controlPoint1: CGPointMake(-3.8, 4.87), controlPoint2: CGPointMake(4.98, 2.39))
        hairPath.addCurveToPoint(CGPointMake(9.1, 4.28), controlPoint1: CGPointMake(8.3, 3.89), controlPoint2: CGPointMake(8.71, 4.08))
        hairPath.addCurveToPoint(CGPointMake(6.48, 1.46), controlPoint1: CGPointMake(8.75, 3.27), controlPoint2: CGPointMake(8.1, 2.27))
        hairPath.addCurveToPoint(CGPointMake(10.38, 1.48), controlPoint1: CGPointMake(1.69, -0.94), controlPoint2: CGPointMake(8.1, 0.03))
        hairPath.closePath()
        AngyWordsStyleKit.babbelOrange.setFill()
        hairPath.fill()


        //// ShadowBody Drawing
        var shadowBodyPath = UIBezierPath()
        shadowBodyPath.moveToPoint(CGPointMake(1.47, 26.28))
        shadowBodyPath.addCurveToPoint(CGPointMake(1.47, 40.42), controlPoint1: CGPointMake(0.65, 31.56), controlPoint2: CGPointMake(-0.76, 38.28))
        shadowBodyPath.addCurveToPoint(CGPointMake(13.53, 42.22), controlPoint1: CGPointMake(6.71, 45.44), controlPoint2: CGPointMake(17.43, 45.57))
        shadowBodyPath.addCurveToPoint(CGPointMake(9.75, 26.28), controlPoint1: CGPointMake(11.57, 40.54), controlPoint2: CGPointMake(9.56, 32.91))
        shadowBodyPath.addCurveToPoint(CGPointMake(15.97, 11.23), controlPoint1: CGPointMake(9.95, 19.73), controlPoint2: CGPointMake(10.7, 13.4))
        shadowBodyPath.addCurveToPoint(CGPointMake(7.2, 7.63), controlPoint1: CGPointMake(26.56, 6.86), controlPoint2: CGPointMake(9.88, 4.29))
        shadowBodyPath.addCurveToPoint(CGPointMake(1.47, 26.28), controlPoint1: CGPointMake(5.66, 9.54), controlPoint2: CGPointMake(2.58, 19.19))
        shadowBodyPath.closePath()
        CGContextSaveGState(context)
        shadowBodyPath.addClip()
        CGContextDrawLinearGradient(context, gradient, CGPointMake(0.27, 25.3), CGPointMake(19.45, 25.3), 0)
        CGContextRestoreGState(context)


        //// EyeLeft Drawing
        var eyeLeftPath = UIBezierPath(ovalInRect: CGRectMake(16.61, 9.34, 9.5, 10))
        UIColor.whiteColor().setFill()
        eyeLeftPath.fill()
        AngyWordsStyleKit.babbelGray75.setStroke()
        eyeLeftPath.lineWidth = 1
        eyeLeftPath.stroke()


        //// EyeRight Drawing
        var eyeRightPath = UIBezierPath(ovalInRect: CGRectMake(26.11, 9.34, 10.5, 10))
        UIColor.whiteColor().setFill()
        eyeRightPath.fill()
        AngyWordsStyleKit.babbelGray75.setStroke()
        eyeRightPath.lineWidth = 1
        eyeRightPath.stroke()


        //// PupilRight Drawing
        var pupilRightPath = UIBezierPath(ovalInRect: CGRectMake(29.11, 12.34, 6, 6))
        AngyWordsStyleKit.babbelFontDarkGray.setFill()
        pupilRightPath.fill()


        //// PupilShineRight Drawing
        var pupilShineRightPath = UIBezierPath(ovalInRect: CGRectMake(29.11, 14.34, 2, 2))
        UIColor.whiteColor().setFill()
        pupilShineRightPath.fill()


        //// PupilLeft Drawing
        var pupilLeftPath = UIBezierPath(ovalInRect: CGRectMake(19.11, 12.34, 6, 6))
        AngyWordsStyleKit.babbelFontDarkGray.setFill()
        pupilLeftPath.fill()


        //// PupilShineLeft Drawing
        var pupilShineLeftPath = UIBezierPath(ovalInRect: CGRectMake(19.11, 14.34, 2, 2))
        UIColor.whiteColor().setFill()
        pupilShineLeftPath.fill()
    }

    public class func drawCanvasWoodBlockHorizontal() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let babbelOrangeS10 = AngyWordsStyleKit.babbelOrange.colorWithShadow(0.1)
        let babbelOranggeS60 = AngyWordsStyleKit.babbelOrange.colorWithShadow(0.6)

        //// Gradient Declarations
        let gradient3 = CGGradientCreateWithColors(CGColorSpaceCreateDeviceRGB(), [AngyWordsStyleKit.babbelLightOrange75.CGColor, AngyWordsStyleKit.babbelLightOrange.CGColor], [0, 1])
        let gradient4 = CGGradientCreateWithColors(CGColorSpaceCreateDeviceRGB(), [babbelOrangeS10.CGColor, babbelOrangeS10.blendedColorWithFraction(0.5, ofColor: babbelOranggeS60).CGColor, babbelOranggeS60.CGColor], [0, 0.85, 1])

        //// Group
        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRectMake(0, 0, 80, 16))
        AngyWordsStyleKit.babbelLightOrange75.setFill()
        rectangle2Path.fill()


        //// Rectangle 11 Drawing
        var rectangle11Path = UIBezierPath()
        rectangle11Path.moveToPoint(CGPointMake(0.34, 6.43))
        rectangle11Path.addCurveToPoint(CGPointMake(12.04, 6.27), controlPoint1: CGPointMake(0.34, 6.43), controlPoint2: CGPointMake(5.61, 6.3))
        rectangle11Path.addCurveToPoint(CGPointMake(30.97, 6.27), controlPoint1: CGPointMake(17.47, 6.26), controlPoint2: CGPointMake(24.78, 6.74))
        rectangle11Path.addCurveToPoint(CGPointMake(58.52, 6.29), controlPoint1: CGPointMake(37.17, 5.81), controlPoint2: CGPointMake(56.36, 6.79))
        rectangle11Path.addCurveToPoint(CGPointMake(78.47, 6.43), controlPoint1: CGPointMake(61.26, 5.66), controlPoint2: CGPointMake(77.38, 6.33))
        rectangle11Path.addCurveToPoint(CGPointMake(78.47, 0.41), controlPoint1: CGPointMake(81.91, 6.74), controlPoint2: CGPointMake(78.47, 0.41))
        rectangle11Path.addCurveToPoint(CGPointMake(69.87, 0.41), controlPoint1: CGPointMake(78.47, 0.41), controlPoint2: CGPointMake(73.31, 0.87))
        rectangle11Path.addCurveToPoint(CGPointMake(56.79, 0.41), controlPoint1: CGPointMake(66.42, -0.06), controlPoint2: CGPointMake(54.72, -0.21))
        rectangle11Path.addCurveToPoint(CGPointMake(37.17, 1.18), controlPoint1: CGPointMake(58.85, 1.02), controlPoint2: CGPointMake(45.08, 0.72))
        rectangle11Path.addCurveToPoint(CGPointMake(24.09, 0.41), controlPoint1: CGPointMake(29.25, 1.64), controlPoint2: CGPointMake(24.09, 0.41))
        rectangle11Path.addCurveToPoint(CGPointMake(12.04, 0.41), controlPoint1: CGPointMake(24.09, 0.41), controlPoint2: CGPointMake(14.8, -0.21))
        rectangle11Path.addCurveToPoint(CGPointMake(0.34, 0.41), controlPoint1: CGPointMake(9.29, 1.02), controlPoint2: CGPointMake(-0.76, -0.52))
        rectangle11Path.addCurveToPoint(CGPointMake(0.34, 6.43), controlPoint1: CGPointMake(1.44, 1.33), controlPoint2: CGPointMake(0.34, 6.43))
        rectangle11Path.closePath()
        CGContextSaveGState(context)
        rectangle11Path.addClip()
        CGContextDrawLinearGradient(context, gradient3, CGPointMake(40.13, 6.48), CGPointMake(40.13, -0), 0)
        CGContextRestoreGState(context)


        //// Rectangle 10 Drawing
        var rectangle10Path = UIBezierPath()
        rectangle10Path.moveToPoint(CGPointMake(0.34, 15.17))
        rectangle10Path.addCurveToPoint(CGPointMake(11.85, 14.95), controlPoint1: CGPointMake(0.34, 15.17), controlPoint2: CGPointMake(5.52, 14.98))
        rectangle10Path.addCurveToPoint(CGPointMake(30.48, 14.95), controlPoint1: CGPointMake(17.2, 14.93), controlPoint2: CGPointMake(24.38, 15.61))
        rectangle10Path.addCurveToPoint(CGPointMake(57.58, 14.98), controlPoint1: CGPointMake(36.57, 14.3), controlPoint2: CGPointMake(55.46, 15.68))
        rectangle10Path.addCurveToPoint(CGPointMake(77.21, 15.17), controlPoint1: CGPointMake(60.28, 14.08), controlPoint2: CGPointMake(76.14, 15.03))
        rectangle10Path.addCurveToPoint(CGPointMake(77.21, 6.67), controlPoint1: CGPointMake(80.6, 15.61), controlPoint2: CGPointMake(77.21, 6.67))
        rectangle10Path.addCurveToPoint(CGPointMake(68.75, 6.67), controlPoint1: CGPointMake(77.21, 6.67), controlPoint2: CGPointMake(72.13, 7.32))
        rectangle10Path.addCurveToPoint(CGPointMake(55.88, 6.67), controlPoint1: CGPointMake(65.36, 6.02), controlPoint2: CGPointMake(53.85, 5.8))
        rectangle10Path.addCurveToPoint(CGPointMake(36.57, 7.76), controlPoint1: CGPointMake(57.91, 7.54), controlPoint2: CGPointMake(44.36, 7.11))
        rectangle10Path.addCurveToPoint(CGPointMake(23.71, 6.67), controlPoint1: CGPointMake(28.79, 8.41), controlPoint2: CGPointMake(23.71, 6.67))
        rectangle10Path.addCurveToPoint(CGPointMake(11.85, 6.67), controlPoint1: CGPointMake(23.71, 6.67), controlPoint2: CGPointMake(14.56, 5.8))
        rectangle10Path.addCurveToPoint(CGPointMake(0.34, 6.67), controlPoint1: CGPointMake(9.14, 7.54), controlPoint2: CGPointMake(-0.74, 5.36))
        rectangle10Path.addCurveToPoint(CGPointMake(0.34, 15.17), controlPoint1: CGPointMake(1.42, 7.98), controlPoint2: CGPointMake(0.34, 15.17))
        rectangle10Path.closePath()
        CGContextSaveGState(context)
        rectangle10Path.addClip()
        CGContextDrawLinearGradient(context, gradient3, CGPointMake(39.49, 6.1), CGPointMake(39.49, 15.24), 0)
        CGContextRestoreGState(context)


        //// Rectangle Drawing
        var rectanglePath = UIBezierPath()
        rectanglePath.moveToPoint(CGPointMake(1.98, 4.93))
        rectanglePath.addCurveToPoint(CGPointMake(3.31, 4.86), controlPoint1: CGPointMake(1.98, 4.93), controlPoint2: CGPointMake(2.58, 4.87))
        rectanglePath.addCurveToPoint(CGPointMake(5.46, 4.86), controlPoint1: CGPointMake(3.93, 4.85), controlPoint2: CGPointMake(4.76, 5.07))
        rectanglePath.addCurveToPoint(CGPointMake(8.59, 4.87), controlPoint1: CGPointMake(6.16, 4.65), controlPoint2: CGPointMake(8.34, 5.09))
        rectanglePath.addCurveToPoint(CGPointMake(20.26, 4.95), controlPoint1: CGPointMake(8.9, 4.58), controlPoint2: CGPointMake(18.81, 5.6))
        rectanglePath.addCurveToPoint(CGPointMake(14.36, 2.29), controlPoint1: CGPointMake(21.7, 4.31), controlPoint2: CGPointMake(14.36, 2.29))
        rectanglePath.addCurveToPoint(CGPointMake(11.54, 2.29), controlPoint1: CGPointMake(14.36, 2.29), controlPoint2: CGPointMake(11.93, 2.49))
        rectanglePath.addCurveToPoint(CGPointMake(8.39, 2.23), controlPoint1: CGPointMake(11.15, 2.08), controlPoint2: CGPointMake(8.16, 1.95))
        rectanglePath.addCurveToPoint(CGPointMake(6.16, 2.57), controlPoint1: CGPointMake(8.62, 2.5), controlPoint2: CGPointMake(7.06, 2.36))
        rectanglePath.addCurveToPoint(CGPointMake(4.68, 2.23), controlPoint1: CGPointMake(5.26, 2.78), controlPoint2: CGPointMake(4.68, 2.23))
        rectanglePath.addCurveToPoint(CGPointMake(3.31, 2.23), controlPoint1: CGPointMake(4.68, 2.23), controlPoint2: CGPointMake(3.62, 1.95))
        rectanglePath.addCurveToPoint(CGPointMake(1.98, 2.23), controlPoint1: CGPointMake(3, 2.5), controlPoint2: CGPointMake(1.86, 1.81))
        rectanglePath.addCurveToPoint(CGPointMake(1.98, 4.93), controlPoint1: CGPointMake(2.11, 2.64), controlPoint2: CGPointMake(1.98, 4.93))
        rectanglePath.closePath()
        babbelOrangeS10.setFill()
        rectanglePath.fill()


        //// Rectangle 3 Drawing
        var rectangle3Path = UIBezierPath()
        rectangle3Path.moveToPoint(CGPointMake(33.14, 9.12))
        rectangle3Path.addCurveToPoint(CGPointMake(30.49, 9.06), controlPoint1: CGPointMake(33.14, 9.12), controlPoint2: CGPointMake(31.94, 9.07))
        rectangle3Path.addCurveToPoint(CGPointMake(27.69, 11.05), controlPoint1: CGPointMake(29.26, 9.06), controlPoint2: CGPointMake(29.09, 11.23))
        rectangle3Path.addCurveToPoint(CGPointMake(19.98, 9.07), controlPoint1: CGPointMake(26.29, 10.87), controlPoint2: CGPointMake(20.47, 9.27))
        rectangle3Path.addCurveToPoint(CGPointMake(15.47, 9.12), controlPoint1: CGPointMake(19.36, 8.82), controlPoint2: CGPointMake(15.72, 9.09))
        rectangle3Path.addCurveToPoint(CGPointMake(15.47, 6.77), controlPoint1: CGPointMake(14.7, 9.24), controlPoint2: CGPointMake(15.47, 6.77))
        rectangle3Path.addCurveToPoint(CGPointMake(10.51, 6.1), controlPoint1: CGPointMake(15.47, 6.77), controlPoint2: CGPointMake(9.73, 6.28))
        rectangle3Path.addCurveToPoint(CGPointMake(20.38, 6.77), controlPoint1: CGPointMake(11.29, 5.91), controlPoint2: CGPointMake(20.84, 6.53))
        rectangle3Path.addCurveToPoint(CGPointMake(24.81, 7.07), controlPoint1: CGPointMake(19.91, 7.01), controlPoint2: CGPointMake(23.02, 6.89))
        rectangle3Path.addCurveToPoint(CGPointMake(27.77, 6.77), controlPoint1: CGPointMake(26.6, 7.26), controlPoint2: CGPointMake(27.77, 6.77))
        rectangle3Path.addCurveToPoint(CGPointMake(30.49, 6.77), controlPoint1: CGPointMake(27.77, 6.77), controlPoint2: CGPointMake(29.87, 6.53))
        rectangle3Path.addCurveToPoint(CGPointMake(33.14, 6.77), controlPoint1: CGPointMake(31.11, 7.01), controlPoint2: CGPointMake(33.38, 6.41))
        rectangle3Path.addCurveToPoint(CGPointMake(33.14, 9.12), controlPoint1: CGPointMake(32.89, 7.13), controlPoint2: CGPointMake(33.14, 9.12))
        rectangle3Path.closePath()
        CGContextSaveGState(context)
        rectangle3Path.addClip()
        CGContextDrawLinearGradient(context, gradient3, CGPointMake(21.8, 6.06), CGPointMake(21.8, 11.06), 0)
        CGContextRestoreGState(context)


        //// Rectangle 4 Drawing
        var rectangle4Path = UIBezierPath()
        rectangle4Path.moveToPoint(CGPointMake(41.74, 3.44))
        rectangle4Path.addCurveToPoint(CGPointMake(44.37, 3.48), controlPoint1: CGPointMake(41.74, 3.44), controlPoint2: CGPointMake(42.92, 3.47))
        rectangle4Path.addCurveToPoint(CGPointMake(48.63, 3.48), controlPoint1: CGPointMake(45.59, 3.48), controlPoint2: CGPointMake(47.24, 3.37))
        rectangle4Path.addCurveToPoint(CGPointMake(54.83, 3.47), controlPoint1: CGPointMake(50.02, 3.59), controlPoint2: CGPointMake(54.34, 3.35))
        rectangle4Path.addCurveToPoint(CGPointMake(59.32, 3.44), controlPoint1: CGPointMake(55.45, 3.62), controlPoint2: CGPointMake(59.08, 3.46))
        rectangle4Path.addCurveToPoint(CGPointMake(59.32, 4.86), controlPoint1: CGPointMake(60.1, 3.37), controlPoint2: CGPointMake(59.32, 4.86))
        rectangle4Path.addCurveToPoint(CGPointMake(57.38, 4.86), controlPoint1: CGPointMake(59.32, 4.86), controlPoint2: CGPointMake(58.16, 4.75))
        rectangle4Path.addCurveToPoint(CGPointMake(54.44, 4.86), controlPoint1: CGPointMake(56.61, 4.97), controlPoint2: CGPointMake(53.98, 5))
        rectangle4Path.addCurveToPoint(CGPointMake(50.02, 4.67), controlPoint1: CGPointMake(54.91, 4.71), controlPoint2: CGPointMake(51.81, 4.78))
        rectangle4Path.addCurveToPoint(CGPointMake(47.08, 4.86), controlPoint1: CGPointMake(48.24, 4.57), controlPoint2: CGPointMake(47.08, 4.86))
        rectangle4Path.addCurveToPoint(CGPointMake(44.37, 4.86), controlPoint1: CGPointMake(47.08, 4.86), controlPoint2: CGPointMake(44.99, 5))
        rectangle4Path.addCurveToPoint(CGPointMake(41.74, 4.86), controlPoint1: CGPointMake(43.75, 4.71), controlPoint2: CGPointMake(41.49, 5.07))
        rectangle4Path.addCurveToPoint(CGPointMake(41.74, 3.44), controlPoint1: CGPointMake(41.98, 4.64), controlPoint2: CGPointMake(41.74, 3.44))
        rectangle4Path.closePath()
        babbelOrangeS10.setFill()
        rectangle4Path.fill()


        //// Rectangle 5 Drawing
        var rectangle5Path = UIBezierPath()
        rectangle5Path.moveToPoint(CGPointMake(54.05, 14.08))
        rectangle5Path.addCurveToPoint(CGPointMake(57.67, 14.02), controlPoint1: CGPointMake(54.05, 14.08), controlPoint2: CGPointMake(55.68, 14.03))
        rectangle5Path.addCurveToPoint(CGPointMake(63.54, 14.02), controlPoint1: CGPointMake(59.36, 14.01), controlPoint2: CGPointMake(61.62, 14.2))
        rectangle5Path.addCurveToPoint(CGPointMake(72.07, 14.02), controlPoint1: CGPointMake(65.45, 13.84), controlPoint2: CGPointMake(71.4, 14.22))
        rectangle5Path.addCurveToPoint(CGPointMake(78.24, 14.08), controlPoint1: CGPointMake(72.92, 13.78), controlPoint2: CGPointMake(77.91, 14.04))
        rectangle5Path.addCurveToPoint(CGPointMake(78.24, 11.73), controlPoint1: CGPointMake(79.31, 14.2), controlPoint2: CGPointMake(78.24, 11.73))
        rectangle5Path.addCurveToPoint(CGPointMake(75.58, 11.73), controlPoint1: CGPointMake(78.24, 11.73), controlPoint2: CGPointMake(76.65, 11.91))
        rectangle5Path.addCurveToPoint(CGPointMake(71.53, 11.73), controlPoint1: CGPointMake(74.51, 11.54), controlPoint2: CGPointMake(70.89, 11.48))
        rectangle5Path.addCurveToPoint(CGPointMake(65.45, 12.03), controlPoint1: CGPointMake(72.17, 11.97), controlPoint2: CGPointMake(67.91, 11.85))
        rectangle5Path.addCurveToPoint(CGPointMake(61.4, 11.73), controlPoint1: CGPointMake(63, 12.21), controlPoint2: CGPointMake(61.4, 11.73))
        rectangle5Path.addCurveToPoint(CGPointMake(57.67, 11.73), controlPoint1: CGPointMake(61.4, 11.73), controlPoint2: CGPointMake(58.53, 11.48))
        rectangle5Path.addCurveToPoint(CGPointMake(54.05, 11.73), controlPoint1: CGPointMake(56.82, 11.97), controlPoint2: CGPointMake(53.71, 11.36))
        rectangle5Path.addCurveToPoint(CGPointMake(54.05, 14.08), controlPoint1: CGPointMake(54.39, 12.09), controlPoint2: CGPointMake(54.05, 14.08))
        rectangle5Path.closePath()
        AngyWordsStyleKit.babbelYellow.setFill()
        rectangle5Path.fill()


        //// Rectangle 6 Drawing
        var rectangle6Path = UIBezierPath()
        rectangle6Path.moveToPoint(CGPointMake(3.26, 13.32))
        rectangle6Path.addCurveToPoint(CGPointMake(4.18, 13.27), controlPoint1: CGPointMake(3.26, 13.32), controlPoint2: CGPointMake(3.67, 13.28))
        rectangle6Path.addCurveToPoint(CGPointMake(5.66, 13.27), controlPoint1: CGPointMake(4.6, 13.27), controlPoint2: CGPointMake(5.17, 13.41))
        rectangle6Path.addCurveToPoint(CGPointMake(7.81, 13.28), controlPoint1: CGPointMake(6.14, 13.14), controlPoint2: CGPointMake(7.64, 13.43))
        rectangle6Path.addCurveToPoint(CGPointMake(9.37, 13.32), controlPoint1: CGPointMake(8.02, 13.09), controlPoint2: CGPointMake(9.28, 13.29))
        rectangle6Path.addCurveToPoint(CGPointMake(9.37, 11.55), controlPoint1: CGPointMake(9.64, 13.41), controlPoint2: CGPointMake(9.37, 11.55))
        rectangle6Path.addCurveToPoint(CGPointMake(8.7, 11.55), controlPoint1: CGPointMake(9.37, 11.55), controlPoint2: CGPointMake(8.96, 11.68))
        rectangle6Path.addCurveToPoint(CGPointMake(7.67, 11.55), controlPoint1: CGPointMake(8.43, 11.41), controlPoint2: CGPointMake(7.51, 11.37))
        rectangle6Path.addCurveToPoint(CGPointMake(6.14, 11.78), controlPoint1: CGPointMake(7.83, 11.73), controlPoint2: CGPointMake(6.76, 11.64))
        rectangle6Path.addCurveToPoint(CGPointMake(5.12, 11.55), controlPoint1: CGPointMake(5.52, 11.91), controlPoint2: CGPointMake(5.12, 11.55))
        rectangle6Path.addCurveToPoint(CGPointMake(4.18, 11.55), controlPoint1: CGPointMake(5.12, 11.55), controlPoint2: CGPointMake(4.39, 11.37))
        rectangle6Path.addCurveToPoint(CGPointMake(3.26, 11.55), controlPoint1: CGPointMake(3.96, 11.73), controlPoint2: CGPointMake(3.18, 11.28))
        rectangle6Path.addCurveToPoint(CGPointMake(3.26, 13.32), controlPoint1: CGPointMake(3.35, 11.82), controlPoint2: CGPointMake(3.26, 13.32))
        rectangle6Path.closePath()
        babbelOrangeS10.setFill()
        rectangle6Path.fill()


        //// Rectangle 7 Drawing
        var rectangle7Path = UIBezierPath()
        rectangle7Path.moveToPoint(CGPointMake(26.69, 12.58))
        rectangle7Path.addCurveToPoint(CGPointMake(29.32, 12.62), controlPoint1: CGPointMake(26.69, 12.58), controlPoint2: CGPointMake(27.87, 12.61))
        rectangle7Path.addCurveToPoint(CGPointMake(33.58, 12.62), controlPoint1: CGPointMake(30.54, 12.62), controlPoint2: CGPointMake(32.19, 12.51))
        rectangle7Path.addCurveToPoint(CGPointMake(39.78, 12.61), controlPoint1: CGPointMake(34.97, 12.73), controlPoint2: CGPointMake(39.29, 12.5))
        rectangle7Path.addCurveToPoint(CGPointMake(44.27, 12.58), controlPoint1: CGPointMake(40.4, 12.76), controlPoint2: CGPointMake(44.03, 12.61))
        rectangle7Path.addCurveToPoint(CGPointMake(44.27, 14), controlPoint1: CGPointMake(45.05, 12.51), controlPoint2: CGPointMake(44.27, 14))
        rectangle7Path.addCurveToPoint(CGPointMake(42.33, 14), controlPoint1: CGPointMake(44.27, 14), controlPoint2: CGPointMake(43.11, 13.89))
        rectangle7Path.addCurveToPoint(CGPointMake(39.39, 14), controlPoint1: CGPointMake(41.56, 14.11), controlPoint2: CGPointMake(38.93, 14.14))
        rectangle7Path.addCurveToPoint(CGPointMake(34.97, 13.82), controlPoint1: CGPointMake(39.86, 13.85), controlPoint2: CGPointMake(36.76, 13.93))
        rectangle7Path.addCurveToPoint(CGPointMake(32.03, 14), controlPoint1: CGPointMake(33.19, 13.71), controlPoint2: CGPointMake(32.03, 14))
        rectangle7Path.addCurveToPoint(CGPointMake(29.32, 14), controlPoint1: CGPointMake(32.03, 14), controlPoint2: CGPointMake(29.94, 14.14))
        rectangle7Path.addCurveToPoint(CGPointMake(26.69, 14), controlPoint1: CGPointMake(28.7, 13.85), controlPoint2: CGPointMake(26.44, 14.22))
        rectangle7Path.addCurveToPoint(CGPointMake(26.69, 12.58), controlPoint1: CGPointMake(26.93, 13.78), controlPoint2: CGPointMake(26.69, 12.58))
        rectangle7Path.closePath()
        babbelOrangeS10.setFill()
        rectangle7Path.fill()


        //// Rectangle 8 Drawing
        var rectangle8Path = UIBezierPath()
        rectangle8Path.moveToPoint(CGPointMake(18.99, 3.44))
        rectangle8Path.addCurveToPoint(CGPointMake(20.6, 3.48), controlPoint1: CGPointMake(18.99, 3.44), controlPoint2: CGPointMake(19.71, 3.47))
        rectangle8Path.addCurveToPoint(CGPointMake(23.22, 3.48), controlPoint1: CGPointMake(21.35, 3.48), controlPoint2: CGPointMake(22.36, 3.37))
        rectangle8Path.addCurveToPoint(CGPointMake(27.03, 3.47), controlPoint1: CGPointMake(24.08, 3.59), controlPoint2: CGPointMake(26.73, 3.35))
        rectangle8Path.addCurveToPoint(CGPointMake(29.79, 3.44), controlPoint1: CGPointMake(27.41, 3.62), controlPoint2: CGPointMake(29.64, 3.46))
        rectangle8Path.addCurveToPoint(CGPointMake(29.79, 4.86), controlPoint1: CGPointMake(30.26, 3.37), controlPoint2: CGPointMake(29.79, 4.86))
        rectangle8Path.addCurveToPoint(CGPointMake(28.6, 4.86), controlPoint1: CGPointMake(29.79, 4.86), controlPoint2: CGPointMake(29.07, 4.75))
        rectangle8Path.addCurveToPoint(CGPointMake(26.79, 4.86), controlPoint1: CGPointMake(28.12, 4.97), controlPoint2: CGPointMake(26.5, 5))
        rectangle8Path.addCurveToPoint(CGPointMake(24.08, 4.67), controlPoint1: CGPointMake(27.08, 4.71), controlPoint2: CGPointMake(25.17, 4.78))
        rectangle8Path.addCurveToPoint(CGPointMake(22.27, 4.86), controlPoint1: CGPointMake(22.98, 4.57), controlPoint2: CGPointMake(22.27, 4.86))
        rectangle8Path.addCurveToPoint(CGPointMake(20.6, 4.86), controlPoint1: CGPointMake(22.27, 4.86), controlPoint2: CGPointMake(20.98, 5))
        rectangle8Path.addCurveToPoint(CGPointMake(18.99, 4.86), controlPoint1: CGPointMake(20.22, 4.71), controlPoint2: CGPointMake(18.83, 5.07))
        rectangle8Path.addCurveToPoint(CGPointMake(18.99, 3.44), controlPoint1: CGPointMake(19.14, 4.64), controlPoint2: CGPointMake(18.99, 3.44))
        rectangle8Path.closePath()
        babbelOrangeS10.setFill()
        rectangle8Path.fill()


        //// Rectangle 9 Drawing
        var rectangle9Path = UIBezierPath()
        rectangle9Path.moveToPoint(CGPointMake(38.9, 7.25))
        rectangle9Path.addCurveToPoint(CGPointMake(39.74, 7.3), controlPoint1: CGPointMake(38.9, 7.25), controlPoint2: CGPointMake(39.28, 7.29))
        rectangle9Path.addCurveToPoint(CGPointMake(41.1, 7.3), controlPoint1: CGPointMake(40.13, 7.3), controlPoint2: CGPointMake(40.65, 7.16))
        rectangle9Path.addCurveToPoint(CGPointMake(43.07, 7.29), controlPoint1: CGPointMake(41.54, 7.43), controlPoint2: CGPointMake(42.92, 7.15))
        rectangle9Path.addCurveToPoint(CGPointMake(44.51, 7.25), controlPoint1: CGPointMake(43.27, 7.48), controlPoint2: CGPointMake(44.43, 7.28))
        rectangle9Path.addCurveToPoint(CGPointMake(44.51, 9.02), controlPoint1: CGPointMake(44.75, 7.16), controlPoint2: CGPointMake(44.51, 9.02))
        rectangle9Path.addCurveToPoint(CGPointMake(43.89, 9.02), controlPoint1: CGPointMake(44.51, 9.02), controlPoint2: CGPointMake(44.14, 8.89))
        rectangle9Path.addCurveToPoint(CGPointMake(42.95, 9.02), controlPoint1: CGPointMake(43.64, 9.16), controlPoint2: CGPointMake(42.8, 9.2))
        rectangle9Path.addCurveToPoint(CGPointMake(41.54, 8.8), controlPoint1: CGPointMake(43.1, 8.84), controlPoint2: CGPointMake(42.11, 8.93))
        rectangle9Path.addCurveToPoint(CGPointMake(40.61, 9.02), controlPoint1: CGPointMake(40.98, 8.66), controlPoint2: CGPointMake(40.61, 9.02))
        rectangle9Path.addCurveToPoint(CGPointMake(39.74, 9.02), controlPoint1: CGPointMake(40.61, 9.02), controlPoint2: CGPointMake(39.94, 9.2))
        rectangle9Path.addCurveToPoint(CGPointMake(35.64, 8.76), controlPoint1: CGPointMake(39.54, 8.84), controlPoint2: CGPointMake(34.87, 9.9))
        rectangle9Path.addCurveToPoint(CGPointMake(38.9, 7.25), controlPoint1: CGPointMake(36.41, 7.62), controlPoint2: CGPointMake(38.9, 7.25))
        rectangle9Path.closePath()
        babbelOrangeS10.setFill()
        rectangle9Path.fill()


        //// Rectangle 12 Drawing
        var rectangle12Path = UIBezierPath()
        rectangle12Path.moveToPoint(CGPointMake(47.46, 11.06))
        rectangle12Path.addCurveToPoint(CGPointMake(51.15, 11.1), controlPoint1: CGPointMake(47.46, 11.06), controlPoint2: CGPointMake(49.12, 11.09))
        rectangle12Path.addCurveToPoint(CGPointMake(57.12, 11.1), controlPoint1: CGPointMake(52.86, 11.1), controlPoint2: CGPointMake(55.16, 10.99))
        rectangle12Path.addCurveToPoint(CGPointMake(65.79, 11.09), controlPoint1: CGPointMake(59.07, 11.2), controlPoint2: CGPointMake(65.11, 10.97))
        rectangle12Path.addCurveToPoint(CGPointMake(72.08, 11.06), controlPoint1: CGPointMake(66.66, 11.24), controlPoint2: CGPointMake(71.74, 11.08))
        rectangle12Path.addCurveToPoint(CGPointMake(72.08, 12.48), controlPoint1: CGPointMake(73.17, 10.99), controlPoint2: CGPointMake(72.08, 12.48))
        rectangle12Path.addCurveToPoint(CGPointMake(69.37, 12.48), controlPoint1: CGPointMake(72.08, 12.48), controlPoint2: CGPointMake(70.46, 12.37))
        rectangle12Path.addCurveToPoint(CGPointMake(65.25, 12.48), controlPoint1: CGPointMake(68.29, 12.58), controlPoint2: CGPointMake(64.6, 12.62))
        rectangle12Path.addCurveToPoint(CGPointMake(59.07, 12.29), controlPoint1: CGPointMake(65.9, 12.33), controlPoint2: CGPointMake(61.56, 12.4))
        rectangle12Path.addCurveToPoint(CGPointMake(54.95, 12.48), controlPoint1: CGPointMake(56.57, 12.18), controlPoint2: CGPointMake(54.95, 12.48))
        rectangle12Path.addCurveToPoint(CGPointMake(51.15, 12.48), controlPoint1: CGPointMake(54.95, 12.48), controlPoint2: CGPointMake(52.02, 12.62))
        rectangle12Path.addCurveToPoint(CGPointMake(43.08, 12.57), controlPoint1: CGPointMake(50.28, 12.33), controlPoint2: CGPointMake(42.73, 12.79))
        rectangle12Path.addCurveToPoint(CGPointMake(47.46, 11.06), controlPoint1: CGPointMake(43.42, 12.35), controlPoint2: CGPointMake(47.46, 11.06))
        rectangle12Path.closePath()
        babbelOrangeS10.setFill()
        rectangle12Path.fill()


        //// Rectangle 13 Drawing
        var rectangle13Path = UIBezierPath()
        rectangle13Path.moveToPoint(CGPointMake(10.26, 14.86))
        rectangle13Path.addCurveToPoint(CGPointMake(16.53, 13.39), controlPoint1: CGPointMake(10.26, 14.86), controlPoint2: CGPointMake(15.77, 13.39))
        rectangle13Path.addCurveToPoint(CGPointMake(18.78, 13.39), controlPoint1: CGPointMake(17.18, 13.4), controlPoint2: CGPointMake(18.05, 13.26))
        rectangle13Path.addCurveToPoint(CGPointMake(22.06, 13.39), controlPoint1: CGPointMake(19.52, 13.53), controlPoint2: CGPointMake(21.8, 13.24))
        rectangle13Path.addCurveToPoint(CGPointMake(24.43, 13.35), controlPoint1: CGPointMake(22.39, 13.57), controlPoint2: CGPointMake(24.3, 13.38))
        rectangle13Path.addCurveToPoint(CGPointMake(24.43, 15.12), controlPoint1: CGPointMake(24.84, 13.26), controlPoint2: CGPointMake(24.43, 15.12))
        rectangle13Path.addCurveToPoint(CGPointMake(23.41, 15.12), controlPoint1: CGPointMake(24.43, 15.12), controlPoint2: CGPointMake(23.82, 14.98))
        rectangle13Path.addCurveToPoint(CGPointMake(21.85, 15.12), controlPoint1: CGPointMake(23, 15.25), controlPoint2: CGPointMake(21.61, 15.3))
        rectangle13Path.addCurveToPoint(CGPointMake(19.52, 14.89), controlPoint1: CGPointMake(22.1, 14.94), controlPoint2: CGPointMake(20.46, 15.03))
        rectangle13Path.addCurveToPoint(CGPointMake(17.96, 15.12), controlPoint1: CGPointMake(18.58, 14.76), controlPoint2: CGPointMake(17.96, 15.12))
        rectangle13Path.addCurveToPoint(CGPointMake(16.53, 15.12), controlPoint1: CGPointMake(17.96, 15.12), controlPoint2: CGPointMake(16.86, 15.3))
        rectangle13Path.addCurveToPoint(CGPointMake(15.14, 15.12), controlPoint1: CGPointMake(16.2, 14.94), controlPoint2: CGPointMake(15.01, 15.39))
        rectangle13Path.addCurveToPoint(CGPointMake(10.26, 14.86), controlPoint1: CGPointMake(15.27, 14.85), controlPoint2: CGPointMake(10.26, 14.86))
        rectangle13Path.closePath()
        CGContextSaveGState(context)
        rectangle13Path.addClip()
        CGContextDrawLinearGradient(context, gradient4, CGPointMake(17.44, 15.24), CGPointMake(17.44, 13.33), 0)
        CGContextRestoreGState(context)


        //// Rectangle 14 Drawing
        var rectangle14Path = UIBezierPath()
        rectangle14Path.moveToPoint(CGPointMake(7.88, 4.59))
        rectangle14Path.addCurveToPoint(CGPointMake(8.72, 4.63), controlPoint1: CGPointMake(7.88, 4.59), controlPoint2: CGPointMake(8.25, 4.62))
        rectangle14Path.addCurveToPoint(CGPointMake(12.05, 2.29), controlPoint1: CGPointMake(9.11, 4.64), controlPoint2: CGPointMake(11.61, 2.15))
        rectangle14Path.addCurveToPoint(CGPointMake(12.05, 4.63), controlPoint1: CGPointMake(12.5, 2.42), controlPoint2: CGPointMake(11.89, 4.48))
        rectangle14Path.addCurveToPoint(CGPointMake(13.48, 4.59), controlPoint1: CGPointMake(12.25, 4.81), controlPoint2: CGPointMake(13.4, 4.61))
        rectangle14Path.addCurveToPoint(CGPointMake(13.48, 6.36), controlPoint1: CGPointMake(13.73, 4.49), controlPoint2: CGPointMake(13.48, 6.36))
        rectangle14Path.addCurveToPoint(CGPointMake(12.86, 6.36), controlPoint1: CGPointMake(13.48, 6.36), controlPoint2: CGPointMake(13.11, 6.22))
        rectangle14Path.addCurveToPoint(CGPointMake(11.92, 6.36), controlPoint1: CGPointMake(12.62, 6.49), controlPoint2: CGPointMake(11.78, 6.54))
        rectangle14Path.addCurveToPoint(CGPointMake(10.52, 6.13), controlPoint1: CGPointMake(12.07, 6.17), controlPoint2: CGPointMake(11.09, 6.27))
        rectangle14Path.addCurveToPoint(CGPointMake(9.58, 6.36), controlPoint1: CGPointMake(9.95, 5.99), controlPoint2: CGPointMake(9.58, 6.36))
        rectangle14Path.addCurveToPoint(CGPointMake(8.72, 6.36), controlPoint1: CGPointMake(9.58, 6.36), controlPoint2: CGPointMake(8.91, 6.54))
        rectangle14Path.addCurveToPoint(CGPointMake(7.88, 6.36), controlPoint1: CGPointMake(8.52, 6.17), controlPoint2: CGPointMake(7.8, 6.63))
        rectangle14Path.addCurveToPoint(CGPointMake(7.88, 4.59), controlPoint1: CGPointMake(7.96, 6.08), controlPoint2: CGPointMake(7.88, 4.59))
        rectangle14Path.closePath()
        AngyWordsStyleKit.babbelLightOrange.setFill()
        rectangle14Path.fill()


        //// Rectangle 15 Drawing
        var rectangle15Path = UIBezierPath()
        rectangle15Path.moveToPoint(CGPointMake(24.56, 6.84))
        rectangle15Path.addCurveToPoint(CGPointMake(28.19, 6.78), controlPoint1: CGPointMake(24.56, 6.84), controlPoint2: CGPointMake(26.2, 6.79))
        rectangle15Path.addCurveToPoint(CGPointMake(34.05, 6.78), controlPoint1: CGPointMake(29.87, 6.77), controlPoint2: CGPointMake(32.13, 6.96))
        rectangle15Path.addCurveToPoint(CGPointMake(42.58, 6.79), controlPoint1: CGPointMake(35.97, 6.6), controlPoint2: CGPointMake(41.91, 6.98))
        rectangle15Path.addCurveToPoint(CGPointMake(48.76, 6.84), controlPoint1: CGPointMake(43.43, 6.54), controlPoint2: CGPointMake(48.42, 6.8))
        rectangle15Path.addCurveToPoint(CGPointMake(48.76, 4.49), controlPoint1: CGPointMake(49.82, 6.96), controlPoint2: CGPointMake(48.76, 4.49))
        rectangle15Path.addCurveToPoint(CGPointMake(46.09, 4.49), controlPoint1: CGPointMake(48.76, 4.49), controlPoint2: CGPointMake(47.16, 4.67))
        rectangle15Path.addCurveToPoint(CGPointMake(42.04, 4.49), controlPoint1: CGPointMake(45.03, 4.31), controlPoint2: CGPointMake(41.4, 4.25))
        rectangle15Path.addCurveToPoint(CGPointMake(35.97, 4.79), controlPoint1: CGPointMake(42.68, 4.73), controlPoint2: CGPointMake(38.42, 4.61))
        rectangle15Path.addCurveToPoint(CGPointMake(31.92, 4.49), controlPoint1: CGPointMake(33.52, 4.97), controlPoint2: CGPointMake(31.92, 4.49))
        rectangle15Path.addCurveToPoint(CGPointMake(28.19, 4.49), controlPoint1: CGPointMake(31.92, 4.49), controlPoint2: CGPointMake(29.04, 4.25))
        rectangle15Path.addCurveToPoint(CGPointMake(24.56, 4.49), controlPoint1: CGPointMake(27.33, 4.73), controlPoint2: CGPointMake(24.22, 4.13))
        rectangle15Path.addCurveToPoint(CGPointMake(24.56, 6.84), controlPoint1: CGPointMake(24.9, 4.85), controlPoint2: CGPointMake(24.56, 6.84))
        rectangle15Path.closePath()
        AngyWordsStyleKit.babbelYellow.setFill()
        rectangle15Path.fill()


        //// Rectangle 16 Drawing
        var rectangle16Path = UIBezierPath()
        rectangle16Path.moveToPoint(CGPointMake(70.52, 0.01))
        rectangle16Path.addCurveToPoint(CGPointMake(71.92, 0.04), controlPoint1: CGPointMake(70.52, 0.01), controlPoint2: CGPointMake(71.15, 0.03))
        rectangle16Path.addCurveToPoint(CGPointMake(74.17, 0.04), controlPoint1: CGPointMake(72.56, 0.04), controlPoint2: CGPointMake(73.43, -0.05))
        rectangle16Path.addCurveToPoint(CGPointMake(77.44, 0.03), controlPoint1: CGPointMake(74.9, 0.12), controlPoint2: CGPointMake(77.19, -0.06))
        rectangle16Path.addCurveToPoint(CGPointMake(79.82, 0.01), controlPoint1: CGPointMake(77.77, 0.14), controlPoint2: CGPointMake(79.69, 0.03))
        rectangle16Path.addCurveToPoint(CGPointMake(79.82, 1.07), controlPoint1: CGPointMake(80.23, -0.05), controlPoint2: CGPointMake(79.82, 1.07))
        rectangle16Path.addCurveToPoint(CGPointMake(78.79, 1.07), controlPoint1: CGPointMake(79.82, 1.07), controlPoint2: CGPointMake(79.2, 0.99))
        rectangle16Path.addCurveToPoint(CGPointMake(77.24, 1.07), controlPoint1: CGPointMake(78.38, 1.15), controlPoint2: CGPointMake(76.99, 1.18))
        rectangle16Path.addCurveToPoint(CGPointMake(74.9, 0.93), controlPoint1: CGPointMake(77.48, 0.96), controlPoint2: CGPointMake(75.85, 1.02))
        rectangle16Path.addCurveToPoint(CGPointMake(73.35, 1.07), controlPoint1: CGPointMake(73.96, 0.85), controlPoint2: CGPointMake(73.35, 1.07))
        rectangle16Path.addCurveToPoint(CGPointMake(71.92, 1.07), controlPoint1: CGPointMake(73.35, 1.07), controlPoint2: CGPointMake(72.24, 1.18))
        rectangle16Path.addCurveToPoint(CGPointMake(70.52, 1.07), controlPoint1: CGPointMake(71.59, 0.96), controlPoint2: CGPointMake(70.39, 1.23))
        rectangle16Path.addCurveToPoint(CGPointMake(70.52, 0.01), controlPoint1: CGPointMake(70.65, 0.91), controlPoint2: CGPointMake(70.52, 0.01))
        rectangle16Path.closePath()
        CGContextSaveGState(context)
        rectangle16Path.addClip()
        CGContextDrawLinearGradient(context, gradient4, CGPointMake(75.26, 1.14), CGPointMake(75.26, 0), 0)
        CGContextRestoreGState(context)


        //// Rectangle 17 Drawing
        var rectangle17Path = UIBezierPath()
        rectangle17Path.moveToPoint(CGPointMake(55.4, 4.2))
        rectangle17Path.addCurveToPoint(CGPointMake(57.28, 4.21), controlPoint1: CGPointMake(55.4, 4.2), controlPoint2: CGPointMake(56.25, 4.21))
        rectangle17Path.addCurveToPoint(CGPointMake(60.32, 4.21), controlPoint1: CGPointMake(58.15, 4.22), controlPoint2: CGPointMake(59.33, 4.16))
        rectangle17Path.addCurveToPoint(CGPointMake(64.75, 4.21), controlPoint1: CGPointMake(61.32, 4.27), controlPoint2: CGPointMake(64.4, 4.15))
        rectangle17Path.addCurveToPoint(CGPointMake(67.96, 4.2), controlPoint1: CGPointMake(65.19, 4.29), controlPoint2: CGPointMake(67.78, 4.21))
        rectangle17Path.addCurveToPoint(CGPointMake(67.96, 4.9), controlPoint1: CGPointMake(68.51, 4.16), controlPoint2: CGPointMake(67.96, 4.9))
        rectangle17Path.addCurveToPoint(CGPointMake(66.58, 4.9), controlPoint1: CGPointMake(67.96, 4.9), controlPoint2: CGPointMake(67.13, 4.85))
        rectangle17Path.addCurveToPoint(CGPointMake(64.47, 4.9), controlPoint1: CGPointMake(66.02, 4.96), controlPoint2: CGPointMake(64.14, 4.98))
        rectangle17Path.addCurveToPoint(CGPointMake(61.32, 4.81), controlPoint1: CGPointMake(64.81, 4.83), controlPoint2: CGPointMake(62.59, 4.87))
        rectangle17Path.addCurveToPoint(CGPointMake(59.22, 4.9), controlPoint1: CGPointMake(60.05, 4.76), controlPoint2: CGPointMake(59.22, 4.9))
        rectangle17Path.addCurveToPoint(CGPointMake(57.28, 4.9), controlPoint1: CGPointMake(59.22, 4.9), controlPoint2: CGPointMake(57.72, 4.98))
        rectangle17Path.addCurveToPoint(CGPointMake(55.4, 4.9), controlPoint1: CGPointMake(56.84, 4.83), controlPoint2: CGPointMake(55.22, 5.01))
        rectangle17Path.addCurveToPoint(CGPointMake(55.4, 4.2), controlPoint1: CGPointMake(55.58, 4.8), controlPoint2: CGPointMake(55.4, 4.2))
        rectangle17Path.closePath()
        CGContextSaveGState(context)
        rectangle17Path.addClip()
        CGContextDrawLinearGradient(context, gradient4, CGPointMake(61.79, 4.95), CGPointMake(61.79, 4.19), 0)
        CGContextRestoreGState(context)


        //// Rectangle 18 Drawing
        var rectangle18Path = UIBezierPath()
        rectangle18Path.moveToPoint(CGPointMake(0.2, 9.28))
        rectangle18Path.addCurveToPoint(CGPointMake(3.83, 9.26), controlPoint1: CGPointMake(0.2, 9.28), controlPoint2: CGPointMake(1.84, 9.26))
        rectangle18Path.addCurveToPoint(CGPointMake(9.69, 9.26), controlPoint1: CGPointMake(5.51, 9.25), controlPoint2: CGPointMake(7.77, 9.31))
        rectangle18Path.addCurveToPoint(CGPointMake(18.22, 9.26), controlPoint1: CGPointMake(11.61, 9.2), controlPoint2: CGPointMake(17.55, 9.32))
        rectangle18Path.addCurveToPoint(CGPointMake(24.4, 9.28), controlPoint1: CGPointMake(19.07, 9.18), controlPoint2: CGPointMake(24.06, 9.26))
        rectangle18Path.addCurveToPoint(CGPointMake(24.4, 8.57), controlPoint1: CGPointMake(25.46, 9.31), controlPoint2: CGPointMake(24.4, 8.57))
        rectangle18Path.addCurveToPoint(CGPointMake(21.73, 8.57), controlPoint1: CGPointMake(24.4, 8.57), controlPoint2: CGPointMake(22.8, 8.62))
        rectangle18Path.addCurveToPoint(CGPointMake(17.68, 8.57), controlPoint1: CGPointMake(20.67, 8.51), controlPoint2: CGPointMake(17.04, 8.49))
        rectangle18Path.addCurveToPoint(CGPointMake(11.61, 8.66), controlPoint1: CGPointMake(18.32, 8.64), controlPoint2: CGPointMake(14.06, 8.6))
        rectangle18Path.addCurveToPoint(CGPointMake(7.56, 8.57), controlPoint1: CGPointMake(9.16, 8.71), controlPoint2: CGPointMake(7.56, 8.57))
        rectangle18Path.addCurveToPoint(CGPointMake(3.83, 8.57), controlPoint1: CGPointMake(7.56, 8.57), controlPoint2: CGPointMake(4.68, 8.49))
        rectangle18Path.addCurveToPoint(CGPointMake(0.2, 8.57), controlPoint1: CGPointMake(2.98, 8.64), controlPoint2: CGPointMake(-0.14, 8.46))
        rectangle18Path.addCurveToPoint(CGPointMake(0.2, 9.28), controlPoint1: CGPointMake(0.55, 8.68), controlPoint2: CGPointMake(0.2, 9.28))
        rectangle18Path.closePath()
        AngyWordsStyleKit.babbelYellow.setFill()
        rectangle18Path.fill()


        //// Rectangle 19 Drawing
        var rectangle19Path = UIBezierPath()
        rectangle19Path.moveToPoint(CGPointMake(12.33, 7.25))
        rectangle19Path.addCurveToPoint(CGPointMake(14.77, 7.3), controlPoint1: CGPointMake(12.33, 7.25), controlPoint2: CGPointMake(13.43, 7.29))
        rectangle19Path.addCurveToPoint(CGPointMake(18.73, 7.3), controlPoint1: CGPointMake(15.91, 7.3), controlPoint2: CGPointMake(17.43, 7.16))
        rectangle19Path.addCurveToPoint(CGPointMake(24.48, 7.29), controlPoint1: CGPointMake(20.02, 7.43), controlPoint2: CGPointMake(24.03, 7.15))
        rectangle19Path.addCurveToPoint(CGPointMake(28.65, 7.25), controlPoint1: CGPointMake(25.06, 7.48), controlPoint2: CGPointMake(28.43, 7.28))
        rectangle19Path.addCurveToPoint(CGPointMake(28.65, 9.02), controlPoint1: CGPointMake(29.37, 7.16), controlPoint2: CGPointMake(28.65, 9.02))
        rectangle19Path.addCurveToPoint(CGPointMake(26.86, 9.02), controlPoint1: CGPointMake(28.65, 9.02), controlPoint2: CGPointMake(27.58, 8.89))
        rectangle19Path.addCurveToPoint(CGPointMake(24.12, 9.02), controlPoint1: CGPointMake(26.14, 9.16), controlPoint2: CGPointMake(23.69, 9.2))
        rectangle19Path.addCurveToPoint(CGPointMake(20.02, 8.8), controlPoint1: CGPointMake(24.55, 8.84), controlPoint2: CGPointMake(21.68, 8.93))
        rectangle19Path.addCurveToPoint(CGPointMake(17.29, 9.02), controlPoint1: CGPointMake(18.37, 8.66), controlPoint2: CGPointMake(17.29, 9.02))
        rectangle19Path.addCurveToPoint(CGPointMake(14.77, 9.02), controlPoint1: CGPointMake(17.29, 9.02), controlPoint2: CGPointMake(15.35, 9.2))
        rectangle19Path.addCurveToPoint(CGPointMake(10, 9.14), controlPoint1: CGPointMake(14.2, 8.84), controlPoint2: CGPointMake(12.82, 9.52))
        rectangle19Path.addCurveToPoint(CGPointMake(12.33, 7.25), controlPoint1: CGPointMake(7.18, 8.76), controlPoint2: CGPointMake(12.33, 7.25))
        rectangle19Path.closePath()
        CGContextSaveGState(context)
        rectangle19Path.addClip()
        CGContextDrawLinearGradient(context, gradient4, CGPointMake(19.06, 9.26), CGPointMake(19.06, 7.24), 0)
        CGContextRestoreGState(context)


        //// Rectangle 20 Drawing
        var rectangle20Path = UIBezierPath()
        rectangle20Path.moveToPoint(CGPointMake(55.33, 7.6))
        rectangle20Path.addCurveToPoint(CGPointMake(60.51, 8.76), controlPoint1: CGPointMake(55.33, 7.6), controlPoint2: CGPointMake(58.72, 7.62))
        rectangle20Path.addCurveToPoint(CGPointMake(64.82, 7.54), controlPoint1: CGPointMake(62.03, 9.73), controlPoint2: CGPointMake(62.9, 7.72))
        rectangle20Path.addCurveToPoint(CGPointMake(73.35, 7.55), controlPoint1: CGPointMake(66.74, 7.36), controlPoint2: CGPointMake(72.68, 7.74))
        rectangle20Path.addCurveToPoint(CGPointMake(79.53, 7.6), controlPoint1: CGPointMake(74.2, 7.3), controlPoint2: CGPointMake(79.19, 7.56))
        rectangle20Path.addCurveToPoint(CGPointMake(79.53, 5.25), controlPoint1: CGPointMake(80.59, 7.72), controlPoint2: CGPointMake(79.53, 5.25))
        rectangle20Path.addCurveToPoint(CGPointMake(76.86, 5.25), controlPoint1: CGPointMake(79.53, 5.25), controlPoint2: CGPointMake(77.93, 5.43))
        rectangle20Path.addCurveToPoint(CGPointMake(72.81, 5.25), controlPoint1: CGPointMake(75.8, 5.07), controlPoint2: CGPointMake(72.17, 5.01))
        rectangle20Path.addCurveToPoint(CGPointMake(66.74, 5.55), controlPoint1: CGPointMake(73.45, 5.49), controlPoint2: CGPointMake(69.19, 5.37))
        rectangle20Path.addCurveToPoint(CGPointMake(62.69, 5.25), controlPoint1: CGPointMake(64.29, 5.73), controlPoint2: CGPointMake(62.69, 5.25))
        rectangle20Path.addCurveToPoint(CGPointMake(58.96, 5.25), controlPoint1: CGPointMake(62.69, 5.25), controlPoint2: CGPointMake(59.81, 5.01))
        rectangle20Path.addCurveToPoint(CGPointMake(55.33, 5.25), controlPoint1: CGPointMake(58.1, 5.49), controlPoint2: CGPointMake(54.99, 4.89))
        rectangle20Path.addCurveToPoint(CGPointMake(55.33, 7.6), controlPoint1: CGPointMake(55.67, 5.61), controlPoint2: CGPointMake(55.33, 7.6))
        rectangle20Path.closePath()
        AngyWordsStyleKit.babbelYellow.setFill()
        rectangle20Path.fill()


        //// Rectangle 21 Drawing
        let rectangle21Path = UIBezierPath(rect: CGRectMake(0, 0, 80, 2))
        CGContextSaveGState(context)
        rectangle21Path.addClip()
        CGContextDrawLinearGradient(context, gradient4, CGPointMake(40, 2), CGPointMake(40, 0), 0)
        CGContextRestoreGState(context)


        //// Rectangle 22 Drawing
        let rectangle22Path = UIBezierPath(rect: CGRectMake(78, 1, 2, 15))
        CGContextSaveGState(context)
        rectangle22Path.addClip()
        CGContextDrawLinearGradient(context, gradient4, CGPointMake(78, 8.5), CGPointMake(80, 8.5), 0)
        CGContextRestoreGState(context)
    }

    public class func drawCanvasWoodBlockVertical() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let babbelOrangeS10 = AngyWordsStyleKit.babbelOrange.colorWithShadow(0.1)
        let babbelOranggeS60 = AngyWordsStyleKit.babbelOrange.colorWithShadow(0.6)

        //// Gradient Declarations
        let gradient3 = CGGradientCreateWithColors(CGColorSpaceCreateDeviceRGB(), [AngyWordsStyleKit.babbelLightOrange75.CGColor, AngyWordsStyleKit.babbelLightOrange.CGColor], [0, 1])
        let gradient4 = CGGradientCreateWithColors(CGColorSpaceCreateDeviceRGB(), [babbelOrangeS10.CGColor, babbelOrangeS10.blendedColorWithFraction(0.5, ofColor: babbelOranggeS60).CGColor, babbelOranggeS60.CGColor], [0, 0.85, 1])

        //// Group 2
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 9, 40)
        CGContextRotateCTM(context, 90 * CGFloat(M_PI) / 180)



        //// Rectangle 23 Drawing
        let rectangle23Path = UIBezierPath(rect: CGRectMake(-40, -7, 80, 16))
        AngyWordsStyleKit.babbelLightOrange75.setFill()
        rectangle23Path.fill()


        //// Rectangle 24 Drawing
        var rectangle24Path = UIBezierPath()
        rectangle24Path.moveToPoint(CGPointMake(39.66, -0.57))
        rectangle24Path.addCurveToPoint(CGPointMake(27.96, -0.73), controlPoint1: CGPointMake(39.66, -0.57), controlPoint2: CGPointMake(34.39, -0.7))
        rectangle24Path.addCurveToPoint(CGPointMake(9.03, -0.73), controlPoint1: CGPointMake(22.53, -0.74), controlPoint2: CGPointMake(15.22, -0.26))
        rectangle24Path.addCurveToPoint(CGPointMake(-18.52, -0.71), controlPoint1: CGPointMake(2.83, -1.19), controlPoint2: CGPointMake(-16.36, -0.21))
        rectangle24Path.addCurveToPoint(CGPointMake(-38.47, -0.57), controlPoint1: CGPointMake(-21.26, -1.34), controlPoint2: CGPointMake(-37.38, -0.67))
        rectangle24Path.addCurveToPoint(CGPointMake(-38.47, -6.59), controlPoint1: CGPointMake(-41.91, -0.26), controlPoint2: CGPointMake(-38.47, -6.59))
        rectangle24Path.addCurveToPoint(CGPointMake(-29.87, -6.59), controlPoint1: CGPointMake(-38.47, -6.59), controlPoint2: CGPointMake(-33.31, -6.13))
        rectangle24Path.addCurveToPoint(CGPointMake(-16.79, -6.59), controlPoint1: CGPointMake(-26.42, -7.06), controlPoint2: CGPointMake(-14.72, -7.21))
        rectangle24Path.addCurveToPoint(CGPointMake(2.83, -5.82), controlPoint1: CGPointMake(-18.85, -5.98), controlPoint2: CGPointMake(-5.08, -6.28))
        rectangle24Path.addCurveToPoint(CGPointMake(15.91, -6.59), controlPoint1: CGPointMake(10.75, -5.36), controlPoint2: CGPointMake(15.91, -6.59))
        rectangle24Path.addCurveToPoint(CGPointMake(27.96, -6.59), controlPoint1: CGPointMake(15.91, -6.59), controlPoint2: CGPointMake(25.2, -7.21))
        rectangle24Path.addCurveToPoint(CGPointMake(39.66, -6.59), controlPoint1: CGPointMake(30.71, -5.98), controlPoint2: CGPointMake(40.76, -7.52))
        rectangle24Path.addCurveToPoint(CGPointMake(39.66, -0.57), controlPoint1: CGPointMake(38.56, -5.67), controlPoint2: CGPointMake(39.66, -0.57))
        rectangle24Path.closePath()
        CGContextSaveGState(context)
        rectangle24Path.addClip()
        CGContextDrawLinearGradient(context, gradient3, CGPointMake(-0.13, -0.52), CGPointMake(-0.13, -7), 0)
        CGContextRestoreGState(context)


        //// Rectangle 25 Drawing
        var rectangle25Path = UIBezierPath()
        rectangle25Path.moveToPoint(CGPointMake(39.66, 8.17))
        rectangle25Path.addCurveToPoint(CGPointMake(28.15, 7.95), controlPoint1: CGPointMake(39.66, 8.17), controlPoint2: CGPointMake(34.48, 7.98))
        rectangle25Path.addCurveToPoint(CGPointMake(9.52, 7.95), controlPoint1: CGPointMake(22.8, 7.93), controlPoint2: CGPointMake(15.62, 8.61))
        rectangle25Path.addCurveToPoint(CGPointMake(-17.58, 7.98), controlPoint1: CGPointMake(3.43, 7.3), controlPoint2: CGPointMake(-15.46, 8.68))
        rectangle25Path.addCurveToPoint(CGPointMake(-37.21, 8.17), controlPoint1: CGPointMake(-20.28, 7.08), controlPoint2: CGPointMake(-36.14, 8.03))
        rectangle25Path.addCurveToPoint(CGPointMake(-37.21, -0.33), controlPoint1: CGPointMake(-40.6, 8.61), controlPoint2: CGPointMake(-37.21, -0.33))
        rectangle25Path.addCurveToPoint(CGPointMake(-28.75, -0.33), controlPoint1: CGPointMake(-37.21, -0.33), controlPoint2: CGPointMake(-32.13, 0.32))
        rectangle25Path.addCurveToPoint(CGPointMake(-15.88, -0.33), controlPoint1: CGPointMake(-25.36, -0.98), controlPoint2: CGPointMake(-13.85, -1.2))
        rectangle25Path.addCurveToPoint(CGPointMake(3.43, 0.76), controlPoint1: CGPointMake(-17.91, 0.54), controlPoint2: CGPointMake(-4.36, 0.11))
        rectangle25Path.addCurveToPoint(CGPointMake(16.29, -0.33), controlPoint1: CGPointMake(11.21, 1.41), controlPoint2: CGPointMake(16.29, -0.33))
        rectangle25Path.addCurveToPoint(CGPointMake(28.15, -0.33), controlPoint1: CGPointMake(16.29, -0.33), controlPoint2: CGPointMake(25.44, -1.2))
        rectangle25Path.addCurveToPoint(CGPointMake(39.66, -0.33), controlPoint1: CGPointMake(30.86, 0.54), controlPoint2: CGPointMake(40.74, -1.64))
        rectangle25Path.addCurveToPoint(CGPointMake(39.66, 8.17), controlPoint1: CGPointMake(38.58, 0.98), controlPoint2: CGPointMake(39.66, 8.17))
        rectangle25Path.closePath()
        CGContextSaveGState(context)
        rectangle25Path.addClip()
        CGContextDrawLinearGradient(context, gradient3, CGPointMake(0.51, -0.9), CGPointMake(0.51, 8.24), 0)
        CGContextRestoreGState(context)


        //// Rectangle 26 Drawing
        var rectangle26Path = UIBezierPath()
        rectangle26Path.moveToPoint(CGPointMake(25.02, 6.93))
        rectangle26Path.addCurveToPoint(CGPointMake(23.69, 6.86), controlPoint1: CGPointMake(25.02, 6.93), controlPoint2: CGPointMake(24.42, 6.87))
        rectangle26Path.addCurveToPoint(CGPointMake(21.54, 6.86), controlPoint1: CGPointMake(23.07, 6.85), controlPoint2: CGPointMake(22.24, 7.07))
        rectangle26Path.addCurveToPoint(CGPointMake(18.41, 6.87), controlPoint1: CGPointMake(20.84, 6.65), controlPoint2: CGPointMake(18.66, 7.09))
        rectangle26Path.addCurveToPoint(CGPointMake(6.74, 6.95), controlPoint1: CGPointMake(18.1, 6.58), controlPoint2: CGPointMake(8.19, 7.6))
        rectangle26Path.addCurveToPoint(CGPointMake(12.64, 4.29), controlPoint1: CGPointMake(5.3, 6.31), controlPoint2: CGPointMake(12.64, 4.29))
        rectangle26Path.addCurveToPoint(CGPointMake(15.46, 4.29), controlPoint1: CGPointMake(12.64, 4.29), controlPoint2: CGPointMake(15.07, 4.49))
        rectangle26Path.addCurveToPoint(CGPointMake(18.61, 4.23), controlPoint1: CGPointMake(15.85, 4.08), controlPoint2: CGPointMake(18.84, 3.95))
        rectangle26Path.addCurveToPoint(CGPointMake(20.84, 4.57), controlPoint1: CGPointMake(18.38, 4.5), controlPoint2: CGPointMake(19.94, 4.36))
        rectangle26Path.addCurveToPoint(CGPointMake(22.32, 4.23), controlPoint1: CGPointMake(21.74, 4.78), controlPoint2: CGPointMake(22.32, 4.23))
        rectangle26Path.addCurveToPoint(CGPointMake(23.69, 4.23), controlPoint1: CGPointMake(22.32, 4.23), controlPoint2: CGPointMake(23.38, 3.95))
        rectangle26Path.addCurveToPoint(CGPointMake(25.02, 4.23), controlPoint1: CGPointMake(24, 4.5), controlPoint2: CGPointMake(25.14, 3.81))
        rectangle26Path.addCurveToPoint(CGPointMake(25.02, 6.93), controlPoint1: CGPointMake(24.89, 4.64), controlPoint2: CGPointMake(25.02, 6.93))
        rectangle26Path.closePath()
        babbelOrangeS10.setFill()
        rectangle26Path.fill()


        //// Rectangle 27 Drawing
        var rectangle27Path = UIBezierPath()
        rectangle27Path.moveToPoint(CGPointMake(6.86, 2.12))
        rectangle27Path.addCurveToPoint(CGPointMake(9.51, 2.06), controlPoint1: CGPointMake(6.86, 2.12), controlPoint2: CGPointMake(8.06, 2.07))
        rectangle27Path.addCurveToPoint(CGPointMake(12.31, 4.05), controlPoint1: CGPointMake(10.74, 2.06), controlPoint2: CGPointMake(10.91, 4.23))
        rectangle27Path.addCurveToPoint(CGPointMake(20.02, 2.07), controlPoint1: CGPointMake(13.71, 3.87), controlPoint2: CGPointMake(19.53, 2.27))
        rectangle27Path.addCurveToPoint(CGPointMake(24.53, 2.12), controlPoint1: CGPointMake(20.64, 1.82), controlPoint2: CGPointMake(24.28, 2.09))
        rectangle27Path.addCurveToPoint(CGPointMake(24.53, -0.23), controlPoint1: CGPointMake(25.3, 2.24), controlPoint2: CGPointMake(24.53, -0.23))
        rectangle27Path.addCurveToPoint(CGPointMake(29.49, -0.9), controlPoint1: CGPointMake(24.53, -0.23), controlPoint2: CGPointMake(30.27, -0.72))
        rectangle27Path.addCurveToPoint(CGPointMake(19.62, -0.23), controlPoint1: CGPointMake(28.71, -1.09), controlPoint2: CGPointMake(19.16, -0.47))
        rectangle27Path.addCurveToPoint(CGPointMake(15.19, 0.07), controlPoint1: CGPointMake(20.09, 0.01), controlPoint2: CGPointMake(16.98, -0.11))
        rectangle27Path.addCurveToPoint(CGPointMake(12.23, -0.23), controlPoint1: CGPointMake(13.4, 0.26), controlPoint2: CGPointMake(12.23, -0.23))
        rectangle27Path.addCurveToPoint(CGPointMake(9.51, -0.23), controlPoint1: CGPointMake(12.23, -0.23), controlPoint2: CGPointMake(10.13, -0.47))
        rectangle27Path.addCurveToPoint(CGPointMake(6.86, -0.23), controlPoint1: CGPointMake(8.89, 0.01), controlPoint2: CGPointMake(6.62, -0.59))
        rectangle27Path.addCurveToPoint(CGPointMake(6.86, 2.12), controlPoint1: CGPointMake(7.11, 0.13), controlPoint2: CGPointMake(6.86, 2.12))
        rectangle27Path.closePath()
        CGContextSaveGState(context)
        rectangle27Path.addClip()
        CGContextDrawLinearGradient(context, gradient3, CGPointMake(18.2, -0.94), CGPointMake(18.2, 4.06), 0)
        CGContextRestoreGState(context)


        //// Rectangle 28 Drawing
        var rectangle28Path = UIBezierPath()
        rectangle28Path.moveToPoint(CGPointMake(-1.74, -3.56))
        rectangle28Path.addCurveToPoint(CGPointMake(-4.37, -3.52), controlPoint1: CGPointMake(-1.74, -3.56), controlPoint2: CGPointMake(-2.92, -3.53))
        rectangle28Path.addCurveToPoint(CGPointMake(-8.63, -3.52), controlPoint1: CGPointMake(-5.59, -3.52), controlPoint2: CGPointMake(-7.24, -3.63))
        rectangle28Path.addCurveToPoint(CGPointMake(-14.83, -3.53), controlPoint1: CGPointMake(-10.02, -3.41), controlPoint2: CGPointMake(-14.34, -3.65))
        rectangle28Path.addCurveToPoint(CGPointMake(-19.32, -3.56), controlPoint1: CGPointMake(-15.45, -3.38), controlPoint2: CGPointMake(-19.08, -3.54))
        rectangle28Path.addCurveToPoint(CGPointMake(-19.32, -2.14), controlPoint1: CGPointMake(-20.1, -3.63), controlPoint2: CGPointMake(-19.32, -2.14))
        rectangle28Path.addCurveToPoint(CGPointMake(-17.38, -2.14), controlPoint1: CGPointMake(-19.32, -2.14), controlPoint2: CGPointMake(-18.16, -2.25))
        rectangle28Path.addCurveToPoint(CGPointMake(-14.44, -2.14), controlPoint1: CGPointMake(-16.61, -2.03), controlPoint2: CGPointMake(-13.98, -2))
        rectangle28Path.addCurveToPoint(CGPointMake(-10.02, -2.33), controlPoint1: CGPointMake(-14.91, -2.29), controlPoint2: CGPointMake(-11.81, -2.22))
        rectangle28Path.addCurveToPoint(CGPointMake(-7.08, -2.14), controlPoint1: CGPointMake(-8.24, -2.43), controlPoint2: CGPointMake(-7.08, -2.14))
        rectangle28Path.addCurveToPoint(CGPointMake(-4.37, -2.14), controlPoint1: CGPointMake(-7.08, -2.14), controlPoint2: CGPointMake(-4.99, -2))
        rectangle28Path.addCurveToPoint(CGPointMake(-1.74, -2.14), controlPoint1: CGPointMake(-3.75, -2.29), controlPoint2: CGPointMake(-1.49, -1.93))
        rectangle28Path.addCurveToPoint(CGPointMake(-1.74, -3.56), controlPoint1: CGPointMake(-1.98, -2.36), controlPoint2: CGPointMake(-1.74, -3.56))
        rectangle28Path.closePath()
        babbelOrangeS10.setFill()
        rectangle28Path.fill()


        //// Rectangle 29 Drawing
        var rectangle29Path = UIBezierPath()
        rectangle29Path.moveToPoint(CGPointMake(1.95, 8.08))
        rectangle29Path.addCurveToPoint(CGPointMake(-1.67, 8.02), controlPoint1: CGPointMake(1.95, 8.08), controlPoint2: CGPointMake(0.32, 8.03))
        rectangle29Path.addCurveToPoint(CGPointMake(-7.54, 8.02), controlPoint1: CGPointMake(-3.36, 8.01), controlPoint2: CGPointMake(-5.62, 8.2))
        rectangle29Path.addCurveToPoint(CGPointMake(-16.07, 8.02), controlPoint1: CGPointMake(-9.45, 7.84), controlPoint2: CGPointMake(-15.4, 8.22))
        rectangle29Path.addCurveToPoint(CGPointMake(-22.24, 8.08), controlPoint1: CGPointMake(-16.92, 7.78), controlPoint2: CGPointMake(-21.91, 8.04))
        rectangle29Path.addCurveToPoint(CGPointMake(-22.24, 5.73), controlPoint1: CGPointMake(-23.31, 8.2), controlPoint2: CGPointMake(-22.24, 5.73))
        rectangle29Path.addCurveToPoint(CGPointMake(-19.58, 5.73), controlPoint1: CGPointMake(-22.24, 5.73), controlPoint2: CGPointMake(-20.65, 5.91))
        rectangle29Path.addCurveToPoint(CGPointMake(-15.53, 5.73), controlPoint1: CGPointMake(-18.51, 5.54), controlPoint2: CGPointMake(-14.89, 5.48))
        rectangle29Path.addCurveToPoint(CGPointMake(-9.45, 6.03), controlPoint1: CGPointMake(-16.17, 5.97), controlPoint2: CGPointMake(-11.91, 5.85))
        rectangle29Path.addCurveToPoint(CGPointMake(-5.4, 5.73), controlPoint1: CGPointMake(-7, 6.21), controlPoint2: CGPointMake(-5.4, 5.73))
        rectangle29Path.addCurveToPoint(CGPointMake(-1.67, 5.73), controlPoint1: CGPointMake(-5.4, 5.73), controlPoint2: CGPointMake(-2.53, 5.48))
        rectangle29Path.addCurveToPoint(CGPointMake(1.95, 5.73), controlPoint1: CGPointMake(-0.82, 5.97), controlPoint2: CGPointMake(2.29, 5.36))
        rectangle29Path.addCurveToPoint(CGPointMake(1.95, 8.08), controlPoint1: CGPointMake(1.61, 6.09), controlPoint2: CGPointMake(1.95, 8.08))
        rectangle29Path.closePath()
        AngyWordsStyleKit.babbelYellow.setFill()
        rectangle29Path.fill()


        //// Rectangle 30 Drawing
        var rectangle30Path = UIBezierPath()
        rectangle30Path.moveToPoint(CGPointMake(36.74, 6.32))
        rectangle30Path.addCurveToPoint(CGPointMake(35.82, 6.27), controlPoint1: CGPointMake(36.74, 6.32), controlPoint2: CGPointMake(36.33, 6.28))
        rectangle30Path.addCurveToPoint(CGPointMake(34.34, 6.27), controlPoint1: CGPointMake(35.4, 6.27), controlPoint2: CGPointMake(34.83, 6.41))
        rectangle30Path.addCurveToPoint(CGPointMake(32.19, 6.28), controlPoint1: CGPointMake(33.86, 6.14), controlPoint2: CGPointMake(32.36, 6.43))
        rectangle30Path.addCurveToPoint(CGPointMake(30.63, 6.32), controlPoint1: CGPointMake(31.98, 6.09), controlPoint2: CGPointMake(30.72, 6.29))
        rectangle30Path.addCurveToPoint(CGPointMake(30.63, 4.55), controlPoint1: CGPointMake(30.36, 6.41), controlPoint2: CGPointMake(30.63, 4.55))
        rectangle30Path.addCurveToPoint(CGPointMake(31.3, 4.55), controlPoint1: CGPointMake(30.63, 4.55), controlPoint2: CGPointMake(31.04, 4.68))
        rectangle30Path.addCurveToPoint(CGPointMake(32.33, 4.55), controlPoint1: CGPointMake(31.57, 4.41), controlPoint2: CGPointMake(32.49, 4.37))
        rectangle30Path.addCurveToPoint(CGPointMake(33.86, 4.78), controlPoint1: CGPointMake(32.17, 4.73), controlPoint2: CGPointMake(33.24, 4.64))
        rectangle30Path.addCurveToPoint(CGPointMake(34.88, 4.55), controlPoint1: CGPointMake(34.48, 4.91), controlPoint2: CGPointMake(34.88, 4.55))
        rectangle30Path.addCurveToPoint(CGPointMake(35.82, 4.55), controlPoint1: CGPointMake(34.88, 4.55), controlPoint2: CGPointMake(35.61, 4.37))
        rectangle30Path.addCurveToPoint(CGPointMake(36.74, 4.55), controlPoint1: CGPointMake(36.04, 4.73), controlPoint2: CGPointMake(36.82, 4.28))
        rectangle30Path.addCurveToPoint(CGPointMake(36.74, 6.32), controlPoint1: CGPointMake(36.65, 4.82), controlPoint2: CGPointMake(36.74, 6.32))
        rectangle30Path.closePath()
        babbelOrangeS10.setFill()
        rectangle30Path.fill()


        //// Rectangle 31 Drawing
        var rectangle31Path = UIBezierPath()
        rectangle31Path.moveToPoint(CGPointMake(-21.01, -2.42))
        rectangle31Path.addCurveToPoint(CGPointMake(-22.72, -2.38), controlPoint1: CGPointMake(-21.01, -2.42), controlPoint2: CGPointMake(-21.78, -2.39))
        rectangle31Path.addCurveToPoint(CGPointMake(-25.47, -2.38), controlPoint1: CGPointMake(-23.51, -2.38), controlPoint2: CGPointMake(-24.57, -2.49))
        rectangle31Path.addCurveToPoint(CGPointMake(-29.49, -2.39), controlPoint1: CGPointMake(-26.38, -2.27), controlPoint2: CGPointMake(-29.17, -2.5))
        rectangle31Path.addCurveToPoint(CGPointMake(-32.39, -2.42), controlPoint1: CGPointMake(-29.89, -2.24), controlPoint2: CGPointMake(-32.23, -2.39))
        rectangle31Path.addCurveToPoint(CGPointMake(-32.39, -1), controlPoint1: CGPointMake(-32.89, -2.49), controlPoint2: CGPointMake(-32.39, -1))
        rectangle31Path.addCurveToPoint(CGPointMake(-31.14, -1), controlPoint1: CGPointMake(-32.39, -1), controlPoint2: CGPointMake(-31.64, -1.11))
        rectangle31Path.addCurveToPoint(CGPointMake(-29.23, -1), controlPoint1: CGPointMake(-30.64, -0.89), controlPoint2: CGPointMake(-28.93, -0.86))
        rectangle31Path.addCurveToPoint(CGPointMake(-26.38, -1.18), controlPoint1: CGPointMake(-29.53, -1.15), controlPoint2: CGPointMake(-27.53, -1.07))
        rectangle31Path.addCurveToPoint(CGPointMake(-24.47, -1), controlPoint1: CGPointMake(-25.22, -1.29), controlPoint2: CGPointMake(-24.47, -1))
        rectangle31Path.addCurveToPoint(CGPointMake(-22.72, -1), controlPoint1: CGPointMake(-24.47, -1), controlPoint2: CGPointMake(-23.12, -0.86))
        rectangle31Path.addCurveToPoint(CGPointMake(-21.01, -1), controlPoint1: CGPointMake(-22.32, -1.15), controlPoint2: CGPointMake(-20.85, -0.78))
        rectangle31Path.addCurveToPoint(CGPointMake(-21.01, -2.42), controlPoint1: CGPointMake(-21.17, -1.22), controlPoint2: CGPointMake(-21.01, -2.42))
        rectangle31Path.closePath()
        babbelOrangeS10.setFill()
        rectangle31Path.fill()


        //// Rectangle 32 Drawing
        var rectangle32Path = UIBezierPath()
        rectangle32Path.moveToPoint(CGPointMake(26.98, -3.56))
        rectangle32Path.addCurveToPoint(CGPointMake(24.49, -3.52), controlPoint1: CGPointMake(26.98, -3.56), controlPoint2: CGPointMake(25.86, -3.53))
        rectangle32Path.addCurveToPoint(CGPointMake(20.45, -3.52), controlPoint1: CGPointMake(23.33, -3.52), controlPoint2: CGPointMake(21.77, -3.63))
        rectangle32Path.addCurveToPoint(CGPointMake(14.58, -3.53), controlPoint1: CGPointMake(19.13, -3.41), controlPoint2: CGPointMake(15.04, -3.65))
        rectangle32Path.addCurveToPoint(CGPointMake(10.33, -3.56), controlPoint1: CGPointMake(13.99, -3.38), controlPoint2: CGPointMake(10.56, -3.54))
        rectangle32Path.addCurveToPoint(CGPointMake(10.33, -2.14), controlPoint1: CGPointMake(9.59, -3.63), controlPoint2: CGPointMake(10.33, -2.14))
        rectangle32Path.addCurveToPoint(CGPointMake(12.16, -2.14), controlPoint1: CGPointMake(10.33, -2.14), controlPoint2: CGPointMake(11.43, -2.25))
        rectangle32Path.addCurveToPoint(CGPointMake(14.95, -2.14), controlPoint1: CGPointMake(12.89, -2.03), controlPoint2: CGPointMake(15.39, -2))
        rectangle32Path.addCurveToPoint(CGPointMake(19.13, -2.33), controlPoint1: CGPointMake(14.51, -2.29), controlPoint2: CGPointMake(17.44, -2.22))
        rectangle32Path.addCurveToPoint(CGPointMake(21.92, -2.14), controlPoint1: CGPointMake(20.82, -2.43), controlPoint2: CGPointMake(21.92, -2.14))
        rectangle32Path.addCurveToPoint(CGPointMake(24.49, -2.14), controlPoint1: CGPointMake(21.92, -2.14), controlPoint2: CGPointMake(23.9, -2))
        rectangle32Path.addCurveToPoint(CGPointMake(26.98, -2.14), controlPoint1: CGPointMake(25.07, -2.29), controlPoint2: CGPointMake(27.22, -1.93))
        rectangle32Path.addCurveToPoint(CGPointMake(26.98, -3.56), controlPoint1: CGPointMake(26.75, -2.36), controlPoint2: CGPointMake(26.98, -3.56))
        rectangle32Path.closePath()
        babbelOrangeS10.setFill()
        rectangle32Path.fill()


        //// Rectangle 33 Drawing
        var rectangle33Path = UIBezierPath()
        rectangle33Path.moveToPoint(CGPointMake(-3.85, 0.25))
        rectangle33Path.addCurveToPoint(CGPointMake(-5.93, 0.3), controlPoint1: CGPointMake(-3.85, 0.25), controlPoint2: CGPointMake(-4.78, 0.29))
        rectangle33Path.addCurveToPoint(CGPointMake(-9.29, 0.3), controlPoint1: CGPointMake(-6.89, 0.3), controlPoint2: CGPointMake(-8.19, 0.16))
        rectangle33Path.addCurveToPoint(CGPointMake(-14.18, 0.29), controlPoint1: CGPointMake(-10.39, 0.43), controlPoint2: CGPointMake(-13.8, 0.15))
        rectangle33Path.addCurveToPoint(CGPointMake(-17.73, 0.25), controlPoint1: CGPointMake(-14.67, 0.48), controlPoint2: CGPointMake(-17.54, 0.28))
        rectangle33Path.addCurveToPoint(CGPointMake(-17.73, 2.02), controlPoint1: CGPointMake(-18.34, 0.16), controlPoint2: CGPointMake(-17.73, 2.02))
        rectangle33Path.addCurveToPoint(CGPointMake(-16.2, 2.02), controlPoint1: CGPointMake(-17.73, 2.02), controlPoint2: CGPointMake(-16.81, 1.89))
        rectangle33Path.addCurveToPoint(CGPointMake(-13.88, 2.02), controlPoint1: CGPointMake(-15.59, 2.16), controlPoint2: CGPointMake(-13.51, 2.2))
        rectangle33Path.addCurveToPoint(CGPointMake(-10.39, 1.8), controlPoint1: CGPointMake(-14.24, 1.84), controlPoint2: CGPointMake(-11.8, 1.93))
        rectangle33Path.addCurveToPoint(CGPointMake(-8.07, 2.02), controlPoint1: CGPointMake(-8.98, 1.66), controlPoint2: CGPointMake(-8.07, 2.02))
        rectangle33Path.addCurveToPoint(CGPointMake(-5.93, 2.02), controlPoint1: CGPointMake(-8.07, 2.02), controlPoint2: CGPointMake(-6.41, 2.2))
        rectangle33Path.addCurveToPoint(CGPointMake(4.23, 1.76), controlPoint1: CGPointMake(-5.44, 1.84), controlPoint2: CGPointMake(6.14, 2.9))
        rectangle33Path.addCurveToPoint(CGPointMake(-3.85, 0.25), controlPoint1: CGPointMake(2.33, 0.62), controlPoint2: CGPointMake(-3.85, 0.25))
        rectangle33Path.closePath()
        babbelOrangeS10.setFill()
        rectangle33Path.fill()


        //// Rectangle 34 Drawing
        var rectangle34Path = UIBezierPath()
        rectangle34Path.moveToPoint(CGPointMake(-7.46, 4.06))
        rectangle34Path.addCurveToPoint(CGPointMake(-11.15, 4.1), controlPoint1: CGPointMake(-7.46, 4.06), controlPoint2: CGPointMake(-9.12, 4.09))
        rectangle34Path.addCurveToPoint(CGPointMake(-17.12, 4.1), controlPoint1: CGPointMake(-12.86, 4.1), controlPoint2: CGPointMake(-15.16, 3.99))
        rectangle34Path.addCurveToPoint(CGPointMake(-25.79, 4.09), controlPoint1: CGPointMake(-19.07, 4.2), controlPoint2: CGPointMake(-25.11, 3.97))
        rectangle34Path.addCurveToPoint(CGPointMake(-32.08, 4.06), controlPoint1: CGPointMake(-26.66, 4.24), controlPoint2: CGPointMake(-31.74, 4.08))
        rectangle34Path.addCurveToPoint(CGPointMake(-32.08, 5.48), controlPoint1: CGPointMake(-33.17, 3.99), controlPoint2: CGPointMake(-32.08, 5.48))
        rectangle34Path.addCurveToPoint(CGPointMake(-29.37, 5.48), controlPoint1: CGPointMake(-32.08, 5.48), controlPoint2: CGPointMake(-30.46, 5.37))
        rectangle34Path.addCurveToPoint(CGPointMake(-25.25, 5.48), controlPoint1: CGPointMake(-28.29, 5.58), controlPoint2: CGPointMake(-24.6, 5.62))
        rectangle34Path.addCurveToPoint(CGPointMake(-19.07, 5.29), controlPoint1: CGPointMake(-25.9, 5.33), controlPoint2: CGPointMake(-21.56, 5.4))
        rectangle34Path.addCurveToPoint(CGPointMake(-14.95, 5.48), controlPoint1: CGPointMake(-16.57, 5.18), controlPoint2: CGPointMake(-14.95, 5.48))
        rectangle34Path.addCurveToPoint(CGPointMake(-11, 7), controlPoint1: CGPointMake(-14.95, 5.48), controlPoint2: CGPointMake(-12, 9))
        rectangle34Path.addCurveToPoint(CGPointMake(-3.08, 5.57), controlPoint1: CGPointMake(-10, 5), controlPoint2: CGPointMake(-2.73, 5.79))
        rectangle34Path.addCurveToPoint(CGPointMake(-7.46, 4.06), controlPoint1: CGPointMake(-3.42, 5.35), controlPoint2: CGPointMake(-7.46, 4.06))
        rectangle34Path.closePath()
        babbelOrangeS10.setFill()
        rectangle34Path.fill()


        //// Rectangle 35 Drawing
        var rectangle35Path = UIBezierPath()
        rectangle35Path.moveToPoint(CGPointMake(-25.26, 8.86))
        rectangle35Path.addCurveToPoint(CGPointMake(-31.53, 7.39), controlPoint1: CGPointMake(-25.26, 8.86), controlPoint2: CGPointMake(-30.77, 7.39))
        rectangle35Path.addCurveToPoint(CGPointMake(-33.78, 7.39), controlPoint1: CGPointMake(-32.18, 7.4), controlPoint2: CGPointMake(-33.05, 7.26))
        rectangle35Path.addCurveToPoint(CGPointMake(-37.06, 7.39), controlPoint1: CGPointMake(-34.52, 7.53), controlPoint2: CGPointMake(-36.8, 7.24))
        rectangle35Path.addCurveToPoint(CGPointMake(-39.43, 7.35), controlPoint1: CGPointMake(-37.39, 7.57), controlPoint2: CGPointMake(-39.3, 7.38))
        rectangle35Path.addCurveToPoint(CGPointMake(-39.43, 9.12), controlPoint1: CGPointMake(-39.84, 7.26), controlPoint2: CGPointMake(-39.43, 9.12))
        rectangle35Path.addCurveToPoint(CGPointMake(-38.41, 9.12), controlPoint1: CGPointMake(-39.43, 9.12), controlPoint2: CGPointMake(-38.82, 8.98))
        rectangle35Path.addCurveToPoint(CGPointMake(-36.85, 9.12), controlPoint1: CGPointMake(-38, 9.25), controlPoint2: CGPointMake(-36.61, 9.3))
        rectangle35Path.addCurveToPoint(CGPointMake(-34.52, 8.89), controlPoint1: CGPointMake(-37.1, 8.94), controlPoint2: CGPointMake(-35.46, 9.03))
        rectangle35Path.addCurveToPoint(CGPointMake(-32.96, 9.12), controlPoint1: CGPointMake(-33.58, 8.76), controlPoint2: CGPointMake(-32.96, 9.12))
        rectangle35Path.addCurveToPoint(CGPointMake(-31.53, 9.12), controlPoint1: CGPointMake(-32.96, 9.12), controlPoint2: CGPointMake(-31.86, 9.3))
        rectangle35Path.addCurveToPoint(CGPointMake(-30.14, 9.12), controlPoint1: CGPointMake(-31.2, 8.94), controlPoint2: CGPointMake(-30.01, 9.39))
        rectangle35Path.addCurveToPoint(CGPointMake(-25.26, 8.86), controlPoint1: CGPointMake(-30.27, 8.85), controlPoint2: CGPointMake(-25.26, 8.86))
        rectangle35Path.closePath()
        CGContextSaveGState(context)
        rectangle35Path.addClip()
        CGContextDrawLinearGradient(context, gradient4, CGPointMake(-32.44, 9.24), CGPointMake(-32.44, 7.33), 0)
        CGContextRestoreGState(context)


        //// Rectangle 36 Drawing
        var rectangle36Path = UIBezierPath()
        rectangle36Path.moveToPoint(CGPointMake(39.11, 0.59))
        rectangle36Path.addCurveToPoint(CGPointMake(36.45, 0.63), controlPoint1: CGPointMake(39.11, 0.59), controlPoint2: CGPointMake(37.91, 0.62))
        rectangle36Path.addCurveToPoint(CGPointMake(25.88, -1.71), controlPoint1: CGPointMake(35.22, 0.64), controlPoint2: CGPointMake(27.29, -1.85))
        rectangle36Path.addCurveToPoint(CGPointMake(25.88, 0.63), controlPoint1: CGPointMake(24.47, -1.58), controlPoint2: CGPointMake(26.37, 0.48))
        rectangle36Path.addCurveToPoint(CGPointMake(21.35, 0.59), controlPoint1: CGPointMake(25.26, 0.81), controlPoint2: CGPointMake(21.59, 0.61))
        rectangle36Path.addCurveToPoint(CGPointMake(21.35, 2.36), controlPoint1: CGPointMake(20.57, 0.49), controlPoint2: CGPointMake(21.35, 2.36))
        rectangle36Path.addCurveToPoint(CGPointMake(23.3, 2.36), controlPoint1: CGPointMake(21.35, 2.36), controlPoint2: CGPointMake(22.52, 2.22))
        rectangle36Path.addCurveToPoint(CGPointMake(26.28, 2.36), controlPoint1: CGPointMake(24.09, 2.49), controlPoint2: CGPointMake(26.75, 2.54))
        rectangle36Path.addCurveToPoint(CGPointMake(30.74, 2.13), controlPoint1: CGPointMake(25.81, 2.17), controlPoint2: CGPointMake(28.94, 2.27))
        rectangle36Path.addCurveToPoint(CGPointMake(33.71, 2.36), controlPoint1: CGPointMake(32.54, 1.99), controlPoint2: CGPointMake(33.71, 2.36))
        rectangle36Path.addCurveToPoint(CGPointMake(36.45, 2.36), controlPoint1: CGPointMake(33.71, 2.36), controlPoint2: CGPointMake(35.82, 2.54))
        rectangle36Path.addCurveToPoint(CGPointMake(39.11, 2.36), controlPoint1: CGPointMake(37.08, 2.17), controlPoint2: CGPointMake(39.36, 2.63))
        rectangle36Path.addCurveToPoint(CGPointMake(39.11, 0.59), controlPoint1: CGPointMake(38.86, 2.08), controlPoint2: CGPointMake(39.11, 0.59))
        rectangle36Path.closePath()
        AngyWordsStyleKit.babbelLightOrange.setFill()
        rectangle36Path.fill()


        //// Rectangle 37 Drawing
        var rectangle37Path = UIBezierPath()
        rectangle37Path.moveToPoint(CGPointMake(15.44, -0.16))
        rectangle37Path.addCurveToPoint(CGPointMake(11.81, -0.22), controlPoint1: CGPointMake(15.44, -0.16), controlPoint2: CGPointMake(13.8, -0.21))
        rectangle37Path.addCurveToPoint(CGPointMake(5.95, -0.22), controlPoint1: CGPointMake(10.13, -0.23), controlPoint2: CGPointMake(7.87, -0.04))
        rectangle37Path.addCurveToPoint(CGPointMake(-2.58, -0.21), controlPoint1: CGPointMake(4.03, -0.4), controlPoint2: CGPointMake(-1.91, -0.02))
        rectangle37Path.addCurveToPoint(CGPointMake(-8.76, -0.16), controlPoint1: CGPointMake(-3.43, -0.46), controlPoint2: CGPointMake(-8.42, -0.2))
        rectangle37Path.addCurveToPoint(CGPointMake(-8.76, -2.51), controlPoint1: CGPointMake(-9.82, -0.04), controlPoint2: CGPointMake(-8.76, -2.51))
        rectangle37Path.addCurveToPoint(CGPointMake(-6.09, -2.51), controlPoint1: CGPointMake(-8.76, -2.51), controlPoint2: CGPointMake(-7.16, -2.33))
        rectangle37Path.addCurveToPoint(CGPointMake(-2.04, -2.51), controlPoint1: CGPointMake(-5.03, -2.69), controlPoint2: CGPointMake(-1.4, -2.75))
        rectangle37Path.addCurveToPoint(CGPointMake(4.03, -2.21), controlPoint1: CGPointMake(-2.68, -2.27), controlPoint2: CGPointMake(1.58, -2.39))
        rectangle37Path.addCurveToPoint(CGPointMake(8.08, -2.51), controlPoint1: CGPointMake(6.48, -2.03), controlPoint2: CGPointMake(8.08, -2.51))
        rectangle37Path.addCurveToPoint(CGPointMake(11.81, -2.51), controlPoint1: CGPointMake(8.08, -2.51), controlPoint2: CGPointMake(10.96, -2.75))
        rectangle37Path.addCurveToPoint(CGPointMake(15.44, -2.51), controlPoint1: CGPointMake(12.67, -2.27), controlPoint2: CGPointMake(15.78, -2.87))
        rectangle37Path.addCurveToPoint(CGPointMake(15.44, -0.16), controlPoint1: CGPointMake(15.1, -2.15), controlPoint2: CGPointMake(15.44, -0.16))
        rectangle37Path.closePath()
        AngyWordsStyleKit.babbelYellow.setFill()
        rectangle37Path.fill()


        //// Rectangle 38 Drawing
        var rectangle38Path = UIBezierPath()
        rectangle38Path.moveToPoint(CGPointMake(-30.52, -6.99))
        rectangle38Path.addCurveToPoint(CGPointMake(-31.92, -6.96), controlPoint1: CGPointMake(-30.52, -6.99), controlPoint2: CGPointMake(-31.15, -6.97))
        rectangle38Path.addCurveToPoint(CGPointMake(-34.17, -6.96), controlPoint1: CGPointMake(-32.56, -6.96), controlPoint2: CGPointMake(-33.43, -7.05))
        rectangle38Path.addCurveToPoint(CGPointMake(-37.44, -6.97), controlPoint1: CGPointMake(-34.9, -6.88), controlPoint2: CGPointMake(-37.19, -7.06))
        rectangle38Path.addCurveToPoint(CGPointMake(-39.82, -6.99), controlPoint1: CGPointMake(-37.77, -6.86), controlPoint2: CGPointMake(-39.69, -6.97))
        rectangle38Path.addCurveToPoint(CGPointMake(-39.82, -5.93), controlPoint1: CGPointMake(-40.23, -7.05), controlPoint2: CGPointMake(-39.82, -5.93))
        rectangle38Path.addCurveToPoint(CGPointMake(-38.79, -5.93), controlPoint1: CGPointMake(-39.82, -5.93), controlPoint2: CGPointMake(-39.2, -6.01))
        rectangle38Path.addCurveToPoint(CGPointMake(-37.24, -5.93), controlPoint1: CGPointMake(-38.38, -5.85), controlPoint2: CGPointMake(-36.99, -5.82))
        rectangle38Path.addCurveToPoint(CGPointMake(-34.9, -6.07), controlPoint1: CGPointMake(-37.48, -6.04), controlPoint2: CGPointMake(-35.85, -5.98))
        rectangle38Path.addCurveToPoint(CGPointMake(-33.35, -5.93), controlPoint1: CGPointMake(-33.96, -6.15), controlPoint2: CGPointMake(-33.35, -5.93))
        rectangle38Path.addCurveToPoint(CGPointMake(-31.92, -5.93), controlPoint1: CGPointMake(-33.35, -5.93), controlPoint2: CGPointMake(-32.24, -5.82))
        rectangle38Path.addCurveToPoint(CGPointMake(-30.52, -5.93), controlPoint1: CGPointMake(-31.59, -6.04), controlPoint2: CGPointMake(-30.39, -5.77))
        rectangle38Path.addCurveToPoint(CGPointMake(-30.52, -6.99), controlPoint1: CGPointMake(-30.65, -6.09), controlPoint2: CGPointMake(-30.52, -6.99))
        rectangle38Path.closePath()
        CGContextSaveGState(context)
        rectangle38Path.addClip()
        CGContextDrawLinearGradient(context, gradient4, CGPointMake(-35.26, -5.86), CGPointMake(-35.26, -7), 0)
        CGContextRestoreGState(context)


        //// Rectangle 39 Drawing
        var rectangle39Path = UIBezierPath()
        rectangle39Path.moveToPoint(CGPointMake(-15.4, -2.8))
        rectangle39Path.addCurveToPoint(CGPointMake(-17.28, -2.79), controlPoint1: CGPointMake(-15.4, -2.8), controlPoint2: CGPointMake(-16.25, -2.79))
        rectangle39Path.addCurveToPoint(CGPointMake(-20.32, -2.79), controlPoint1: CGPointMake(-18.15, -2.78), controlPoint2: CGPointMake(-19.33, -2.84))
        rectangle39Path.addCurveToPoint(CGPointMake(-24.75, -2.79), controlPoint1: CGPointMake(-21.32, -2.73), controlPoint2: CGPointMake(-24.4, -2.85))
        rectangle39Path.addCurveToPoint(CGPointMake(-27.96, -2.8), controlPoint1: CGPointMake(-25.19, -2.71), controlPoint2: CGPointMake(-27.78, -2.79))
        rectangle39Path.addCurveToPoint(CGPointMake(-27.96, -2.1), controlPoint1: CGPointMake(-28.51, -2.84), controlPoint2: CGPointMake(-27.96, -2.1))
        rectangle39Path.addCurveToPoint(CGPointMake(-26.58, -2.1), controlPoint1: CGPointMake(-27.96, -2.1), controlPoint2: CGPointMake(-27.13, -2.15))
        rectangle39Path.addCurveToPoint(CGPointMake(-24.47, -2.1), controlPoint1: CGPointMake(-26.02, -2.04), controlPoint2: CGPointMake(-24.14, -2.02))
        rectangle39Path.addCurveToPoint(CGPointMake(-21.32, -2.19), controlPoint1: CGPointMake(-24.81, -2.17), controlPoint2: CGPointMake(-22.59, -2.13))
        rectangle39Path.addCurveToPoint(CGPointMake(-19.22, -2.1), controlPoint1: CGPointMake(-20.05, -2.24), controlPoint2: CGPointMake(-19.22, -2.1))
        rectangle39Path.addCurveToPoint(CGPointMake(-17.28, -2.1), controlPoint1: CGPointMake(-19.22, -2.1), controlPoint2: CGPointMake(-17.72, -2.02))
        rectangle39Path.addCurveToPoint(CGPointMake(-15.4, -2.1), controlPoint1: CGPointMake(-16.84, -2.17), controlPoint2: CGPointMake(-15.22, -1.99))
        rectangle39Path.addCurveToPoint(CGPointMake(-15.4, -2.8), controlPoint1: CGPointMake(-15.58, -2.2), controlPoint2: CGPointMake(-15.4, -2.8))
        rectangle39Path.closePath()
        CGContextSaveGState(context)
        rectangle39Path.addClip()
        CGContextDrawLinearGradient(context, gradient4, CGPointMake(-21.79, -2.05), CGPointMake(-21.79, -2.81), 0)
        CGContextRestoreGState(context)


        //// Rectangle 40 Drawing
        var rectangle40Path = UIBezierPath()
        rectangle40Path.moveToPoint(CGPointMake(39.8, 2.28))
        rectangle40Path.addCurveToPoint(CGPointMake(36.17, 2.26), controlPoint1: CGPointMake(39.8, 2.28), controlPoint2: CGPointMake(38.16, 2.26))
        rectangle40Path.addCurveToPoint(CGPointMake(30.31, 2.26), controlPoint1: CGPointMake(34.49, 2.25), controlPoint2: CGPointMake(32.23, 2.31))
        rectangle40Path.addCurveToPoint(CGPointMake(21.78, 2.26), controlPoint1: CGPointMake(28.39, 2.2), controlPoint2: CGPointMake(22.45, 2.32))
        rectangle40Path.addCurveToPoint(CGPointMake(15.6, 2.28), controlPoint1: CGPointMake(20.93, 2.18), controlPoint2: CGPointMake(15.94, 2.26))
        rectangle40Path.addCurveToPoint(CGPointMake(15.6, 1.57), controlPoint1: CGPointMake(14.54, 2.31), controlPoint2: CGPointMake(15.6, 1.57))
        rectangle40Path.addCurveToPoint(CGPointMake(18.27, 1.57), controlPoint1: CGPointMake(15.6, 1.57), controlPoint2: CGPointMake(17.2, 1.62))
        rectangle40Path.addCurveToPoint(CGPointMake(22.32, 1.57), controlPoint1: CGPointMake(19.33, 1.51), controlPoint2: CGPointMake(22.96, 1.49))
        rectangle40Path.addCurveToPoint(CGPointMake(28.39, 1.66), controlPoint1: CGPointMake(21.68, 1.64), controlPoint2: CGPointMake(25.94, 1.6))
        rectangle40Path.addCurveToPoint(CGPointMake(32.44, 1.57), controlPoint1: CGPointMake(30.84, 1.71), controlPoint2: CGPointMake(32.44, 1.57))
        rectangle40Path.addCurveToPoint(CGPointMake(36.17, 1.57), controlPoint1: CGPointMake(32.44, 1.57), controlPoint2: CGPointMake(35.32, 1.49))
        rectangle40Path.addCurveToPoint(CGPointMake(39.8, 1.57), controlPoint1: CGPointMake(37.02, 1.64), controlPoint2: CGPointMake(40.14, 1.46))
        rectangle40Path.addCurveToPoint(CGPointMake(39.8, 2.28), controlPoint1: CGPointMake(39.45, 1.68), controlPoint2: CGPointMake(39.8, 2.28))
        rectangle40Path.closePath()
        AngyWordsStyleKit.babbelYellow.setFill()
        rectangle40Path.fill()


        //// Rectangle 41 Drawing
        var rectangle41Path = UIBezierPath()
        rectangle41Path.moveToPoint(CGPointMake(14.19, -3.74))
        rectangle41Path.addCurveToPoint(CGPointMake(11.37, -3.65), controlPoint1: CGPointMake(14.19, -3.74), controlPoint2: CGPointMake(12.92, -3.66))
        rectangle41Path.addCurveToPoint(CGPointMake(6.81, -3.65), controlPoint1: CGPointMake(10.06, -3.64), controlPoint2: CGPointMake(8.3, -3.9))
        rectangle41Path.addCurveToPoint(CGPointMake(0.18, -3.66), controlPoint1: CGPointMake(5.32, -3.4), controlPoint2: CGPointMake(0.7, -3.93))
        rectangle41Path.addCurveToPoint(CGPointMake(-4.63, -3.74), controlPoint1: CGPointMake(-0.49, -3.31), controlPoint2: CGPointMake(-4.37, -3.68))
        rectangle41Path.addCurveToPoint(CGPointMake(-11, -1), controlPoint1: CGPointMake(-5.46, -3.9), controlPoint2: CGPointMake(-11.52, -1.82))
        rectangle41Path.addCurveToPoint(CGPointMake(-2.56, -0.44), controlPoint1: CGPointMake(-10.48, -0.18), controlPoint2: CGPointMake(-3.39, -0.7))
        rectangle41Path.addCurveToPoint(CGPointMake(0.59, -0.44), controlPoint1: CGPointMake(-1.73, -0.19), controlPoint2: CGPointMake(1.09, -0.1))
        rectangle41Path.addCurveToPoint(CGPointMake(5.32, -0.86), controlPoint1: CGPointMake(0.09, -0.78), controlPoint2: CGPointMake(3.41, -0.61))
        rectangle41Path.addCurveToPoint(CGPointMake(8.47, -0.44), controlPoint1: CGPointMake(7.23, -1.12), controlPoint2: CGPointMake(8.47, -0.44))
        rectangle41Path.addCurveToPoint(CGPointMake(11.37, -0.44), controlPoint1: CGPointMake(8.47, -0.44), controlPoint2: CGPointMake(10.71, -0.1))
        rectangle41Path.addCurveToPoint(CGPointMake(16.87, -0.22), controlPoint1: CGPointMake(12.03, -0.78), controlPoint2: CGPointMake(13.62, 0.49))
        rectangle41Path.addCurveToPoint(CGPointMake(14.19, -3.74), controlPoint1: CGPointMake(20.12, -0.93), controlPoint2: CGPointMake(14.19, -3.74))
        rectangle41Path.closePath()
        CGContextSaveGState(context)
        rectangle41Path.addClip()
        CGContextDrawLinearGradient(context, gradient4, CGPointMake(3.41, -0), CGPointMake(3.41, -3.76), 0)
        CGContextRestoreGState(context)


        //// Rectangle 42 Drawing
        var rectangle42Path = UIBezierPath()
        rectangle42Path.moveToPoint(CGPointMake(22.67, 4.6))
        rectangle42Path.addCurveToPoint(CGPointMake(17.49, 5.76), controlPoint1: CGPointMake(22.67, 4.6), controlPoint2: CGPointMake(19.28, 4.62))
        rectangle42Path.addCurveToPoint(CGPointMake(13.18, 4.54), controlPoint1: CGPointMake(15.97, 6.73), controlPoint2: CGPointMake(15.1, 4.72))
        rectangle42Path.addCurveToPoint(CGPointMake(4.65, 4.55), controlPoint1: CGPointMake(11.26, 4.36), controlPoint2: CGPointMake(5.32, 4.74))
        rectangle42Path.addCurveToPoint(CGPointMake(-1.53, 4.6), controlPoint1: CGPointMake(3.8, 4.3), controlPoint2: CGPointMake(-1.19, 4.56))
        rectangle42Path.addCurveToPoint(CGPointMake(-1.53, 2.25), controlPoint1: CGPointMake(-2.59, 4.72), controlPoint2: CGPointMake(-1.53, 2.25))
        rectangle42Path.addCurveToPoint(CGPointMake(1.14, 2.25), controlPoint1: CGPointMake(-1.53, 2.25), controlPoint2: CGPointMake(0.07, 2.43))
        rectangle42Path.addCurveToPoint(CGPointMake(5.19, 2.25), controlPoint1: CGPointMake(2.2, 2.07), controlPoint2: CGPointMake(5.83, 2.01))
        rectangle42Path.addCurveToPoint(CGPointMake(11.26, 2.55), controlPoint1: CGPointMake(4.55, 2.49), controlPoint2: CGPointMake(8.81, 2.37))
        rectangle42Path.addCurveToPoint(CGPointMake(15.31, 2.25), controlPoint1: CGPointMake(13.71, 2.73), controlPoint2: CGPointMake(15.31, 2.25))
        rectangle42Path.addCurveToPoint(CGPointMake(19.04, 2.25), controlPoint1: CGPointMake(15.31, 2.25), controlPoint2: CGPointMake(18.19, 2.01))
        rectangle42Path.addCurveToPoint(CGPointMake(22.67, 2.25), controlPoint1: CGPointMake(19.9, 2.49), controlPoint2: CGPointMake(23.01, 1.89))
        rectangle42Path.addCurveToPoint(CGPointMake(22.67, 4.6), controlPoint1: CGPointMake(22.33, 2.61), controlPoint2: CGPointMake(22.67, 4.6))
        rectangle42Path.closePath()
        AngyWordsStyleKit.babbelYellow.setFill()
        rectangle42Path.fill()


        //// Rectangle 43 Drawing
        let rectangle43Path = UIBezierPath(rect: CGRectMake(-40, -7, 80, 2))
        CGContextSaveGState(context)
        rectangle43Path.addClip()
        CGContextDrawLinearGradient(context, gradient4, CGPointMake(0, -5), CGPointMake(0, -7), 0)
        CGContextRestoreGState(context)


        //// Rectangle 44 Drawing
        let rectangle44Path = UIBezierPath(rect: CGRectMake(-40, -6, 2, 15))
        CGContextSaveGState(context)
        rectangle44Path.addClip()
        CGContextDrawLinearGradient(context, gradient4, CGPointMake(-38, 1.5), CGPointMake(-40, 1.5), 0)
        CGContextRestoreGState(context)


        //// Rectangle Drawing
        var rectanglePath = UIBezierPath()
        rectanglePath.moveToPoint(CGPointMake(35.74, -1.68))
        rectanglePath.addCurveToPoint(CGPointMake(34.82, -1.73), controlPoint1: CGPointMake(35.74, -1.68), controlPoint2: CGPointMake(35.33, -1.72))
        rectanglePath.addCurveToPoint(CGPointMake(33.34, -1.73), controlPoint1: CGPointMake(34.4, -1.73), controlPoint2: CGPointMake(33.83, -1.59))
        rectanglePath.addCurveToPoint(CGPointMake(31.19, -1.72), controlPoint1: CGPointMake(32.86, -1.86), controlPoint2: CGPointMake(31.36, -1.57))
        rectanglePath.addCurveToPoint(CGPointMake(29.63, -1.68), controlPoint1: CGPointMake(30.98, -1.91), controlPoint2: CGPointMake(29.72, -1.71))
        rectanglePath.addCurveToPoint(CGPointMake(29.63, -3.45), controlPoint1: CGPointMake(29.36, -1.59), controlPoint2: CGPointMake(29.63, -3.45))
        rectanglePath.addCurveToPoint(CGPointMake(30.3, -3.45), controlPoint1: CGPointMake(29.63, -3.45), controlPoint2: CGPointMake(30.04, -3.32))
        rectanglePath.addCurveToPoint(CGPointMake(31.33, -3.45), controlPoint1: CGPointMake(30.57, -3.59), controlPoint2: CGPointMake(31.49, -3.63))
        rectanglePath.addCurveToPoint(CGPointMake(32.86, -3.22), controlPoint1: CGPointMake(31.17, -3.27), controlPoint2: CGPointMake(32.24, -3.36))
        rectanglePath.addCurveToPoint(CGPointMake(33.88, -3.45), controlPoint1: CGPointMake(33.48, -3.09), controlPoint2: CGPointMake(33.88, -3.45))
        rectanglePath.addCurveToPoint(CGPointMake(34.82, -3.45), controlPoint1: CGPointMake(33.88, -3.45), controlPoint2: CGPointMake(34.61, -3.63))
        rectanglePath.addCurveToPoint(CGPointMake(35.74, -3.45), controlPoint1: CGPointMake(35.04, -3.27), controlPoint2: CGPointMake(35.82, -3.72))
        rectanglePath.addCurveToPoint(CGPointMake(35.74, -1.68), controlPoint1: CGPointMake(35.65, -3.18), controlPoint2: CGPointMake(35.74, -1.68))
        rectanglePath.closePath()
        babbelOrangeS10.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        var rectangle2Path = UIBezierPath()
        rectangle2Path.moveToPoint(CGPointMake(-9.34, 0.6))
        rectangle2Path.addCurveToPoint(CGPointMake(-15.36, 1.76), controlPoint1: CGPointMake(-16.67, 0.2), controlPoint2: CGPointMake(-13.27, 0.62))
        rectangle2Path.addCurveToPoint(CGPointMake(-20.36, 0.54), controlPoint1: CGPointMake(-17.12, 2.73), controlPoint2: CGPointMake(-18.13, 0.72))
        rectangle2Path.addCurveToPoint(CGPointMake(-30.27, 0.55), controlPoint1: CGPointMake(-22.59, 0.36), controlPoint2: CGPointMake(-29.49, 0.74))
        rectangle2Path.addCurveToPoint(CGPointMake(-37.45, 0.6), controlPoint1: CGPointMake(-31.26, 0.3), controlPoint2: CGPointMake(-37.06, 0.56))
        rectangle2Path.addCurveToPoint(CGPointMake(-37.45, -1.75), controlPoint1: CGPointMake(-38.69, 0.72), controlPoint2: CGPointMake(-37.45, -1.75))
        rectangle2Path.addCurveToPoint(CGPointMake(-34.35, -1.75), controlPoint1: CGPointMake(-37.45, -1.75), controlPoint2: CGPointMake(-35.59, -1.57))
        rectangle2Path.addCurveToPoint(CGPointMake(-29.65, -1.75), controlPoint1: CGPointMake(-33.11, -1.93), controlPoint2: CGPointMake(-28.9, -1.99))
        rectangle2Path.addCurveToPoint(CGPointMake(-22.59, -1.45), controlPoint1: CGPointMake(-30.39, -1.51), controlPoint2: CGPointMake(-25.44, -1.63))
        rectangle2Path.addCurveToPoint(CGPointMake(-17.88, -1.75), controlPoint1: CGPointMake(-19.74, -1.27), controlPoint2: CGPointMake(-17.88, -1.75))
        rectangle2Path.addCurveToPoint(CGPointMake(-13.55, -1.75), controlPoint1: CGPointMake(-17.88, -1.75), controlPoint2: CGPointMake(-14.54, -1.99))
        rectangle2Path.addCurveToPoint(CGPointMake(-9.34, -1.75), controlPoint1: CGPointMake(-12.56, -1.51), controlPoint2: CGPointMake(-8.94, -2.11))
        rectangle2Path.addCurveToPoint(CGPointMake(-9.34, 0.6), controlPoint1: CGPointMake(-9.73, -1.39), controlPoint2: CGPointMake(-2, 1))
        rectangle2Path.closePath()
        AngyWordsStyleKit.babbelYellow.setFill()
        rectangle2Path.fill()


        //// Rectangle 3 Drawing
        var rectangle3Path = UIBezierPath()
        rectangle3Path.moveToPoint(CGPointMake(38.8, -1.72))
        rectangle3Path.addCurveToPoint(CGPointMake(35.17, -1.74), controlPoint1: CGPointMake(38.8, -1.72), controlPoint2: CGPointMake(37.16, -1.74))
        rectangle3Path.addCurveToPoint(CGPointMake(29.31, -1.74), controlPoint1: CGPointMake(33.49, -1.75), controlPoint2: CGPointMake(31.23, -1.69))
        rectangle3Path.addCurveToPoint(CGPointMake(20.78, -1.74), controlPoint1: CGPointMake(27.39, -1.8), controlPoint2: CGPointMake(21.45, -1.68))
        rectangle3Path.addCurveToPoint(CGPointMake(14.6, -1.72), controlPoint1: CGPointMake(19.93, -1.82), controlPoint2: CGPointMake(14.94, -1.74))
        rectangle3Path.addCurveToPoint(CGPointMake(14.6, -2.43), controlPoint1: CGPointMake(13.54, -1.69), controlPoint2: CGPointMake(14.6, -2.43))
        rectangle3Path.addCurveToPoint(CGPointMake(17.27, -2.43), controlPoint1: CGPointMake(14.6, -2.43), controlPoint2: CGPointMake(16.2, -2.38))
        rectangle3Path.addCurveToPoint(CGPointMake(21.32, -2.43), controlPoint1: CGPointMake(18.33, -2.49), controlPoint2: CGPointMake(21.96, -2.51))
        rectangle3Path.addCurveToPoint(CGPointMake(27.39, -2.34), controlPoint1: CGPointMake(20.68, -2.36), controlPoint2: CGPointMake(24.94, -2.4))
        rectangle3Path.addCurveToPoint(CGPointMake(31.44, -2.43), controlPoint1: CGPointMake(29.84, -2.29), controlPoint2: CGPointMake(31.44, -2.43))
        rectangle3Path.addCurveToPoint(CGPointMake(35.17, -2.43), controlPoint1: CGPointMake(31.44, -2.43), controlPoint2: CGPointMake(34.32, -2.51))
        rectangle3Path.addCurveToPoint(CGPointMake(38.8, -2.43), controlPoint1: CGPointMake(36.02, -2.36), controlPoint2: CGPointMake(39.14, -2.54))
        rectangle3Path.addCurveToPoint(CGPointMake(38.8, -1.72), controlPoint1: CGPointMake(38.45, -2.32), controlPoint2: CGPointMake(38.8, -1.72))
        rectangle3Path.closePath()
        AngyWordsStyleKit.babbelYellow.setFill()
        rectangle3Path.fill()


        //// Rectangle 4 Drawing
        var rectangle4Path = UIBezierPath()
        rectangle4Path.moveToPoint(CGPointMake(40.12, -2.41))
        rectangle4Path.addCurveToPoint(CGPointMake(39.28, -2.37), controlPoint1: CGPointMake(40.12, -2.41), controlPoint2: CGPointMake(39.75, -2.38))
        rectangle4Path.addCurveToPoint(CGPointMake(35.95, -4.71), controlPoint1: CGPointMake(38.89, -2.36), controlPoint2: CGPointMake(36.39, -4.85))
        rectangle4Path.addCurveToPoint(CGPointMake(35.95, -2.37), controlPoint1: CGPointMake(35.5, -4.58), controlPoint2: CGPointMake(36.11, -2.52))
        rectangle4Path.addCurveToPoint(CGPointMake(34.52, -2.41), controlPoint1: CGPointMake(35.75, -2.19), controlPoint2: CGPointMake(34.6, -2.39))
        rectangle4Path.addCurveToPoint(CGPointMake(34.52, -0.64), controlPoint1: CGPointMake(34.27, -2.51), controlPoint2: CGPointMake(34.52, -0.64))
        rectangle4Path.addCurveToPoint(CGPointMake(35.14, -0.64), controlPoint1: CGPointMake(34.52, -0.64), controlPoint2: CGPointMake(34.89, -0.78))
        rectangle4Path.addCurveToPoint(CGPointMake(36.08, -0.64), controlPoint1: CGPointMake(35.38, -0.51), controlPoint2: CGPointMake(36.22, -0.46))
        rectangle4Path.addCurveToPoint(CGPointMake(37.48, -0.87), controlPoint1: CGPointMake(35.93, -0.83), controlPoint2: CGPointMake(36.91, -0.73))
        rectangle4Path.addCurveToPoint(CGPointMake(38.42, -0.64), controlPoint1: CGPointMake(38.05, -1.01), controlPoint2: CGPointMake(38.42, -0.64))
        rectangle4Path.addCurveToPoint(CGPointMake(39.28, -0.64), controlPoint1: CGPointMake(38.42, -0.64), controlPoint2: CGPointMake(39.09, -0.46))
        rectangle4Path.addCurveToPoint(CGPointMake(40.12, -0.64), controlPoint1: CGPointMake(39.48, -0.83), controlPoint2: CGPointMake(40.2, -0.37))
        rectangle4Path.addCurveToPoint(CGPointMake(40.12, -2.41), controlPoint1: CGPointMake(40.04, -0.92), controlPoint2: CGPointMake(40.12, -2.41))
        rectangle4Path.closePath()
        AngyWordsStyleKit.babbelLightOrange.setFill()
        rectangle4Path.fill()


        //// Rectangle 5 Drawing
        var rectangle5Path = UIBezierPath()
        rectangle5Path.moveToPoint(CGPointMake(38.6, 6.01))
        rectangle5Path.addCurveToPoint(CGPointMake(36.72, 6.03), controlPoint1: CGPointMake(38.6, 6.01), controlPoint2: CGPointMake(37.75, 6.03))
        rectangle5Path.addCurveToPoint(CGPointMake(34, 5), controlPoint1: CGPointMake(35.85, 6.03), controlPoint2: CGPointMake(35, 4.93))
        rectangle5Path.addCurveToPoint(CGPointMake(29.25, 6.03), controlPoint1: CGPointMake(33, 5.07), controlPoint2: CGPointMake(31.02, 7.62))
        rectangle5Path.addCurveToPoint(CGPointMake(26.04, 6.01), controlPoint1: CGPointMake(27, 4), controlPoint2: CGPointMake(26.22, 6.02))
        rectangle5Path.addCurveToPoint(CGPointMake(26.04, 6.89), controlPoint1: CGPointMake(25.49, 5.96), controlPoint2: CGPointMake(26.04, 6.89))
        rectangle5Path.addCurveToPoint(CGPointMake(27.42, 6.89), controlPoint1: CGPointMake(26.04, 6.89), controlPoint2: CGPointMake(26.87, 6.82))
        rectangle5Path.addCurveToPoint(CGPointMake(29.53, 6.89), controlPoint1: CGPointMake(27.98, 6.96), controlPoint2: CGPointMake(29.86, 6.98))
        rectangle5Path.addCurveToPoint(CGPointMake(32.68, 6.78), controlPoint1: CGPointMake(29.19, 6.8), controlPoint2: CGPointMake(31.41, 6.85))
        rectangle5Path.addCurveToPoint(CGPointMake(34.78, 6.89), controlPoint1: CGPointMake(33.95, 6.71), controlPoint2: CGPointMake(34.78, 6.89))
        rectangle5Path.addCurveToPoint(CGPointMake(36.72, 6.89), controlPoint1: CGPointMake(34.78, 6.89), controlPoint2: CGPointMake(36.28, 6.98))
        rectangle5Path.addCurveToPoint(CGPointMake(38.6, 6.89), controlPoint1: CGPointMake(37.16, 6.8), controlPoint2: CGPointMake(38.78, 7.03))
        rectangle5Path.addCurveToPoint(CGPointMake(38.6, 6.01), controlPoint1: CGPointMake(38.42, 6.76), controlPoint2: CGPointMake(38.6, 6.01))
        rectangle5Path.closePath()
        CGContextSaveGState(context)
        rectangle5Path.addClip()
        CGContextDrawLinearGradient(context, gradient4, CGPointMake(32.21, 6.95), CGPointMake(32.21, 5), 0)
        CGContextRestoreGState(context)



        CGContextRestoreGState(context)
    }

    public class func drawCanvasSand() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let sand = UIColor(red: 0.880, green: 0.754, blue: 0.335, alpha: 1.000)
        let sandS10 = sand.colorWithShadow(0.1)
        let sandS20 = sand.colorWithShadow(0.2)

        //// Rectangle 9 Drawing
        let rectangle9Path = UIBezierPath(rect: CGRectMake(0, 0, 64, 64))
        sandS10.setFill()
        rectangle9Path.fill()


        //// Rectangle 4 Drawing
        var rectangle4Path = UIBezierPath()
        rectangle4Path.moveToPoint(CGPointMake(53, 39))
        rectangle4Path.addCurveToPoint(CGPointMake(65, 45), controlPoint1: CGPointMake(56, 44.5), controlPoint2: CGPointMake(65, 45))
        rectangle4Path.addLineToPoint(CGPointMake(75, 45))
        rectangle4Path.addLineToPoint(CGPointMake(75, 23))
        rectangle4Path.addLineToPoint(CGPointMake(65, 23))
        rectangle4Path.addCurveToPoint(CGPointMake(51, 31), controlPoint1: CGPointMake(65, 23), controlPoint2: CGPointMake(54, 25.5))
        rectangle4Path.addCurveToPoint(CGPointMake(53, 39), controlPoint1: CGPointMake(48, 36.5), controlPoint2: CGPointMake(50, 33.5))
        rectangle4Path.closePath()
        sandS10.setFill()
        rectangle4Path.fill()
        sandS20.setStroke()
        rectangle4Path.lineWidth = 2
        rectangle4Path.stroke()


        //// Rectangle Drawing
        var rectanglePath = UIBezierPath()
        rectanglePath.moveToPoint(CGPointMake(-11, 45))
        rectanglePath.addLineToPoint(CGPointMake(1, 45))
        rectanglePath.addCurveToPoint(CGPointMake(15, 39), controlPoint1: CGPointMake(1, 45), controlPoint2: CGPointMake(9, 45))
        rectanglePath.addCurveToPoint(CGPointMake(17, 29), controlPoint1: CGPointMake(18.46, 35.54), controlPoint2: CGPointMake(17.22, 33.72))
        rectanglePath.addCurveToPoint(CGPointMake(11, 23), controlPoint1: CGPointMake(16.84, 25.53), controlPoint2: CGPointMake(12.06, 25.33))
        rectanglePath.addCurveToPoint(CGPointMake(1, 23), controlPoint1: CGPointMake(8.5, 17.5), controlPoint2: CGPointMake(1, 23))
        rectanglePath.addLineToPoint(CGPointMake(-11, 23))
        rectanglePath.addLineToPoint(CGPointMake(-11, 45))
        rectanglePath.closePath()
        sandS10.setFill()
        rectanglePath.fill()
        sandS20.setStroke()
        rectanglePath.lineWidth = 2
        rectanglePath.stroke()


        //// Rectangle 2 Drawing
        var rectangle2Path = UIBezierPath()
        rectangle2Path.moveToPoint(CGPointMake(23, -1))
        rectangle2Path.addCurveToPoint(CGPointMake(23, 11), controlPoint1: CGPointMake(23, -1), controlPoint2: CGPointMake(17.5, 8))
        rectangle2Path.addCurveToPoint(CGPointMake(45, 11), controlPoint1: CGPointMake(28.5, 14), controlPoint2: CGPointMake(37, 23))
        rectangle2Path.addCurveToPoint(CGPointMake(45, -1), controlPoint1: CGPointMake(53, -1), controlPoint2: CGPointMake(45, -1))
        rectangle2Path.addLineToPoint(CGPointMake(45, -11))
        rectangle2Path.addLineToPoint(CGPointMake(23, -11))
        rectangle2Path.addLineToPoint(CGPointMake(23, -1))
        rectangle2Path.closePath()
        sandS10.setFill()
        rectangle2Path.fill()
        sandS20.setStroke()
        rectangle2Path.lineWidth = 2
        rectangle2Path.stroke()


        //// Rectangle 3 Drawing
        var rectangle3Path = UIBezierPath()
        rectangle3Path.moveToPoint(CGPointMake(23, 63))
        rectangle3Path.addLineToPoint(CGPointMake(23, 75))
        rectangle3Path.addLineToPoint(CGPointMake(45, 75))
        rectangle3Path.addLineToPoint(CGPointMake(45, 63))
        rectangle3Path.addCurveToPoint(CGPointMake(41, 59), controlPoint1: CGPointMake(45, 63), controlPoint2: CGPointMake(43, 61.5))
        rectangle3Path.addCurveToPoint(CGPointMake(35, 55), controlPoint1: CGPointMake(39, 56.5), controlPoint2: CGPointMake(40.5, 55))
        rectangle3Path.addCurveToPoint(CGPointMake(25, 55), controlPoint1: CGPointMake(29.5, 55), controlPoint2: CGPointMake(27, 51))
        rectangle3Path.addCurveToPoint(CGPointMake(23, 63), controlPoint1: CGPointMake(23, 59), controlPoint2: CGPointMake(23, 63))
        rectangle3Path.closePath()
        sandS10.setFill()
        rectangle3Path.fill()
        sandS20.setStroke()
        rectangle3Path.lineWidth = 2
        rectangle3Path.stroke()


        //// Rectangle 5 Drawing
        var rectangle5Path = UIBezierPath()
        rectangle5Path.moveToPoint(CGPointMake(53, 63))
        rectangle5Path.addLineToPoint(CGPointMake(53, 73))
        rectangle5Path.addLineToPoint(CGPointMake(75, 73))
        rectangle5Path.addLineToPoint(CGPointMake(75, 51))
        rectangle5Path.addLineToPoint(CGPointMake(65, 51))
        rectangle5Path.addCurveToPoint(CGPointMake(57, 53), controlPoint1: CGPointMake(65, 51), controlPoint2: CGPointMake(61, 51))
        rectangle5Path.addCurveToPoint(CGPointMake(53, 63), controlPoint1: CGPointMake(53, 55), controlPoint2: CGPointMake(53, 63))
        rectangle5Path.closePath()
        sandS10.setFill()
        rectangle5Path.fill()
        sandS20.setStroke()
        rectangle5Path.lineWidth = 2
        rectangle5Path.stroke()


        //// poly1 Drawing
        var poly1Path = UIBezierPath()
        poly1Path.moveToPoint(CGPointMake(53, -1))
        poly1Path.addCurveToPoint(CGPointMake(49, 13), controlPoint1: CGPointMake(53, -1), controlPoint2: CGPointMake(37, 9))
        poly1Path.addCurveToPoint(CGPointMake(65, 11), controlPoint1: CGPointMake(61, 17), controlPoint2: CGPointMake(65, 11))
        poly1Path.addLineToPoint(CGPointMake(75, 11))
        poly1Path.addLineToPoint(CGPointMake(75, -11))
        poly1Path.addLineToPoint(CGPointMake(53, -11))
        poly1Path.addLineToPoint(CGPointMake(53, -1))
        poly1Path.closePath()
        sandS10.setFill()
        poly1Path.fill()
        sandS20.setStroke()
        poly1Path.lineWidth = 2
        poly1Path.stroke()


        //// Rectangle 7 Drawing
        var rectangle7Path = UIBezierPath()
        rectangle7Path.moveToPoint(CGPointMake(-11, 10))
        rectangle7Path.addLineToPoint(CGPointMake(-1, 10))
        rectangle7Path.addCurveToPoint(CGPointMake(9, 16), controlPoint1: CGPointMake(-1, 10), controlPoint2: CGPointMake(1, 20))
        rectangle7Path.addCurveToPoint(CGPointMake(19, 4), controlPoint1: CGPointMake(12.72, 14.14), controlPoint2: CGPointMake(19.29, 6.48))
        rectangle7Path.addCurveToPoint(CGPointMake(11, -2), controlPoint1: CGPointMake(18.66, 1.14), controlPoint2: CGPointMake(11, -2))
        rectangle7Path.addLineToPoint(CGPointMake(11, -12))
        rectangle7Path.addLineToPoint(CGPointMake(-11, -12))
        rectangle7Path.addLineToPoint(CGPointMake(-11, 10))
        rectangle7Path.closePath()
        sandS10.setFill()
        rectangle7Path.fill()
        sandS20.setStroke()
        rectangle7Path.lineWidth = 2
        rectangle7Path.stroke()


        //// Rectangle 8 Drawing
        var rectangle8Path = UIBezierPath()
        rectangle8Path.moveToPoint(CGPointMake(-9, 73))
        rectangle8Path.addLineToPoint(CGPointMake(13, 73))
        rectangle8Path.addLineToPoint(CGPointMake(13, 63))
        rectangle8Path.addCurveToPoint(CGPointMake(13, 57), controlPoint1: CGPointMake(13, 63), controlPoint2: CGPointMake(12.43, 60.16))
        rectangle8Path.addCurveToPoint(CGPointMake(15, 49), controlPoint1: CGPointMake(13.43, 54.61), controlPoint2: CGPointMake(17.58, 49.86))
        rectangle8Path.addCurveToPoint(CGPointMake(1, 51), controlPoint1: CGPointMake(9, 47), controlPoint2: CGPointMake(1, 51))
        rectangle8Path.addLineToPoint(CGPointMake(-9, 51))
        rectangle8Path.addLineToPoint(CGPointMake(-9, 73))
        rectangle8Path.closePath()
        sandS10.setFill()
        rectangle8Path.fill()
        sandS20.setStroke()
        rectangle8Path.lineWidth = 2
        rectangle8Path.stroke()


        //// Oval Drawing
        var ovalPath = UIBezierPath()
        ovalPath.moveToPoint(CGPointMake(36.6, 40.88))
        ovalPath.addCurveToPoint(CGPointMake(31.87, 15.63), controlPoint1: CGPointMake(43.22, 33.07), controlPoint2: CGPointMake(34.3, 24.52))
        ovalPath.addCurveToPoint(CGPointMake(5.21, 15.63), controlPoint1: CGPointMake(29.45, 6.74), controlPoint2: CGPointMake(11.83, 7.82))
        ovalPath.addCurveToPoint(CGPointMake(17.33, 35.63), controlPoint1: CGPointMake(-1.42, 23.44), controlPoint2: CGPointMake(22.18, 26.74))
        ovalPath.addCurveToPoint(CGPointMake(36.6, 40.88), controlPoint1: CGPointMake(12.48, 44.52), controlPoint2: CGPointMake(29.97, 48.69))
        ovalPath.closePath()
        sandS10.setFill()
        ovalPath.fill()
        sandS20.setStroke()
        ovalPath.lineWidth = 2
        ovalPath.stroke()


        //// Oval 2 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 45.51, 33.18)
        CGContextRotateCTM(context, 89.5 * CGFloat(M_PI) / 180)

        var oval2Path = UIBezierPath()
        oval2Path.moveToPoint(CGPointMake(15.09, 13.7))
        oval2Path.addCurveToPoint(CGPointMake(1.9, -9.47), controlPoint1: CGPointMake(21.71, 5.89), controlPoint2: CGPointMake(-6.17, -1.54))
        oval2Path.addCurveToPoint(CGPointMake(-16.31, -11.55), controlPoint1: CGPointMake(9.97, -17.4), controlPoint2: CGPointMake(-9.68, -19.36))
        oval2Path.addCurveToPoint(CGPointMake(-24.25, 8.3), controlPoint1: CGPointMake(-22.93, -3.74), controlPoint2: CGPointMake(-19.4, -0.59))
        oval2Path.addCurveToPoint(CGPointMake(15.09, 13.7), controlPoint1: CGPointMake(-29.1, 17.19), controlPoint2: CGPointMake(8.46, 21.52))
        oval2Path.closePath()
        sandS10.setFill()
        oval2Path.fill()
        sandS20.setStroke()
        oval2Path.lineWidth = 2
        oval2Path.stroke()

        CGContextRestoreGState(context)


        //// Oval 3 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 39.51, 59.18)
        CGContextRotateCTM(context, 89.5 * CGFloat(M_PI) / 180)

        var oval3Path = UIBezierPath()
        oval3Path.moveToPoint(CGPointMake(-12.22, 28.07))
        oval3Path.addCurveToPoint(CGPointMake(0.33, -2.33), controlPoint1: CGPointMake(0.15, 25.86), controlPoint2: CGPointMake(-6.79, 6.99))
        oval3Path.addCurveToPoint(CGPointMake(-17.46, -11.84), controlPoint1: CGPointMake(7.46, -11.64), controlPoint2: CGPointMake(-11.61, -21.01))
        oval3Path.addCurveToPoint(CGPointMake(-24.47, 11.48), controlPoint1: CGPointMake(-23.3, -2.66), controlPoint2: CGPointMake(-20.19, 1.04))
        oval3Path.addCurveToPoint(CGPointMake(-12.22, 28.07), controlPoint1: CGPointMake(-28.75, 21.92), controlPoint2: CGPointMake(-24.59, 30.27))
        oval3Path.closePath()
        sandS10.setFill()
        oval3Path.fill()
        sandS20.setStroke()
        oval3Path.lineWidth = 2
        oval3Path.stroke()

        CGContextRestoreGState(context)
    }

    public class func drawCanvasSandLines() {
        //// Color Declarations
        let sand = UIColor(red: 0.880, green: 0.754, blue: 0.335, alpha: 1.000)
        let sandS10 = sand.colorWithShadow(0.1)
        let sandS20 = sand.colorWithShadow(0.2)

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRectMake(0, 0, 64, 64))
        sandS10.setFill()
        rectanglePath.fill()


        //// Rectangle 4 Drawing
        let rectangle4Path = UIBezierPath(rect: CGRectMake(4, 4, 4, 4))
        sandS20.setFill()
        rectangle4Path.fill()


        //// Rectangle 5 Drawing
        let rectangle5Path = UIBezierPath(rect: CGRectMake(4, 6, 2, 2))
        sandS20.setFill()
        rectangle5Path.fill()


        //// Rectangle 8 Drawing
        let rectangle8Path = UIBezierPath(rect: CGRectMake(0, 0, 4, 4))
        sandS20.setFill()
        rectangle8Path.fill()


        //// Rectangle 9 Drawing
        let rectangle9Path = UIBezierPath(rect: CGRectMake(2, 0, 2, 2))
        sandS20.setFill()
        rectangle9Path.fill()
    }

    public class func drawCanvasLetterB() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Text Drawing
        let textRect = CGRectMake(6, 0, 34, 40)
        var textTextContent = NSString(string: "B")
        let textStyle = NSMutableParagraphStyle.defaultParagraphStyle().mutableCopy() as NSMutableParagraphStyle
        textStyle.alignment = NSTextAlignment.Left

        let textFontAttributes = [NSFontAttributeName: UIFont(name: "ArialRoundedMTBold", size: 40)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = textTextContent.boundingRectWithSize(CGSizeMake(textRect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, textRect);
        textTextContent.drawInRect(CGRectMake(textRect.minX, textRect.minY + (textRect.height - textTextHeight) / 2, textRect.width, textTextHeight), withAttributes: textFontAttributes)
        CGContextRestoreGState(context)
    }

    public class func drawCanvasLetterA() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Text 2 Drawing
        let text2Rect = CGRectMake(6, 0, 34, 40)
        var text2TextContent = NSString(string: "A")
        let text2Style = NSMutableParagraphStyle.defaultParagraphStyle().mutableCopy() as NSMutableParagraphStyle
        text2Style.alignment = NSTextAlignment.Left

        let text2FontAttributes = [NSFontAttributeName: UIFont(name: "ArialRoundedMTBold", size: 40)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: text2Style]

        let text2TextHeight: CGFloat = text2TextContent.boundingRectWithSize(CGSizeMake(text2Rect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: text2FontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, text2Rect);
        text2TextContent.drawInRect(CGRectMake(text2Rect.minX, text2Rect.minY + (text2Rect.height - text2TextHeight) / 2, text2Rect.width, text2TextHeight), withAttributes: text2FontAttributes)
        CGContextRestoreGState(context)
    }

    public class func drawCanvasLetterE() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Text Drawing
        let textRect = CGRectMake(6, 0, 34, 40)
        var textTextContent = NSString(string: "E")
        let textStyle = NSMutableParagraphStyle.defaultParagraphStyle().mutableCopy() as NSMutableParagraphStyle
        textStyle.alignment = NSTextAlignment.Left

        let textFontAttributes = [NSFontAttributeName: UIFont(name: "ArialRoundedMTBold", size: 40)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = textTextContent.boundingRectWithSize(CGSizeMake(textRect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, textRect);
        textTextContent.drawInRect(CGRectMake(textRect.minX, textRect.minY + (textRect.height - textTextHeight) / 2, textRect.width, textTextHeight), withAttributes: textFontAttributes)
        CGContextRestoreGState(context)
    }

    public class func drawCanvasLetterL() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Text 2 Drawing
        let text2Rect = CGRectMake(7, 1, 34, 40)
        var text2TextContent = NSString(string: "L")
        let text2Style = NSMutableParagraphStyle.defaultParagraphStyle().mutableCopy() as NSMutableParagraphStyle
        text2Style.alignment = NSTextAlignment.Left

        let text2FontAttributes = [NSFontAttributeName: UIFont(name: "ArialRoundedMTBold", size: 40)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: text2Style]

        let text2TextHeight: CGFloat = text2TextContent.boundingRectWithSize(CGSizeMake(text2Rect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: text2FontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, text2Rect);
        text2TextContent.drawInRect(CGRectMake(text2Rect.minX, text2Rect.minY + (text2Rect.height - text2TextHeight) / 2, text2Rect.width, text2TextHeight), withAttributes: text2FontAttributes)
        CGContextRestoreGState(context)
    }

    public class func drawCanvasLetterH() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Text Drawing
        let textRect = CGRectMake(5, 0, 34, 40)
        var textTextContent = NSString(string: "H")
        let textStyle = NSMutableParagraphStyle.defaultParagraphStyle().mutableCopy() as NSMutableParagraphStyle
        textStyle.alignment = NSTextAlignment.Left

        let textFontAttributes = [NSFontAttributeName: UIFont(name: "ArialRoundedMTBold", size: 40)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = textTextContent.boundingRectWithSize(CGSizeMake(textRect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, textRect);
        textTextContent.drawInRect(CGRectMake(textRect.minX, textRect.minY + (textRect.height - textTextHeight) / 2, textRect.width, textTextHeight), withAttributes: textFontAttributes)
        CGContextRestoreGState(context)
    }

    public class func drawCanvasLetterC() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Text 2 Drawing
        let text2Rect = CGRectMake(6, 0, 34, 40)
        var text2TextContent = NSString(string: "C")
        let text2Style = NSMutableParagraphStyle.defaultParagraphStyle().mutableCopy() as NSMutableParagraphStyle
        text2Style.alignment = NSTextAlignment.Left

        let text2FontAttributes = [NSFontAttributeName: UIFont(name: "ArialRoundedMTBold", size: 40)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: text2Style]

        let text2TextHeight: CGFloat = text2TextContent.boundingRectWithSize(CGSizeMake(text2Rect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: text2FontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, text2Rect);
        text2TextContent.drawInRect(CGRectMake(text2Rect.minX, text2Rect.minY + (text2Rect.height - text2TextHeight) / 2, text2Rect.width, text2TextHeight), withAttributes: text2FontAttributes)
        CGContextRestoreGState(context)
    }

    public class func drawCanvasLetterK() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Text Drawing
        let textRect = CGRectMake(6, 0, 34, 40)
        var textTextContent = NSString(string: "K")
        let textStyle = NSMutableParagraphStyle.defaultParagraphStyle().mutableCopy() as NSMutableParagraphStyle
        textStyle.alignment = NSTextAlignment.Left

        let textFontAttributes = [NSFontAttributeName: UIFont(name: "ArialRoundedMTBold", size: 40)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = textTextContent.boundingRectWithSize(CGSizeMake(textRect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, textRect);
        textTextContent.drawInRect(CGRectMake(textRect.minX, textRect.minY + (textRect.height - textTextHeight) / 2, textRect.width, textTextHeight), withAttributes: textFontAttributes)
        CGContextRestoreGState(context)
    }

    public class func drawCanvasLetterD() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Text 2 Drawing
        let text2Rect = CGRectMake(6, 0, 34, 40)
        var text2TextContent = NSString(string: "D")
        let text2Style = NSMutableParagraphStyle.defaultParagraphStyle().mutableCopy() as NSMutableParagraphStyle
        text2Style.alignment = NSTextAlignment.Left

        let text2FontAttributes = [NSFontAttributeName: UIFont(name: "ArialRoundedMTBold", size: 40)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: text2Style]

        let text2TextHeight: CGFloat = text2TextContent.boundingRectWithSize(CGSizeMake(text2Rect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: text2FontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, text2Rect);
        text2TextContent.drawInRect(CGRectMake(text2Rect.minX, text2Rect.minY + (text2Rect.height - text2TextHeight) / 2, text2Rect.width, text2TextHeight), withAttributes: text2FontAttributes)
        CGContextRestoreGState(context)
    }

    public class func drawCanvasLetterY() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Text Drawing
        let textRect = CGRectMake(7, 0, 34, 40)
        var textTextContent = NSString(string: "Y")
        let textStyle = NSMutableParagraphStyle.defaultParagraphStyle().mutableCopy() as NSMutableParagraphStyle
        textStyle.alignment = NSTextAlignment.Left

        let textFontAttributes = [NSFontAttributeName: UIFont(name: "ArialRoundedMTBold", size: 40)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = textTextContent.boundingRectWithSize(CGSizeMake(textRect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, textRect);
        textTextContent.drawInRect(CGRectMake(textRect.minX, textRect.minY + (textRect.height - textTextHeight) / 2, textRect.width, textTextHeight), withAttributes: textFontAttributes)
        CGContextRestoreGState(context)
    }

    public class func drawCanvasLetter2() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Text 2 Drawing
        let text2Rect = CGRectMake(7, -1, 34, 40)
        var text2TextContent = NSString(string: "2")
        let text2Style = NSMutableParagraphStyle.defaultParagraphStyle().mutableCopy() as NSMutableParagraphStyle
        text2Style.alignment = NSTextAlignment.Left

        let text2FontAttributes = [NSFontAttributeName: UIFont(name: "ArialRoundedMTBold", size: 40)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: text2Style]

        let text2TextHeight: CGFloat = text2TextContent.boundingRectWithSize(CGSizeMake(text2Rect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: text2FontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, text2Rect);
        text2TextContent.drawInRect(CGRectMake(text2Rect.minX, text2Rect.minY + (text2Rect.height - text2TextHeight) / 2, text2Rect.width, text2TextHeight), withAttributes: text2FontAttributes)
        CGContextRestoreGState(context)
    }

    public class func drawCanvasLetter() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Text Drawing
        let textRect = CGRectMake(12, -5, 34, 40)
        var textTextContent = NSString(string: "-")
        let textStyle = NSMutableParagraphStyle.defaultParagraphStyle().mutableCopy() as NSMutableParagraphStyle
        textStyle.alignment = NSTextAlignment.Left

        let textFontAttributes = [NSFontAttributeName: UIFont(name: "ArialRoundedMTBold", size: 40)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = textTextContent.boundingRectWithSize(CGSizeMake(textRect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, textRect);
        textTextContent.drawInRect(CGRectMake(textRect.minX, textRect.minY + (textRect.height - textTextHeight) / 2, textRect.width, textTextHeight), withAttributes: textFontAttributes)
        CGContextRestoreGState(context)
    }

    public class func drawBlueMountain() {
        //// Color Declarations
        let babbelBlueS5 = AngyWordsStyleKit.babbelBlue.colorWithShadow(0.052)

        //// Oval Drawing
        var ovalPath = UIBezierPath()
        ovalPath.moveToPoint(CGPointMake(127, 122))
        ovalPath.addCurveToPoint(CGPointMake(136, 99), controlPoint1: CGPointMake(158.64, 119.32), controlPoint2: CGPointMake(161, 105))
        ovalPath.addCurveToPoint(CGPointMake(97, 56), controlPoint1: CGPointMake(114.39, 93.81), controlPoint2: CGPointMake(104, 62))
        ovalPath.addCurveToPoint(CGPointMake(40, 41), controlPoint1: CGPointMake(81.9, 43.06), controlPoint2: CGPointMake(57.16, 31.46))
        ovalPath.addCurveToPoint(CGPointMake(0.21, 73.24), controlPoint1: CGPointMake(33.07, 44.85), controlPoint2: CGPointMake(22, 65))
        ovalPath.addCurveToPoint(CGPointMake(-7, 87), controlPoint1: CGPointMake(-6.3, 75.7), controlPoint2: CGPointMake(-4.97, 82.62))
        ovalPath.addCurveToPoint(CGPointMake(-7, 122), controlPoint1: CGPointMake(-15, 104.26), controlPoint2: CGPointMake(-13.32, 116.61))
        ovalPath.addCurveToPoint(CGPointMake(127, 122), controlPoint1: CGPointMake(6.28, 133.33), controlPoint2: CGPointMake(68, 127))
        ovalPath.closePath()
        babbelBlueS5.setFill()
        ovalPath.fill()


        //// Oval 2 Drawing
        var oval2Path = UIBezierPath()
        oval2Path.moveToPoint(CGPointMake(224.91, 132.67))
        oval2Path.addCurveToPoint(CGPointMake(246, 103), controlPoint1: CGPointMake(247.5, 114.9), controlPoint2: CGPointMake(251.36, 144))
        oval2Path.addCurveToPoint(CGPointMake(239.96, 73.54), controlPoint1: CGPointMake(244.46, 91.24), controlPoint2: CGPointMake(245.98, 77.38))
        oval2Path.addCurveToPoint(CGPointMake(207.58, 61), controlPoint1: CGPointMake(225, 64), controlPoint2: CGPointMake(223.69, 48.33))
        oval2Path.addCurveToPoint(CGPointMake(164, 97), controlPoint1: CGPointMake(196.54, 69.68), controlPoint2: CGPointMake(191.69, 89.36))
        oval2Path.addCurveToPoint(CGPointMake(109.03, 103), controlPoint1: CGPointMake(135, 105), controlPoint2: CGPointMake(112.96, 93.96))
        oval2Path.addCurveToPoint(CGPointMake(224.91, 132.67), controlPoint1: CGPointMake(101.33, 120.67), controlPoint2: CGPointMake(202.32, 150.44))
        oval2Path.closePath()
        babbelBlueS5.setFill()
        oval2Path.fill()


        //// Group
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRectMake(129, 62, 16, 47))
        babbelBlueS5.setFill()
        rectanglePath.fill()


        //// Oval 3 Drawing
        var oval3Path = UIBezierPath(ovalInRect: CGRectMake(129, 54, 16, 15))
        babbelBlueS5.setFill()
        oval3Path.fill()


        //// Bezier Drawing
        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(149.54, 69.5))
        bezierPath.addCurveToPoint(CGPointMake(149.54, 69.53), controlPoint1: CGPointMake(149.54, 69.5), controlPoint2: CGPointMake(149.54, 69.51))
        bezierPath.addCurveToPoint(CGPointMake(152.1, 70.63), controlPoint1: CGPointMake(150.45, 69.39), controlPoint2: CGPointMake(151.4, 69.76))
        bezierPath.addCurveToPoint(CGPointMake(152.1, 76.11), controlPoint1: CGPointMake(153.3, 72.15), controlPoint2: CGPointMake(153.3, 74.6))
        bezierPath.addCurveToPoint(CGPointMake(149.54, 77.22), controlPoint1: CGPointMake(151.4, 76.99), controlPoint2: CGPointMake(150.45, 77.36))
        bezierPath.addCurveToPoint(CGPointMake(149.54, 77.25), controlPoint1: CGPointMake(149.54, 77.24), controlPoint2: CGPointMake(149.54, 77.25))
        bezierPath.addLineToPoint(CGPointMake(140.9, 77.25))
        bezierPath.addLineToPoint(CGPointMake(140.9, 69.5))
        bezierPath.addLineToPoint(CGPointMake(149.54, 69.5))
        bezierPath.addLineToPoint(CGPointMake(149.54, 69.5))
        bezierPath.closePath()
        babbelBlueS5.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        var bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPointMake(137.12, 80.44))
        bezier2Path.addLineToPoint(CGPointMake(137.12, 88.19))
        bezier2Path.addLineToPoint(CGPointMake(126.32, 88.19))
        bezier2Path.addCurveToPoint(CGPointMake(126.32, 88.16), controlPoint1: CGPointMake(126.32, 88.19), controlPoint2: CGPointMake(126.32, 88.18))
        bezier2Path.addCurveToPoint(CGPointMake(123.13, 87.05), controlPoint1: CGPointMake(125.19, 88.29), controlPoint2: CGPointMake(124, 87.93))
        bezier2Path.addCurveToPoint(CGPointMake(123.13, 81.57), controlPoint1: CGPointMake(121.62, 85.54), controlPoint2: CGPointMake(121.62, 83.08))
        bezier2Path.addCurveToPoint(CGPointMake(126.32, 80.46), controlPoint1: CGPointMake(124, 80.7), controlPoint2: CGPointMake(125.19, 80.33))
        bezier2Path.addCurveToPoint(CGPointMake(126.32, 80.44), controlPoint1: CGPointMake(126.32, 80.45), controlPoint2: CGPointMake(126.32, 80.44))
        bezier2Path.addLineToPoint(CGPointMake(137.12, 80.44))
        bezier2Path.addLineToPoint(CGPointMake(137.12, 80.44))
        bezier2Path.closePath()
        babbelBlueS5.setFill()
        bezier2Path.fill()
    }

    public class func drawBlueMountainDark() {
        //// Color Declarations
        let babbelBlueS10 = AngyWordsStyleKit.babbelBlue.colorWithShadow(0.2)

        //// Oval 3 Drawing
        var oval3Path = UIBezierPath()
        oval3Path.moveToPoint(CGPointMake(113.61, 122.87))
        oval3Path.addCurveToPoint(CGPointMake(100, 94), controlPoint1: CGPointMake(81.97, 120.18), controlPoint2: CGPointMake(60.67, 83.59))
        oval3Path.addCurveToPoint(CGPointMake(221, 15), controlPoint1: CGPointMake(134, 103), controlPoint2: CGPointMake(184, -6))
        oval3Path.addCurveToPoint(CGPointMake(239.78, 68.65), controlPoint1: CGPointMake(229.31, 19.72), controlPoint2: CGPointMake(215, 50))
        oval3Path.addCurveToPoint(CGPointMake(243, 144), controlPoint1: CGPointMake(272.87, 93.54), controlPoint2: CGPointMake(246.61, 140.92))
        oval3Path.addCurveToPoint(CGPointMake(113.61, 122.87), controlPoint1: CGPointMake(229.72, 155.33), controlPoint2: CGPointMake(172.61, 127.87))
        oval3Path.closePath()
        babbelBlueS10.setFill()
        oval3Path.fill()


        //// Oval 4 Drawing
        var oval4Path = UIBezierPath()
        oval4Path.moveToPoint(CGPointMake(15.7, 133.54))
        oval4Path.addCurveToPoint(CGPointMake(-9.81, 103.87), controlPoint1: CGPointMake(-6.89, 115.77), controlPoint2: CGPointMake(-15.17, 144.87))
        oval4Path.addCurveToPoint(CGPointMake(-0.11, 68.34), controlPoint1: CGPointMake(-7.84, 88.78), controlPoint2: CGPointMake(-12.41, 69.13))
        oval4Path.addCurveToPoint(CGPointMake(33.04, 61.87), controlPoint1: CGPointMake(21, 67), controlPoint2: CGPointMake(18.76, 50.64))
        oval4Path.addCurveToPoint(CGPointMake(86, 89), controlPoint1: CGPointMake(44.07, 70.54), controlPoint2: CGPointMake(58.31, 81.36))
        oval4Path.addCurveToPoint(CGPointMake(140, 89), controlPoint1: CGPointMake(115, 97), controlPoint2: CGPointMake(136.06, 79.96))
        oval4Path.addCurveToPoint(CGPointMake(15.7, 133.54), controlPoint1: CGPointMake(147.7, 106.67), controlPoint2: CGPointMake(38.29, 151.31))
        oval4Path.closePath()
        babbelBlueS10.setFill()
        oval4Path.fill()


        //// Group
        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRectMake(69, 52, 11, 47))
        babbelBlueS10.setFill()
        rectangle2Path.fill()


        //// Oval 2 Drawing
        var oval2Path = UIBezierPath(ovalInRect: CGRectMake(69, 43, 11, 16))
        babbelBlueS10.setFill()
        oval2Path.fill()


        //// Bezier 3 Drawing
        var bezier3Path = UIBezierPath()
        bezier3Path.moveToPoint(CGPointMake(85.48, 74.83))
        bezier3Path.addCurveToPoint(CGPointMake(85.48, 74.86), controlPoint1: CGPointMake(85.48, 74.83), controlPoint2: CGPointMake(85.48, 74.84))
        bezier3Path.addCurveToPoint(CGPointMake(88.08, 75.99), controlPoint1: CGPointMake(86.41, 74.72), controlPoint2: CGPointMake(87.37, 75.1))
        bezier3Path.addCurveToPoint(CGPointMake(88.08, 81.57), controlPoint1: CGPointMake(89.31, 77.53), controlPoint2: CGPointMake(89.31, 80.03))
        bezier3Path.addCurveToPoint(CGPointMake(85.48, 82.69), controlPoint1: CGPointMake(87.37, 82.46), controlPoint2: CGPointMake(86.41, 82.83))
        bezier3Path.addCurveToPoint(CGPointMake(85.48, 82.72), controlPoint1: CGPointMake(85.48, 82.71), controlPoint2: CGPointMake(85.48, 82.72))
        bezier3Path.addLineToPoint(CGPointMake(76.68, 82.72))
        bezier3Path.addLineToPoint(CGPointMake(76.68, 74.83))
        bezier3Path.addLineToPoint(CGPointMake(85.48, 74.83))
        bezier3Path.addLineToPoint(CGPointMake(85.48, 74.83))
        bezier3Path.closePath()
        babbelBlueS10.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        var bezier4Path = UIBezierPath()
        bezier4Path.moveToPoint(CGPointMake(75.95, 63.57))
        bezier4Path.addLineToPoint(CGPointMake(75.95, 71.46))
        bezier4Path.addLineToPoint(CGPointMake(65.99, 71.46))
        bezier4Path.addCurveToPoint(CGPointMake(65.99, 71.43), controlPoint1: CGPointMake(65.99, 71.46), controlPoint2: CGPointMake(65.99, 71.45))
        bezier4Path.addCurveToPoint(CGPointMake(63.04, 70.3), controlPoint1: CGPointMake(64.94, 71.57), controlPoint2: CGPointMake(63.85, 71.2))
        bezier4Path.addCurveToPoint(CGPointMake(63.04, 64.73), controlPoint1: CGPointMake(61.65, 68.76), controlPoint2: CGPointMake(61.65, 66.27))
        bezier4Path.addCurveToPoint(CGPointMake(65.99, 63.6), controlPoint1: CGPointMake(63.85, 63.83), controlPoint2: CGPointMake(64.94, 63.46))
        bezier4Path.addCurveToPoint(CGPointMake(65.99, 63.57), controlPoint1: CGPointMake(65.99, 63.58), controlPoint2: CGPointMake(65.99, 63.57))
        bezier4Path.addLineToPoint(CGPointMake(75.95, 63.57))
        bezier4Path.addLineToPoint(CGPointMake(75.95, 63.57))
        bezier4Path.closePath()
        babbelBlueS10.setFill()
        bezier4Path.fill()


        //// Bezier Drawing
        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(81.12, 51.31))
        bezierPath.addCurveToPoint(CGPointMake(81.12, 51.34), controlPoint1: CGPointMake(81.12, 51.31), controlPoint2: CGPointMake(81.12, 51.32))
        bezierPath.addCurveToPoint(CGPointMake(83.72, 52.47), controlPoint1: CGPointMake(82.04, 51.2), controlPoint2: CGPointMake(83.01, 51.58))
        bezierPath.addCurveToPoint(CGPointMake(83.72, 58.05), controlPoint1: CGPointMake(84.94, 54.01), controlPoint2: CGPointMake(84.94, 56.51))
        bezierPath.addCurveToPoint(CGPointMake(81.12, 59.17), controlPoint1: CGPointMake(83.01, 58.94), controlPoint2: CGPointMake(82.04, 59.31))
        bezierPath.addCurveToPoint(CGPointMake(81.12, 59.2), controlPoint1: CGPointMake(81.12, 59.19), controlPoint2: CGPointMake(81.12, 59.2))
        bezierPath.addLineToPoint(CGPointMake(72.32, 59.2))
        bezierPath.addLineToPoint(CGPointMake(72.32, 51.31))
        bezierPath.addLineToPoint(CGPointMake(81.12, 51.31))
        bezierPath.addLineToPoint(CGPointMake(81.12, 51.31))
        bezierPath.closePath()
        babbelBlueS10.setFill()
        bezierPath.fill()
    }

    public class func drawCanvas1() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Group
        //// Oval Drawing
        var ovalPath = UIBezierPath(ovalInRect: CGRectMake(4, 0, 17, 12))
        UIColor.whiteColor().setFill()
        ovalPath.fill()


        //// Oval 2 Drawing
        var oval2Path = UIBezierPath(ovalInRect: CGRectMake(14, 0, 16, 14))
        UIColor.whiteColor().setFill()
        oval2Path.fill()


        //// Oval 3 Drawing
        var oval3Path = UIBezierPath(ovalInRect: CGRectMake(14, 12, 16, 16))
        UIColor.whiteColor().setFill()
        oval3Path.fill()


        //// Oval 4 Drawing
        var oval4Path = UIBezierPath(ovalInRect: CGRectMake(0, 8, 16, 14))
        UIColor.whiteColor().setFill()
        oval4Path.fill()


        //// Oval 5 Drawing
        var oval5Path = UIBezierPath(ovalInRect: CGRectMake(4, 18, 16, 14))
        UIColor.whiteColor().setFill()
        oval5Path.fill()


        //// Oval 6 Drawing
        var oval6Path = UIBezierPath(ovalInRect: CGRectMake(10, 7, 16, 16))
        UIColor.whiteColor().setFill()
        oval6Path.fill()


        //// Oval 7 Drawing
        var oval7Path = UIBezierPath(ovalInRect: CGRectMake(26, 4, 16, 14))
        UIColor.whiteColor().setFill()
        oval7Path.fill()


        //// Bezier Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 11.26, 17.36)
        CGContextRotateCTM(context, -169.69 * CGFloat(M_PI) / 180)

        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(1.47, -4.07))
        bezierPath.addCurveToPoint(CGPointMake(-0.25, 4.05), controlPoint1: CGPointMake(-3.92, -1.25), controlPoint2: CGPointMake(-0.25, 4.05))
        bezierPath.lineCapStyle = kCGLineCapRound;

        AngyWordsStyleKit.babbelGray50.setStroke()
        bezierPath.lineWidth = 1
        bezierPath.stroke()

        CGContextRestoreGState(context)


        //// Bezier 2 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 18.26, 21.36)
        CGContextRotateCTM(context, 122.97 * CGFloat(M_PI) / 180)

        var bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPointMake(1.47, -4.07))
        bezier2Path.addCurveToPoint(CGPointMake(-0.36, 2.49), controlPoint1: CGPointMake(-1.6, -1.88), controlPoint2: CGPointMake(-0.36, 2.49))
        bezier2Path.lineCapStyle = kCGLineCapRound;

        AngyWordsStyleKit.babbelGray50.setStroke()
        bezier2Path.lineWidth = 1
        bezier2Path.stroke()

        CGContextRestoreGState(context)


        //// Bezier 3 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 28.26, 11.36)
        CGContextRotateCTM(context, -12.57 * CGFloat(M_PI) / 180)

        var bezier3Path = UIBezierPath()
        bezier3Path.moveToPoint(CGPointMake(1.47, -4.07))
        bezier3Path.addCurveToPoint(CGPointMake(-0.89, 1.92), controlPoint1: CGPointMake(-2.49, -2.08), controlPoint2: CGPointMake(-0.89, 1.92))
        bezier3Path.lineCapStyle = kCGLineCapRound;

        AngyWordsStyleKit.babbelGray50.setStroke()
        bezier3Path.lineWidth = 1
        bezier3Path.stroke()

        CGContextRestoreGState(context)


        //// Bezier 4 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 19.26, 8.36)
        CGContextRotateCTM(context, -50.01 * CGFloat(M_PI) / 180)

        var bezier4Path = UIBezierPath()
        bezier4Path.moveToPoint(CGPointMake(1.47, -4.07))
        bezier4Path.addCurveToPoint(CGPointMake(-0.89, 1.92), controlPoint1: CGPointMake(-2.49, -2.08), controlPoint2: CGPointMake(-0.89, 1.92))
        bezier4Path.lineCapStyle = kCGLineCapRound;

        AngyWordsStyleKit.babbelGray50.setStroke()
        bezier4Path.lineWidth = 1
        bezier4Path.stroke()

        CGContextRestoreGState(context)
    }

    //// Generated Images

    public class var imageOfCanvasCloud: UIImage {
        if Cache.imageOfCanvasCloud != nil {
            return Cache.imageOfCanvasCloud!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(200, 120), false, 0)
            AngyWordsStyleKit.drawCanvasCloud()

        Cache.imageOfCanvasCloud = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasCloud!
    }

    public class var imageOfCanvasCactus: UIImage {
        if Cache.imageOfCanvasCactus != nil {
            return Cache.imageOfCanvasCactus!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(217, 362), false, 0)
            AngyWordsStyleKit.drawCanvasCactus()

        Cache.imageOfCanvasCactus = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasCactus!
    }

    public class var imageOfCanvasStamm: UIImage {
        if Cache.imageOfCanvasStamm != nil {
            return Cache.imageOfCanvasStamm!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(70, 138), false, 0)
            AngyWordsStyleKit.drawCanvasStamm()

        Cache.imageOfCanvasStamm = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasStamm!
    }

    public class var imageOfCanvasSchleuderVorne: UIImage {
        if Cache.imageOfCanvasSchleuderVorne != nil {
            return Cache.imageOfCanvasSchleuderVorne!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(70, 138), false, 0)
            AngyWordsStyleKit.drawCanvasSchleuderVorne()

        Cache.imageOfCanvasSchleuderVorne = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasSchleuderVorne!
    }

    public class var imageOfCanvasSchleuderHinten: UIImage {
        if Cache.imageOfCanvasSchleuderHinten != nil {
            return Cache.imageOfCanvasSchleuderHinten!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(70, 138), false, 0)
            AngyWordsStyleKit.drawCanvasSchleuderHinten()

        Cache.imageOfCanvasSchleuderHinten = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasSchleuderHinten!
    }

    public class var imageOfCanvasSling: UIImage {
        if Cache.imageOfCanvasSling != nil {
            return Cache.imageOfCanvasSling!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(8, 24), false, 0)
            AngyWordsStyleKit.drawCanvasSling()

        Cache.imageOfCanvasSling = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasSling!
    }

    public class var imageOfCanvasEule: UIImage {
        if Cache.imageOfCanvasEule != nil {
            return Cache.imageOfCanvasEule!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(40, 40), false, 0)
            AngyWordsStyleKit.drawCanvasEule()

        Cache.imageOfCanvasEule = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasEule!
    }

    public class var imageOfCanvasBabbelFigure: UIImage {
        if Cache.imageOfCanvasBabbelFigure != nil {
            return Cache.imageOfCanvasBabbelFigure!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(37, 47), false, 0)
            AngyWordsStyleKit.drawCanvasBabbelFigure()

        Cache.imageOfCanvasBabbelFigure = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasBabbelFigure!
    }

    public class var imageOfCanvasWoodBlockHorizontal: UIImage {
        if Cache.imageOfCanvasWoodBlockHorizontal != nil {
            return Cache.imageOfCanvasWoodBlockHorizontal!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(80, 16), false, 0)
            AngyWordsStyleKit.drawCanvasWoodBlockHorizontal()

        Cache.imageOfCanvasWoodBlockHorizontal = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasWoodBlockHorizontal!
    }

    public class var imageOfCanvasWoodBlockVertical: UIImage {
        if Cache.imageOfCanvasWoodBlockVertical != nil {
            return Cache.imageOfCanvasWoodBlockVertical!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(16, 80), false, 0)
            AngyWordsStyleKit.drawCanvasWoodBlockVertical()

        Cache.imageOfCanvasWoodBlockVertical = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasWoodBlockVertical!
    }

    public class var imageOfCanvasSand: UIImage {
        if Cache.imageOfCanvasSand != nil {
            return Cache.imageOfCanvasSand!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(64, 64), false, 0)
            AngyWordsStyleKit.drawCanvasSand()

        Cache.imageOfCanvasSand = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasSand!
    }

    public class var imageOfCanvasSandLines: UIImage {
        if Cache.imageOfCanvasSandLines != nil {
            return Cache.imageOfCanvasSandLines!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(8, 8), false, 0)
            AngyWordsStyleKit.drawCanvasSandLines()

        Cache.imageOfCanvasSandLines = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasSandLines!
    }

    public class var imageOfCanvasLetterB: UIImage {
        if Cache.imageOfCanvasLetterB != nil {
            return Cache.imageOfCanvasLetterB!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(40, 40), false, 0)
            AngyWordsStyleKit.drawCanvasLetterB()

        Cache.imageOfCanvasLetterB = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasLetterB!
    }

    public class var imageOfCanvasLetterA: UIImage {
        if Cache.imageOfCanvasLetterA != nil {
            return Cache.imageOfCanvasLetterA!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(40, 40), false, 0)
            AngyWordsStyleKit.drawCanvasLetterA()

        Cache.imageOfCanvasLetterA = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasLetterA!
    }

    public class var imageOfCanvasLetterE: UIImage {
        if Cache.imageOfCanvasLetterE != nil {
            return Cache.imageOfCanvasLetterE!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(40, 40), false, 0)
            AngyWordsStyleKit.drawCanvasLetterE()

        Cache.imageOfCanvasLetterE = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasLetterE!
    }

    public class var imageOfCanvasLetterL: UIImage {
        if Cache.imageOfCanvasLetterL != nil {
            return Cache.imageOfCanvasLetterL!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(40, 40), false, 0)
            AngyWordsStyleKit.drawCanvasLetterL()

        Cache.imageOfCanvasLetterL = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasLetterL!
    }

    public class var imageOfCanvasLetterH: UIImage {
        if Cache.imageOfCanvasLetterH != nil {
            return Cache.imageOfCanvasLetterH!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(40, 40), false, 0)
            AngyWordsStyleKit.drawCanvasLetterH()

        Cache.imageOfCanvasLetterH = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasLetterH!
    }

    public class var imageOfCanvasLetterC: UIImage {
        if Cache.imageOfCanvasLetterC != nil {
            return Cache.imageOfCanvasLetterC!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(40, 40), false, 0)
            AngyWordsStyleKit.drawCanvasLetterC()

        Cache.imageOfCanvasLetterC = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasLetterC!
    }

    public class var imageOfCanvasLetterK: UIImage {
        if Cache.imageOfCanvasLetterK != nil {
            return Cache.imageOfCanvasLetterK!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(40, 40), false, 0)
            AngyWordsStyleKit.drawCanvasLetterK()

        Cache.imageOfCanvasLetterK = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasLetterK!
    }

    public class var imageOfCanvasLetterD: UIImage {
        if Cache.imageOfCanvasLetterD != nil {
            return Cache.imageOfCanvasLetterD!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(40, 40), false, 0)
            AngyWordsStyleKit.drawCanvasLetterD()

        Cache.imageOfCanvasLetterD = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasLetterD!
    }

    public class var imageOfCanvasLetterY: UIImage {
        if Cache.imageOfCanvasLetterY != nil {
            return Cache.imageOfCanvasLetterY!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(40, 40), false, 0)
            AngyWordsStyleKit.drawCanvasLetterY()

        Cache.imageOfCanvasLetterY = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasLetterY!
    }

    public class var imageOfCanvasLetter2: UIImage {
        if Cache.imageOfCanvasLetter2 != nil {
            return Cache.imageOfCanvasLetter2!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(40, 40), false, 0)
            AngyWordsStyleKit.drawCanvasLetter2()

        Cache.imageOfCanvasLetter2 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasLetter2!
    }

    public class var imageOfCanvasLetter: UIImage {
        if Cache.imageOfCanvasLetter != nil {
            return Cache.imageOfCanvasLetter!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(40, 40), false, 0)
            AngyWordsStyleKit.drawCanvasLetter()

        Cache.imageOfCanvasLetter = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvasLetter!
    }

    public class var imageOfBlueMountain: UIImage {
        if Cache.imageOfBlueMountain != nil {
            return Cache.imageOfBlueMountain!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(240, 120), false, 0)
            AngyWordsStyleKit.drawBlueMountain()

        Cache.imageOfBlueMountain = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfBlueMountain!
    }

    public class var imageOfBlueMountainDark: UIImage {
        if Cache.imageOfBlueMountainDark != nil {
            return Cache.imageOfBlueMountainDark!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(240, 120), false, 0)
            AngyWordsStyleKit.drawBlueMountainDark()

        Cache.imageOfBlueMountainDark = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfBlueMountainDark!
    }

    //// Customization Infrastructure

    @IBOutlet var canvasCloudTargets: [AnyObject]! {
        get { return Cache.canvasCloudTargets }
        set {
            Cache.canvasCloudTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasCloud)
            }
        }
    }

    @IBOutlet var canvasCactusTargets: [AnyObject]! {
        get { return Cache.canvasCactusTargets }
        set {
            Cache.canvasCactusTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasCactus)
            }
        }
    }

    @IBOutlet var canvasStammTargets: [AnyObject]! {
        get { return Cache.canvasStammTargets }
        set {
            Cache.canvasStammTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasStamm)
            }
        }
    }

    @IBOutlet var canvasSchleuderVorneTargets: [AnyObject]! {
        get { return Cache.canvasSchleuderVorneTargets }
        set {
            Cache.canvasSchleuderVorneTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasSchleuderVorne)
            }
        }
    }

    @IBOutlet var canvasSchleuderHintenTargets: [AnyObject]! {
        get { return Cache.canvasSchleuderHintenTargets }
        set {
            Cache.canvasSchleuderHintenTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasSchleuderHinten)
            }
        }
    }

    @IBOutlet var canvasSlingTargets: [AnyObject]! {
        get { return Cache.canvasSlingTargets }
        set {
            Cache.canvasSlingTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasSling)
            }
        }
    }

    @IBOutlet var canvasEuleTargets: [AnyObject]! {
        get { return Cache.canvasEuleTargets }
        set {
            Cache.canvasEuleTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasEule)
            }
        }
    }

    @IBOutlet var canvasBabbelFigureTargets: [AnyObject]! {
        get { return Cache.canvasBabbelFigureTargets }
        set {
            Cache.canvasBabbelFigureTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasBabbelFigure)
            }
        }
    }

    @IBOutlet var canvasWoodBlockHorizontalTargets: [AnyObject]! {
        get { return Cache.canvasWoodBlockHorizontalTargets }
        set {
            Cache.canvasWoodBlockHorizontalTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasWoodBlockHorizontal)
            }
        }
    }

    @IBOutlet var canvasWoodBlockVerticalTargets: [AnyObject]! {
        get { return Cache.canvasWoodBlockVerticalTargets }
        set {
            Cache.canvasWoodBlockVerticalTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasWoodBlockVertical)
            }
        }
    }

    @IBOutlet var canvasSandTargets: [AnyObject]! {
        get { return Cache.canvasSandTargets }
        set {
            Cache.canvasSandTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasSand)
            }
        }
    }

    @IBOutlet var canvasSandLinesTargets: [AnyObject]! {
        get { return Cache.canvasSandLinesTargets }
        set {
            Cache.canvasSandLinesTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasSandLines)
            }
        }
    }

    @IBOutlet var canvasLetterBTargets: [AnyObject]! {
        get { return Cache.canvasLetterBTargets }
        set {
            Cache.canvasLetterBTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasLetterB)
            }
        }
    }

    @IBOutlet var canvasLetterATargets: [AnyObject]! {
        get { return Cache.canvasLetterATargets }
        set {
            Cache.canvasLetterATargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasLetterA)
            }
        }
    }

    @IBOutlet var canvasLetterETargets: [AnyObject]! {
        get { return Cache.canvasLetterETargets }
        set {
            Cache.canvasLetterETargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasLetterE)
            }
        }
    }

    @IBOutlet var canvasLetterLTargets: [AnyObject]! {
        get { return Cache.canvasLetterLTargets }
        set {
            Cache.canvasLetterLTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasLetterL)
            }
        }
    }

    @IBOutlet var canvasLetterHTargets: [AnyObject]! {
        get { return Cache.canvasLetterHTargets }
        set {
            Cache.canvasLetterHTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasLetterH)
            }
        }
    }

    @IBOutlet var canvasLetterCTargets: [AnyObject]! {
        get { return Cache.canvasLetterCTargets }
        set {
            Cache.canvasLetterCTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasLetterC)
            }
        }
    }

    @IBOutlet var canvasLetterKTargets: [AnyObject]! {
        get { return Cache.canvasLetterKTargets }
        set {
            Cache.canvasLetterKTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasLetterK)
            }
        }
    }

    @IBOutlet var canvasLetterDTargets: [AnyObject]! {
        get { return Cache.canvasLetterDTargets }
        set {
            Cache.canvasLetterDTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasLetterD)
            }
        }
    }

    @IBOutlet var canvasLetterYTargets: [AnyObject]! {
        get { return Cache.canvasLetterYTargets }
        set {
            Cache.canvasLetterYTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasLetterY)
            }
        }
    }

    @IBOutlet var canvasLetter2Targets: [AnyObject]! {
        get { return Cache.canvasLetter2Targets }
        set {
            Cache.canvasLetter2Targets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasLetter2)
            }
        }
    }

    @IBOutlet var canvasLetterTargets: [AnyObject]! {
        get { return Cache.canvasLetterTargets }
        set {
            Cache.canvasLetterTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfCanvasLetter)
            }
        }
    }

    @IBOutlet var blueMountainTargets: [AnyObject]! {
        get { return Cache.blueMountainTargets }
        set {
            Cache.blueMountainTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfBlueMountain)
            }
        }
    }

    @IBOutlet var blueMountainDarkTargets: [AnyObject]! {
        get { return Cache.blueMountainDarkTargets }
        set {
            Cache.blueMountainDarkTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AngyWordsStyleKit.imageOfBlueMountainDark)
            }
        }
    }

}



extension UIColor {
    func colorWithHue(newHue: CGFloat) -> UIColor {
        var saturation: CGFloat = 1.0, brightness: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getHue(nil, saturation: &saturation, brightness: &brightness, alpha: &alpha)
        return UIColor(hue: newHue, saturation: saturation, brightness: brightness, alpha: alpha)
    }
    func colorWithSaturation(newSaturation: CGFloat) -> UIColor {
        var hue: CGFloat = 1.0, brightness: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getHue(&hue, saturation: nil, brightness: &brightness, alpha: &alpha)
        return UIColor(hue: hue, saturation: newSaturation, brightness: brightness, alpha: alpha)
    }
    func colorWithBrightness(newBrightness: CGFloat) -> UIColor {
        var hue: CGFloat = 1.0, saturation: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getHue(&hue, saturation: &saturation, brightness: nil, alpha: &alpha)
        return UIColor(hue: hue, saturation: saturation, brightness: newBrightness, alpha: alpha)
    }
    func colorWithAlpha(newAlpha: CGFloat) -> UIColor {
        var hue: CGFloat = 1.0, saturation: CGFloat = 1.0, brightness: CGFloat = 1.0
        self.getHue(&hue, saturation: &saturation, brightness: &brightness, alpha: nil)
        return UIColor(hue: hue, saturation: saturation, brightness: brightness, alpha: newAlpha)
    }
    func colorWithHighlight(highlight: CGFloat) -> UIColor {
        var red: CGFloat = 1.0, green: CGFloat = 1.0, blue: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getRed(&red, green: &green, blue: &blue, alpha: &alpha)
        return UIColor(red: red * (1-highlight) + highlight, green: green * (1-highlight) + highlight, blue: blue * (1-highlight) + highlight, alpha: alpha * (1-highlight) + highlight)
    }
    func colorWithShadow(shadow: CGFloat) -> UIColor {
        var red: CGFloat = 1.0, green: CGFloat = 1.0, blue: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getRed(&red, green: &green, blue: &blue, alpha: &alpha)
        return UIColor(red: red * (1-shadow), green: green * (1-shadow), blue: blue * (1-shadow), alpha: alpha * (1-shadow) + shadow)
    }
    func blendedColorWithFraction(fraction: CGFloat, ofColor color: UIColor) -> UIColor {
        var r1: CGFloat = 1.0, g1: CGFloat = 1.0, b1: CGFloat = 1.0, a1: CGFloat = 1.0
        var r2: CGFloat = 1.0, g2: CGFloat = 1.0, b2: CGFloat = 1.0, a2: CGFloat = 1.0

        self.getRed(&r1, green: &g1, blue: &b1, alpha: &a1)
        color.getRed(&r2, green: &g2, blue: &b2, alpha: &a2)

        return UIColor(red: r1 * (1 - fraction) + r2 * fraction,
            green: g1 * (1 - fraction) + g2 * fraction,
            blue: b1 * (1 - fraction) + b2 * fraction,
            alpha: a1 * (1 - fraction) + a2 * fraction);
    }
}

@objc protocol StyleKitSettableImage {
    func setImage(image: UIImage!)
}

@objc protocol StyleKitSettableSelectedImage {
    func setSelectedImage(image: UIImage!)
}
